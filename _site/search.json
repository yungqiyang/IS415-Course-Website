[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IS415 Course Website",
    "section": "",
    "text": "Hello everybody, my name is Qi Yang and this is my progress through IS415 - Geospatial Analytics and Applications!"
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_01/Take-Home_Exercise_01.html",
    "href": "Take-Home_Exercise/Take-Home_Exercise_01/Take-Home_Exercise_01.html",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of Grab’s hailing services in Singapore",
    "section": "",
    "text": "Loading the necessary R-packages\n\n\nReveal Code\npacman::p_load(sf, tidyverse, arrow, lubridate, tmap, maptools, spatstat, spNetwork, htmlwidgets)\n\n\n\n\nImporting the datasets of interest\n\nGrab-Posisi Data:\nThe Grab-Posisi data is contained within 10 segmented parquet files, thus, the read_parquet function from the Arrow package is required. Upon loading, the files are combined into 1 large dataset and saved.\n\n\nReveal Code\ngrab_df &lt;- read_parquet(\"Data/Geospatial/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\n\nfor (i in 1:9) {\n  grab_df &lt;- grab_df %&gt;%\n    rbind(read_parquet(paste0(\"Data/Geospatial/GrabPosisi/part-0000\", as.character(i), \"-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")))\n}\n\n\nWe can see that the Grab-Posisi dataset in its entirety is way too large for computation.\n\n\nReveal Code\nglimpse(grab_df)\n\ngrab_df$pingtimestamp &lt;- as_datetime(grab_df$pingtimestamp)\n\n\n\nGrab-Posisi is stored here in case there is a need for it in its entirety.\n\n\nReveal Code\nwrite_parquet(grab_df, \"Data/Geospatial/GrabPosisi/Grab_Posisi.parquet\")\n\n\nAs we are interested in the analysis of only the origins of Grab calls in Singapore, the Grab-Posisi data is subset here to reduce the size of the dataframe in the R-Environment to the necessary only.\n\n\nReveal Code\ngrab_origin_df &lt;- grab_df %&gt;% \n  group_by(trj_id) %&gt;% \n  arrange(pingtimestamp) %&gt;% \n  filter(row_number() == 1) %&gt;% \n  mutate(weekday = wday(pingtimestamp, label = TRUE, abbr = TRUE), start_hr = factor(hour(pingtimestamp)), day = factor(mday(pingtimestamp)))\n\nglimpse(grab_origin_df)\n\nwrite_rds(grab_origin_df, \"Data/Geospatial/RDS/Grab_Origins_Posisi.rds\")\n\n\n\n\n\nReveal Code\ngrab_origin_df &lt;- read_rds(\"Data/Geospatial/RDS/Grab_Origins_Posisi.rds\")\n\n\n\n\nSingapore Planning Zone and Road Network Data\n\n\nReveal Code\nmpsz2019 &lt;- \n  st_read(\"Data/Geospatial/MPSZ-2019\", layer = \"MPSZ-2019\") %&gt;% \n  st_transform(crs = 3414)\n\n\nReading layer `MPSZ-2019' from data source \n  `C:\\Users\\yungq\\Desktop\\SMU Modules\\Y4S1\\Geospatial Analysis and Applications\\IS415 Course Website\\Take-Home_Exercise\\Take-Home_Exercise_01\\Data\\Geospatial\\MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nReveal Code\nsummary(mpsz2019)\n\n\n  SUBZONE_N          SUBZONE_C          PLN_AREA_N         PLN_AREA_C       \n Length:332         Length:332         Length:332         Length:332        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n   REGION_N           REGION_C                  geometry  \n Length:332         Length:332         MULTIPOLYGON :332  \n Class :character   Class :character   epsg:3414    :  0  \n Mode  :character   Mode  :character   +proj=tmer...:  0  \n\n\n\n\nReveal Code\nroads &lt;-\n  st_read(\"Data/Geospatial/OSM\", layer = \"gis_osm_roads_free_1\") %&gt;%\n  st_transform(crs = 3414)\n\nsummary(roads)\n\n\n\nPlotting the Master-Plan Subzone geospatial data for visualisation\n\n\nReveal Code\nmpsz2019_plot &lt;- mpsz2019 %&gt;%\n  tm_shape() +\n  tm_polygons(col = \"lightyellow\", border.col = \"navy\") +\n  tm_layout(main.title = \"Singapore Master Plan Boundaries 2019\", main.title.size = 1) + tm_compass(size = 1)\n\ntmap_save(tm = mpsz2019_plot, \"Screenshots/mpsz2019.png\")\n\n\n\nFrom the plot, we can see that the Master-Plan Subzone Data includes the outer islands of Singapore.\nTo observe if it is impactful, we plot the road network upon the previous layer.\n\n\nReveal Code\nmpsz_w_roads2019_plot &lt;-\n  tm_shape(mpsz2019) +\n  tm_polygons(col = \"lightyellow\", border.col = \"orange\", border.alpha = 0.6) + tm_layout(main.title = \"Singapore Road Network 2019\", main.title.size = 1) +\n  tm_compass(size = 1) +\n  tm_shape(roads) +\n  tm_lines()\n\ntmap_save(tm = mpsz_w_roads2019_plot, \"Screenshots/mpsz_w_roads2019.png\")\n\n\n\nHere we can observe that there are road networks present outside the mainland in the dataset. Thus, we need to remove them if mainland Singapore is the scope of the study. First though, we should investigate the Grab-Posisi Data further.\n\n\nTransforming the Grab-Posisi Data into a simple features object\n\n\nReveal Code\ngrab_origin_sf &lt;- grab_origin_df %&gt;%\n  st_as_sf(coords = c(\"rawlng\", \"rawlat\"), crs = 4326) %&gt;%\n  st_transform(crs = 3414)\n\nsummary(grab_origin_sf)\n\n\n    trj_id          driving_mode          osname         \n Length:28000       Length:28000       Length:28000      \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n                                                         \n pingtimestamp                        speed           bearing     \n Min.   :2019-04-08 00:09:26.00   Min.   :-1.000   Min.   :  0.0  \n 1st Qu.:2019-04-11 08:48:29.25   1st Qu.: 3.590   1st Qu.: 90.0  \n Median :2019-04-15 00:08:48.00   Median : 9.945   Median :179.0  \n Mean   :2019-04-14 21:29:59.93   Mean   : 9.566   Mean   :172.5  \n 3rd Qu.:2019-04-18 10:47:59.25   3rd Qu.:14.550   3rd Qu.:256.0  \n Max.   :2019-04-21 23:33:28.00   Max.   :30.949   Max.   :359.0  \n                                                                  \n    accuracy       weekday       start_hr          day       \n Min.   :  1.000   Sun:3983   9      : 2104   17     : 2012  \n 1st Qu.:  3.900   Mon:3975   10     : 2104   18     : 2008  \n Median :  6.000   Tue:4008   0      : 1941   12     : 2007  \n Mean   :  7.617   Wed:4016   1      : 1919   9      : 2004  \n 3rd Qu.: 10.000   Thu:4008   8      : 1541   16     : 2004  \n Max.   :728.000   Fri:4002   7      : 1539   13     : 2004  \n                   Sat:4008   (Other):16852   (Other):15961  \n          geometry    \n POINT        :28000  \n epsg:3414    :    0  \n +proj=tmer...:    0  \n                      \n                      \n                      \n                      \n\n\n\n\nTransforming the Grab-Posisi data furthur into Spatial Points, generic sp and ppp objects\n\n\nReveal Code\ngrab_origin_spatial &lt;- grab_origin_sf %&gt;%\n  as_Spatial()\n\nsummary(grab_origin_spatial)\n\n\nObject of class SpatialPointsDataFrame\nCoordinates:\n                min      max\ncoords.x1  3628.243 49845.23\ncoords.x2 25198.140 49689.64\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nNumber of points: 28000\nData attributes:\n    trj_id          driving_mode          osname         \n Length:28000       Length:28000       Length:28000      \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n                                                         \n pingtimestamp                        speed           bearing     \n Min.   :2019-04-08 00:09:26.00   Min.   :-1.000   Min.   :  0.0  \n 1st Qu.:2019-04-11 08:48:29.25   1st Qu.: 3.590   1st Qu.: 90.0  \n Median :2019-04-15 00:08:48.00   Median : 9.945   Median :179.0  \n Mean   :2019-04-14 21:29:59.93   Mean   : 9.566   Mean   :172.5  \n 3rd Qu.:2019-04-18 10:47:59.25   3rd Qu.:14.550   3rd Qu.:256.0  \n Max.   :2019-04-21 23:33:28.00   Max.   :30.949   Max.   :359.0  \n                                                                  \n    accuracy       weekday       start_hr          day       \n Min.   :  1.000   Sun:3983   9      : 2104   17     : 2012  \n 1st Qu.:  3.900   Mon:3975   10     : 2104   18     : 2008  \n Median :  6.000   Tue:4008   0      : 1941   12     : 2007  \n Mean   :  7.617   Wed:4016   1      : 1919   9      : 2004  \n 3rd Qu.: 10.000   Thu:4008   8      : 1541   16     : 2004  \n Max.   :728.000   Fri:4002   7      : 1539   13     : 2004  \n                   Sat:4008   (Other):16852   (Other):15961  \n\n\nReveal Code\ngrab_origin_sp &lt;- grab_origin_spatial %&gt;%\n  as(\"SpatialPoints\")\n\nsummary(grab_origin_sp)\n\n\nObject of class SpatialPoints\nCoordinates:\n                min      max\ncoords.x1  3628.243 49845.23\ncoords.x2 25198.140 49689.64\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nNumber of points: 28000\n\n\nReveal Code\ngrab_origin_ppp &lt;- grab_origin_sp %&gt;%\n  as(\"ppp\")\n\nsummary(grab_origin_ppp)\n\n\nPlanar point pattern:  28000 points\nAverage intensity 2.473666e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [3628.24, 49845.23] x [25198.14, 49689.64] units\n                    (46220 x 24490 units)\nWindow area = 1131920000 square units\n\n\n\n\n\nVisualising the Grab-Posisi origins data in interactive view\n\n\nReveal Code\ngrab_origins_interactive &lt;- tm_shape(grab_origin_sf) +\n  tm_dots(alpha = 0.4, size = 0.03, col = \"green\") +\n  tm_layout(main.title = \"Grab-Posisi Origin points across Singapore\")\n\ngrab_origins_interactive = tmap_leaflet(grab_origins_interactive)\n\nsaveWidget(widget = grab_origins_interactive, file = \"Screenshots/grab_origins_interactive.html\")\n\n\n\n \n\nIf we zoom in, it appears that there are little to no overlaps in the point coordinates in the data. To confirm,\n\n\nReveal Code\nany(duplicated(grab_origin_ppp))\n\n\n[1] FALSE\n\n\nThis is good as there is no need to account for point duplication in the dataset.\nNow, we visualise the spread of the point of origins of Grab calls in Singapore.\n\n\nReveal Code\ngrab_origin_sg_plot &lt;- tm_shape(coastal_outline) +\n  tm_polygons(col = \"lightyellow\", border.col = \"blue\", lwd = 1.5) +\n  tm_layout(main.title = \"Origins of Grab Trips in Singapore (within Mainland only)\") +\n  tm_shape(grab_origin_sf) +\n  tm_dots(col = \"darkgreen\", alpha = 0.5)\n\ntmap_save(grab_origin_sg_plot, \"Screenshots/Grab_Origins_SG.png\")\n\n\n\nIt is clear that the central region of Singapore handles more calls than other parts of the country. This of course makes sense as the central region is where the central business district lies, and considering the difference in cost of Grab vs. other forms of public transport, it should be expected that most customers of Grab fall within the CBD area.\nConsidering the size of the datasets and the complexity of the road network, it makes sense to try to limit the area of study so our machines can handle the computation reasonably. Considering the spread of the data, the central region is chosen as it focus area.\n\n\nExtracting the “Central Region” polygons\nOnly specific polygons within the “Central Region” is chosen to further narrow down the scope of study to a feasible size.\n\n\nReveal Code\ncentral_sg &lt;- mpsz2019[mpsz2019$PLN_AREA_N %in% c(\"DOWNTOWN CORE\", \"MARINA EAST\", \"MARINA SOUTH\", \"MUSEUM\", \"NEWTON\", \"ORCHARD\", \"OUTRAM\", \"RIVER VALLEY\", \"ROCHOR\", \"SINGAPORE RIVER\", \"STRAITS VIEW\"), ]\n\nsummary(central_sg)\n\n\n  SUBZONE_N          SUBZONE_C          PLN_AREA_N         PLN_AREA_C       \n Length:50          Length:50          Length:50          Length:50         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n   REGION_N           REGION_C                  geometry \n Length:50          Length:50          MULTIPOLYGON :50  \n Class :character   Class :character   epsg:3414    : 0  \n Mode  :character   Mode  :character   +proj=tmer...: 0  \n\n\n\n\nReveal Code\ncentral_region_plot &lt;- tm_shape(mpsz2019) +\n  tm_polygons(col = \"lightyellow\", border.col = \"navy\") +\n  tm_layout(main.title = \"Central Region of Singapore\") +\n  tm_shape(central_sg) +\n  tm_polygons(col = \"orange\", border.col = \"red\")\n\ntmap_save(central_region_plot, \"Screenshots/central_region_SG.png\")\n\n\n\n\n\nReveal Code\ncentral_sg &lt;- st_union(central_sg)\n\n\n\n\nReveal Code\ncentral_region_SG_outline &lt;- tm_shape(mpsz2019) +\n  tm_polygons(col = \"lightyellow\", border.col = \"navy\") +\n  tm_layout(main.title = \"Central Region of Singapore\") +\n  tm_shape(central_sg) +\n  tm_polygons(col = \"orange\", border.col = \"red\", lwd = 2)\n\ntmap_save(central_region_SG_outline, \"Screenshots/central_region_SG_outline.png\")\n\n\n\n\n\nFiltering down the Grab call origins data to match out study area\nOne interesting point of study might be the difference in calls between the weekends and weekdays. Most offices are closed on the weekends, so it might be interesting to investigate how the data differs between the time periods. Thus, we also break the data into 2 parts apart from limiting its geographical scope.\n\n\nReveal Code\ngrab_weekend &lt;- grab_origin_sf[grab_origin_sf$weekday %in% c(\"Sun\", \"Sat\"), ]\ngrab_weekday &lt;- grab_origin_sf[!grab_origin_sf$weekday %in% c(\"Sun\", \"Sat\"), ]\n\ncentral_grab_weekend_sf &lt;- st_intersection(grab_weekend, central_sg)\ncentral_grab_weekday_sf &lt;- st_intersection(grab_weekday, central_sg)\n\nsummary(central_grab_weekend_sf)\n\n\n    trj_id          driving_mode          osname         \n Length:698         Length:698         Length:698        \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n                                                         \n pingtimestamp                        speed           bearing     \n Min.   :2019-04-13 00:31:23.00   Min.   :-1.000   Min.   :  0.0  \n 1st Qu.:2019-04-13 16:50:57.00   1st Qu.: 3.417   1st Qu.: 53.0  \n Median :2019-04-14 14:02:41.00   Median : 8.527   Median :172.5  \n Mean   :2019-04-17 02:11:19.36   Mean   : 8.497   Mean   :172.9  \n 3rd Qu.:2019-04-20 15:51:27.25   3rd Qu.:13.170   3rd Qu.:299.0  \n Max.   :2019-04-21 23:25:40.00   Max.   :24.620   Max.   :358.0  \n                                                                  \n    accuracy       weekday      start_hr        day               geometry  \n Min.   :  2.000   Sun:308   7      : 57   13     :209   POINT        :698  \n 1st Qu.:  4.354   Mon:  0   5      : 54   20     :181   epsg:3414    :  0  \n Median :  8.788   Tue:  0   13     : 47   14     :167   +proj=tmer...:  0  \n Mean   : 10.932   Wed:  0   6      : 46   21     :141                      \n 3rd Qu.: 13.490   Thu:  0   8      : 41   9      :  0                      \n Max.   :100.000   Fri:  0   11     : 40   16     :  0                      \n                   Sat:390   (Other):413   (Other):  0                      \n\n\nReveal Code\nsummary(central_grab_weekday_sf)\n\n\n    trj_id          driving_mode          osname         \n Length:2335        Length:2335        Length:2335       \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n                                                         \n pingtimestamp                        speed           bearing     \n Min.   :2019-04-08 00:09:48.00   Min.   :-1.000   Min.   :  0.0  \n 1st Qu.:2019-04-10 09:36:16.50   1st Qu.: 2.631   1st Qu.: 48.5  \n Median :2019-04-12 22:38:39.00   Median : 7.583   Median :152.0  \n Mean   :2019-04-13 23:06:58.46   Mean   : 7.821   Mean   :166.7  \n 3rd Qu.:2019-04-17 12:29:12.50   3rd Qu.:12.196   3rd Qu.:293.0  \n Max.   :2019-04-19 23:12:41.00   Max.   :26.160   Max.   :359.0  \n                                                                  \n    accuracy       weekday      start_hr         day               geometry   \n Min.   :  2.000   Sun:  0   11     : 237   18     :301   POINT        :2335  \n 1st Qu.:  4.141   Mon:441   10     : 228   17     :251   epsg:3414    :   0  \n Median :  8.576   Tue:454   9      : 225   12     :251   +proj=tmer...:   0  \n Mean   : 11.581   Wed:457   13     : 175   9      :243                       \n 3rd Qu.: 13.000   Thu:540   12     : 155   11     :239                       \n Max.   :728.000   Fri:443   14     : 147   8      :234                       \n                   Sat:  0   (Other):1168   (Other):816                       \n\n\n\n\nVisualising the origins of Grab trips over the weekends and weekdays in the Central Region of Singapore.\n\n\nReveal Code\ngrab_central_weekday_plot &lt;- tm_shape(central_sg) +\n  tm_polygons(col = \"lightyellow\", border.col = \"blue\", lwd = 1.5) +\n  tm_layout(main.title = \"Origins of Weekday Grab Trips in Singapore (within Central Region only)\", main.title.size = 0.7) +\n  tm_shape(central_grab_weekday_sf) +\n  tm_dots(col = \"darkgreen\", alpha = 0.3, size = 0.5)\n\ngrab_central_weekend_plot &lt;- tm_shape(central_sg) +\n  tm_polygons(col = \"lightyellow\", border.col = \"blue\", lwd = 1.5) +\n  tm_layout(main.title = \"Origins of Weekend Grab Trips in Singapore (within Central Region only)\", main.title.size = 0.7) +\n  tm_shape(central_grab_weekend_sf) +\n  tm_dots(col = \"darkgreen\", alpha = 0.3, size = 0.5)\n\ntmap_save(grab_central_weekday_plot, \"Screenshots/grab_central_weekday_plot.png\")\n\ntmap_save(grab_central_weekend_plot, \"Screenshots/grab_central_weekend_plot.png\")\n\n\n\n\nIt appears that on the weekends, calls not only originate from the central region far less often, but also become more sparsely spread out. This makes sense as the central region encompasses subzones outside the CBD, so as the weekend comes, even though calls may fall off in the CBD, these subzones will remain steady. Thus, contributing to the more even distribution observed.\n\n\nTransforming the filtered Grab origins data into Spatial Points, generic sp and ppp objects\n\nFor the Weekend:\n\n\nReveal Code\ncentral_grab_weekend_spatial &lt;- central_grab_weekend_sf %&gt;%\n  as_Spatial()\n\nsummary(central_grab_weekend_spatial)\n\n\nObject of class SpatialPointsDataFrame\nCoordinates:\n               min      max\ncoords.x1 26935.13 31786.09\ncoords.x2 27890.04 32876.01\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nNumber of points: 698\nData attributes:\n    trj_id          driving_mode          osname         \n Length:698         Length:698         Length:698        \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n                                                         \n pingtimestamp                        speed           bearing     \n Min.   :2019-04-13 00:31:23.00   Min.   :-1.000   Min.   :  0.0  \n 1st Qu.:2019-04-13 16:50:57.00   1st Qu.: 3.417   1st Qu.: 53.0  \n Median :2019-04-14 14:02:41.00   Median : 8.527   Median :172.5  \n Mean   :2019-04-17 02:11:19.36   Mean   : 8.497   Mean   :172.9  \n 3rd Qu.:2019-04-20 15:51:27.25   3rd Qu.:13.170   3rd Qu.:299.0  \n Max.   :2019-04-21 23:25:40.00   Max.   :24.620   Max.   :358.0  \n                                                                  \n    accuracy       weekday      start_hr        day     \n Min.   :  2.000   Sun:308   7      : 57   13     :209  \n 1st Qu.:  4.354   Mon:  0   5      : 54   20     :181  \n Median :  8.788   Tue:  0   13     : 47   14     :167  \n Mean   : 10.932   Wed:  0   6      : 46   21     :141  \n 3rd Qu.: 13.490   Thu:  0   8      : 41   9      :  0  \n Max.   :100.000   Fri:  0   11     : 40   16     :  0  \n                   Sat:390   (Other):413   (Other):  0  \n\n\nReveal Code\ncentral_grab_weekend_sp &lt;- central_grab_weekend_spatial %&gt;%\n  as(\"SpatialPoints\")\n\nsummary(central_grab_weekend_sp)\n\n\nObject of class SpatialPoints\nCoordinates:\n               min      max\ncoords.x1 26935.13 31786.09\ncoords.x2 27890.04 32876.01\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nNumber of points: 698\n\n\nReveal Code\ncentral_grab_weekend_ppp &lt;- central_grab_weekend_sp %&gt;%\n  as(\"ppp\")\n\nsummary(central_grab_weekend_ppp)\n\n\nPlanar point pattern:  698 points\nAverage intensity 2.885876e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [26935.13, 31786.09] x [27890.04, 32876.01] units\n                    (4851 x 4986 units)\nWindow area = 24186800 square units\n\n\n\n\nFor the Weekdays:\n\n\nReveal Code\ncentral_grab_weekday_spatial &lt;- central_grab_weekday_sf %&gt;%\n  as_Spatial()\n\nsummary(central_grab_weekday_spatial)\n\n\nObject of class SpatialPointsDataFrame\nCoordinates:\n               min      max\ncoords.x1 26902.48 32829.73\ncoords.x2 28050.48 33252.24\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nNumber of points: 2335\nData attributes:\n    trj_id          driving_mode          osname         \n Length:2335        Length:2335        Length:2335       \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n                                                         \n pingtimestamp                        speed           bearing     \n Min.   :2019-04-08 00:09:48.00   Min.   :-1.000   Min.   :  0.0  \n 1st Qu.:2019-04-10 09:36:16.50   1st Qu.: 2.631   1st Qu.: 48.5  \n Median :2019-04-12 22:38:39.00   Median : 7.583   Median :152.0  \n Mean   :2019-04-13 23:06:58.46   Mean   : 7.821   Mean   :166.7  \n 3rd Qu.:2019-04-17 12:29:12.50   3rd Qu.:12.196   3rd Qu.:293.0  \n Max.   :2019-04-19 23:12:41.00   Max.   :26.160   Max.   :359.0  \n                                                                  \n    accuracy       weekday      start_hr         day     \n Min.   :  2.000   Sun:  0   11     : 237   18     :301  \n 1st Qu.:  4.141   Mon:441   10     : 228   17     :251  \n Median :  8.576   Tue:454   9      : 225   12     :251  \n Mean   : 11.581   Wed:457   13     : 175   9      :243  \n 3rd Qu.: 13.000   Thu:540   12     : 155   11     :239  \n Max.   :728.000   Fri:443   14     : 147   8      :234  \n                   Sat:  0   (Other):1168   (Other):816  \n\n\nReveal Code\ncentral_grab_weekday_sp &lt;- central_grab_weekday_spatial %&gt;%\n  as(\"SpatialPoints\")\n\nsummary(central_grab_weekday_sp)\n\n\nObject of class SpatialPoints\nCoordinates:\n               min      max\ncoords.x1 26902.48 32829.73\ncoords.x2 28050.48 33252.24\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nNumber of points: 2335\n\n\nReveal Code\ncentral_grab_weekday_ppp &lt;- central_grab_weekday_sp %&gt;%\n  as(\"ppp\")\n\nsummary(central_grab_weekday_ppp)\n\n\nPlanar point pattern:  2335 points\nAverage intensity 7.573262e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [26902.48, 32829.73] x [28050.48, 33252.24] units\n                    (5927 x 5202 units)\nWindow area = 30832200 square units\n\n\n\n\n\nScaling the ppp objects to “km” for more discernable patterns when we produce the kernel density estimates\n\n\nReveal Code\ncentral_grab_weekend_ppp.km &lt;- rescale(central_grab_weekend_ppp, 1000, \"km\")\n\ncentral_grab_weekday_ppp.km &lt;- rescale(central_grab_weekday_ppp, 1000, \"km\")\n\nsummary(central_grab_weekend_ppp.km)\n\n\nPlanar point pattern:  698 points\nAverage intensity 28.85876 points per square km\n\nCoordinates are given to 6 decimal places\n\nWindow: rectangle = [26.93513, 31.78609] x [27.89004, 32.87601] km\n                    (4.851 x 4.986 km)\nWindow area = 24.1868 square km\nUnit of length: 1 km\n\n\nReveal Code\nsummary(central_grab_weekday_ppp.km)\n\n\nPlanar point pattern:  2335 points\nAverage intensity 75.73262 points per square km\n\nCoordinates are given to 6 decimal places\n\nWindow: rectangle = [26.90248, 32.82973] x [28.05048, 33.25224] km\n                    (5.927 x 5.202 km)\nWindow area = 30.8322 square km\nUnit of length: 1 km\n\n\n\n\nUsing the Diggle method to conduct the Kernel Density Estimations\nDiggle method is favoured here because the pre-emptive visualisation showed us that the call origins are clustered in multiple regions on weekdays and highly dispersed on weekends.\n\n\nReveal Code\npar(mfrow=c(1, 2), cex.main = 0.5)\n\nkde_central_grab_weekend_diggle_bw.km &lt;- density(central_grab_weekend_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\n\nkde_central_grab_weekday_diggle_bw.km &lt;- density(central_grab_weekday_ppp.km, sigma=bw.diggle, edge=TRUE, kernel=\"gaussian\")\n\nplot(kde_central_grab_weekend_diggle_bw.km, main = \"Scaled Kernel Density Estimate of Grab Trip Origins in Central SG on Weekends (Diggle)\")\n\nplot(kde_central_grab_weekday_diggle_bw.km, main = \"Scaled Kernel Density Estimate of Grab Trip Origins in Central SG on Weekdays (Diggle)\")\n\n\n\n\n\n\n\n\n\n\n\nUsing the Adaptive Bandwidth method to conduct the Kernel Density Estimations\n\n\nReveal Code\npar(mfrow=c(1, 2), cex.main = 0.4)\n\nkde_central_grab_weekend_ppp_adaptive &lt;- adaptive.density(central_grab_weekend_ppp.km, method=\"kernel\")\n\nkde_central_grab_weekday_ppp_adaptive &lt;- adaptive.density(central_grab_weekday_ppp.km, method=\"kernel\")\n\nplot(kde_central_grab_weekend_ppp_adaptive, main = \"Kernel Density Estimate of Grab Trip Origins in central SG on weekends (adaptive bandwidth)\")\n\nplot(kde_central_grab_weekday_ppp_adaptive, main = \"Kernel Density Estimate of Grab Trip Origins in central SG on weekdays (adaptive bandwidth)\")\n\n\n\n\n\n\n\n\n\nThe KDE plots here become especially useful as it shows how the previous simple plot of the Grab trip origins can be misleading. Here, the KDE estimates tells us that the distribution of the trip origins still happen to be heavily skewed towards what should be the CBD area of Singapore regardless of the part of the week. Whereas, previous plots, probably as a result of lower volume would have us believe that there is the difference in spread.\n\n\nConducting the Clark-Evans test for Spatial Point Pattern\n\n\nReveal Code\nclarkevans.test(central_grab_weekday_ppp.km, correction=\"none\", clipregion=\"central_sg_owin\", alternative=c(\"clustered\"), nsim=99)\n\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  central_grab_weekday_ppp.km\nR = 0.31997, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nReveal Code\nclarkevans.test(central_grab_weekend_ppp.km, correction=\"none\", clipregion=\"central_sg_owin\", alternative=c(\"clustered\"), nsim=99)\n\n\n\n    Clark-Evans test\n    No edge correction\n    Z-test\n\ndata:  central_grab_weekend_ppp.km\nR = 0.4366, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nFrom the p-values of the Clark-Evan’s test, we have to conclude that the distributions of the Grab trip origins are clustered in the central planning region of Singapore. A conclusion supported by out KDE plots.\n\n\nLimiting the Road Network Data to Central Singapore\n\n\nReveal Code\ncentral_roads &lt;- st_intersection(roads, central_sg)\n\ncentral_roads &lt;- st_cast(central_roads, \"LINESTRING\")\n\nwrite_rds(central_roads, \"Data/Geospatial/RDS/central_road_network.rds\")\n\n\nSaving the produced road network for future use …\n\n\nReveal Code\ncentral_roads &lt;- read_rds(\"Data/Geospatial/RDS/central_road_network.rds\")\n\ncentral_roads &lt;- st_simplify(central_roads, preserveTopology = TRUE)\n\n\n\n\nReveal Code\ncentral_road_network_plot &lt;- tm_shape(central_sg) +\n  tm_polygons(col = \"lightyellow\") +\n  tm_layout(main.title = \"Road Network in Central Singapore\") +\n  tm_shape(central_roads) +\n  tm_lines(col = \"brown\")\n\ntmap_save(central_road_network_plot, \"Screenshots/central_road_network.png\")\n\n\n\n\n\nPreparing the lixel objects and generating the line centre points\n\n\nReveal Code\nlixels &lt;- lixelize_lines(central_roads, 700, mindist = 350)\n\nsamples &lt;- lines_center(lixels)\n\nwrite_rds(lixels, \"Data/Geospatial/RDS/central_road_lixels.rds\")\n\nwrite_rds(samples, \"Data/Geospatial/RDS/central_road_centrepoints.rds\")\n\n\nSaving the produced lixel and centrepoint objects for future use …\n\n\nReveal Code\nlixels &lt;- read_rds(\"Data/Geospatial/RDS/central_road_lixels.rds\")\n\nsamples &lt;- read_rds(\"Data/Geospatial/RDS/central_road_centrepoints.rds\")\n\n\n\n\nPerforming the Network Constrained Kernel Density Estimation\n\nWeekday Data:\n\n\nReveal Code\nweekday_densities &lt;- nkde(central_roads, \n                          events = central_grab_weekday_sf,  \n                          w = rep(1,nrow(central_grab_weekday_sf)), \n                          samples = samples, \n                          kernel_name = \"gaussian\", \n                          bw = 300, \n                          div= \"bw\", \n                          method = \"simple\", \n                          digits = 1, \n                          tol = 1, \n                          grid_shape = c(1,1), \n                          max_depth = 8, \n                          agg = 5, \n                          sparse = TRUE, \n                          verbose = TRUE)\n\nwrite_rds(weekday_densities, \"Data/Geospatial/RDS/Grab_weekday_nkde.rds\")\n\n\n\n\nReveal Code\nweekday_densities &lt;- read_rds(\"Data/Geospatial/RDS/Grab_weekday_nkde.rds\")\n\nsamples$density &lt;- weekday_densities * 1000\nlixels$density &lt;- weekday_densities * 1000\n\n\n\n\nVisualising the Network Constrained Kernel Density Estimate of the Weekday Grab Data over an interactive OpenStreetMap layer\n\n\nReveal Code\ngrab_weekday_interactive &lt;-  tm_shape(lixels) +\n  tm_lines(col=\"density\", lwd = 2) +\n  tm_layout(frame = TRUE, main.title = \"Network-Constrained Kernel Density Estimation of Grab Call Origins in the CBD\") +\n  tm_shape(central_grab_weekday_sf) +\n  tm_dots(col = \"green\", alpha = 0.5, size = 0.01) +\n  tm_scale_bar() +\n  tm_basemap(\"OpenStreetMap\")\n\ngrab_weekday_interactive &lt;- tmap_leaflet(grab_weekday_interactive)\n\nsaveWidget(grab_weekday_interactive, \"Screenshots/CBD_grab_weekday_interactive.html\")\n\n\n\n \n\n\n\nWeekend Data:\n\n\nReveal Code\nweekend_densities &lt;- nkde(central_roads,\n                  events = central_grab_weekend_sf,\n                  w = rep(1,nrow(central_grab_weekend_sf)),\n                  samples = samples,\n                  kernel_name = \"gaussian\",\n                  bw = 300,\n                  div= \"bw\",\n                  method = \"simple\",\n                  digits = 1,\n                  tol = 1,\n                  grid_shape = c(1,1),\n                  max_depth = 8,\n                  agg = 5,\n                  sparse = TRUE,\n                  verbose = TRUE)\n\nwrite_rds(weekend_densities, \"Data/Geospatial/RDS/Grab_weekend_nkde.rds\")\n\n\n\n\nReveal Code\nweekend_densities &lt;- read_rds(\"Data/Geospatial/RDS/Grab_weekend_nkde.rds\")\n\nsamples$density &lt;- weekend_densities * 1000\nlixels$density &lt;- weekend_densities * 1000\n\n\n\n\nVisualising the Network Constrained Kernel Density Estimate of the Weekend Grab Data over an interactive OpenStreetMap layer\n\n\nReveal Code\ngrab_weekend_interactive &lt;-  tm_shape(lixels) +\n  tm_lines(col=\"density\", lwd = 2) +\n  tm_layout(frame = TRUE) +\n  tm_shape(central_grab_weekend_sf) +\n  tm_dots(col = \"green\", alpha = 0.5, size = 0.01) +\n  tm_scale_bar() +\n  tm_basemap(\"OpenStreetMap\")\n\ngrab_weekend_interactive &lt;- tmap_leaflet(grab_weekend_interactive)\n\nsaveWidget(grab_weekend_interactive, \"Screenshots/CBD_grab_weekend_interactive.html\")"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_05/In-Class_Exercise_05.html",
    "href": "In-Class_Exercise/In-Class_Exercise_05/In-Class_Exercise_05.html",
    "title": "In-Class Exercise 5: Global and Local Measures of Spatial Autocorrelation using sfDep methods",
    "section": "",
    "text": "Loading the required R-Packages\n\n\nReveal Code\npacman::p_load(sf, sfdep, sfdep, tidyverse, tmap)\n\n\n\n\nImporting the required datasets into the R-Environment\n\n\nReveal Code\nhunan &lt;- st_read(\"Data/Geospatial/Hunan\", layer = \"Hunan\")\n\n\nReading layer `Hunan' from data source \n  `C:\\Users\\yungq\\Desktop\\SMU Modules\\Y4S1\\Geospatial Analysis and Applications\\IS415 Course Website\\In-Class_Exercise\\In-Class_Exercise_05\\Data\\Geospatial\\Hunan' \n  using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\nReveal Code\nsummary(hunan)\n\n\n    NAME_2               ID_3          NAME_3           ENGTYPE_3        \n Length:88          Min.   :21098   Length:88          Length:88         \n Class :character   1st Qu.:21125   Class :character   Class :character  \n Mode  :character   Median :21150   Mode  :character   Mode  :character  \n                    Mean   :21150                                        \n                    3rd Qu.:21174                                        \n                    Max.   :21201                                        \n   Shape_Leng       Shape_Area         County                   geometry \n Min.   :0.7722   Min.   :0.02128   Length:88          POLYGON      :88  \n 1st Qu.:2.2533   1st Qu.:0.13669   Class :character   epsg:4326    : 0  \n Median :2.5844   Median :0.18564   Mode  :character   +proj=long...: 0  \n Mean   :2.6057   Mean   :0.19274                                        \n 3rd Qu.:3.0994   3rd Qu.:0.23735                                        \n Max.   :4.5835   Max.   :0.53452                                        \n\n\nReveal Code\nhunan2012 &lt;- read_csv(\"Data/Aspatial/Hunan_2012.csv\")\n\nglimpse(hunan2012)\n\n\nRows: 88\nColumns: 29\n$ County      &lt;chr&gt; \"Anhua\", \"Anren\", \"Anxiang\", \"Baojing\", \"Chaling\", \"Changn…\n$ City        &lt;chr&gt; \"Yiyang\", \"Chenzhou\", \"Changde\", \"Hunan West\", \"Zhuzhou\", …\n$ avg_wage    &lt;dbl&gt; 30544, 28058, 31935, 30843, 31251, 28518, 54540, 28597, 33…\n$ deposite    &lt;dbl&gt; 10967.0, 4598.9, 5517.2, 2250.0, 8241.4, 10860.0, 24332.0,…\n$ FAI         &lt;dbl&gt; 6831.7, 6386.1, 3541.0, 1005.4, 6508.4, 7920.0, 33624.0, 1…\n$ Gov_Rev     &lt;dbl&gt; 456.72, 220.57, 243.64, 192.59, 620.19, 769.86, 5350.00, 1…\n$ Gov_Exp     &lt;dbl&gt; 2703.0, 1454.7, 1779.5, 1379.1, 1947.0, 2631.6, 7885.5, 11…\n$ GDP         &lt;dbl&gt; 13225.0, 4941.2, 12482.0, 4087.9, 11585.0, 19886.0, 88009.…\n$ GDPPC       &lt;dbl&gt; 14567, 12761, 23667, 14563, 20078, 24418, 88656, 10132, 17…\n$ GIO         &lt;dbl&gt; 9276.90, 4189.20, 5108.90, 3623.50, 9157.70, 37392.00, 513…\n$ Loan        &lt;dbl&gt; 3954.90, 2555.30, 2806.90, 1253.70, 4287.40, 4242.80, 4053…\n$ NIPCR       &lt;dbl&gt; 3528.3, 3271.8, 7693.7, 4191.3, 3887.7, 9528.0, 17070.0, 3…\n$ Bed         &lt;dbl&gt; 2718, 970, 1931, 927, 1449, 3605, 3310, 582, 2170, 2179, 1…\n$ Emp         &lt;dbl&gt; 494.310, 290.820, 336.390, 195.170, 330.290, 548.610, 670.…\n$ EmpR        &lt;dbl&gt; 441.4, 255.4, 270.5, 145.6, 299.0, 415.1, 452.0, 127.6, 21…\n$ EmpRT       &lt;dbl&gt; 338.0, 99.4, 205.9, 116.4, 154.0, 273.7, 219.4, 94.4, 174.…\n$ Pri_Stu     &lt;dbl&gt; 54.175, 33.171, 19.584, 19.249, 33.906, 81.831, 59.151, 18…\n$ Sec_Stu     &lt;dbl&gt; 32.830, 17.505, 17.819, 11.831, 20.548, 44.485, 39.685, 7.…\n$ Household   &lt;dbl&gt; 290.4, 104.6, 148.1, 73.2, 148.7, 211.2, 300.3, 76.1, 139.…\n$ Household_R &lt;dbl&gt; 234.5, 121.9, 135.4, 69.9, 139.4, 211.7, 248.4, 59.6, 110.…\n$ NOIP        &lt;dbl&gt; 101, 34, 53, 18, 106, 115, 214, 17, 55, 70, 44, 84, 74, 17…\n$ Pop_R       &lt;dbl&gt; 670.3, 243.2, 346.0, 184.1, 301.6, 448.2, 475.1, 189.6, 31…\n$ RSCG        &lt;dbl&gt; 5760.60, 2386.40, 3957.90, 768.04, 4009.50, 5220.40, 22604…\n$ Pop_T       &lt;dbl&gt; 910.8, 388.7, 528.3, 281.3, 578.4, 816.3, 998.6, 256.7, 45…\n$ Agri        &lt;dbl&gt; 4942.253, 2357.764, 4524.410, 1118.561, 3793.550, 6430.782…\n$ Service     &lt;dbl&gt; 5414.5, 3814.1, 14100.0, 541.8, 5444.0, 13074.6, 17726.6, …\n$ Disp_Inc    &lt;dbl&gt; 12373, 16072, 16610, 13455, 20461, 20868, 183252, 12379, 1…\n$ RORP        &lt;dbl&gt; 0.7359464, 0.6256753, 0.6549309, 0.6544614, 0.5214385, 0.5…\n$ ROREmp      &lt;dbl&gt; 0.8929619, 0.8782065, 0.8041262, 0.7460163, 0.9052651, 0.7…\n\n\nReveal Code\nhunanGDPPC &lt;- read_csv(\"Data/Aspatial/Hunan_GDPPC.csv\")\n\nglimpse(hunanGDPPC)\n\n\nRows: 1,496\nColumns: 3\n$ Year   &lt;dbl&gt; 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 200…\n$ County &lt;chr&gt; \"Longshan\", \"Changsha\", \"Wangcheng\", \"Ningxiang\", \"Liuyang\", \"Z…\n$ GDPPC  &lt;dbl&gt; 3469, 24612, 14659, 11687, 13406, 8546, 10944, 8040, 7383, 1168…\n\n\n\nAppending the Hunan Aspatial data to the Hunan Geospatial sf object\n\n\nReveal Code\nhunan_GDPPC &lt;- left_join(hunan, hunan2012) %&gt;% \n  select(1:4, 7, 14)\n\nwrite_rds(hunan_GDPPC, \"Data/Geospatial/RDS/Hunan.rds\")\n\n\n\n\nReading the combined Hunan spatial data\n\n\nReveal Code\nhunan_GDPPC &lt;- read_rds(\"Data/Geospatial/RDS/Hunan.rds\")\n\n\n\n\n\nVisualising the GDPPC data in a choropleth map\n\n\nReveal Code\ntmap_mode(\"plot\")\n\ntm_shape(hunan_GDPPC) +\n  tm_fill(\"GDPPC\", style = \"quantile\", palette = \"Blues\", title = \"GDPPC\") +\n  tm_layout(main.title = \"Distribution of GDP per capita by  county, Hunan province\", main.title.position = \"center\", main.title.size = 1.2, legend.height = 0.45, legend.width = 0.35, frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type = \"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha = 0.2)\n\n\n\n\n\n\n\n\n\n\n\nDeriving the congruity weights using the QUEEN’s method\n\n\nReveal Code\nwm_q &lt;- hunan_GDPPC %&gt;% \n  mutate(nb = st_contiguity(geometry), wt = st_weights(nb, style = \"W\"), .before = 1)\n\n\n\n\nComputing the Moran’s I statistic\n\n\nReveal Code\nmoranI &lt;- global_moran(wm_q$GDPPC, wm_q$nb, wm_q$wt)\n\nglimpse(moranI)\n\n\nList of 2\n $ I: num 0.301\n $ K: num 7.64\n\n\n\n\nPerforming the Global Moran’s I test\n\n\nReveal Code\nglobal_moran_test(wm_q$GDPPC, wm_q$nb, wm_q$wt)\n\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351"
  }
]