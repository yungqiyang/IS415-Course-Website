[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IS415 Course Website",
    "section": "",
    "text": "Hello everybody, my name is Qi Yang and this is my progress through IS415 - Geospatial Analytics and Applications!"
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_01/Take-Home_Exercise_01.html",
    "href": "Take-Home_Exercise/Take-Home_Exercise_01/Take-Home_Exercise_01.html",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of Grab’s hailing services in Singapore",
    "section": "",
    "text": "The following R-packages and their use case are as follows:\n\narrow: The Grab-Posisi datasets are stored in snappy.parquet format, so we will need to leverage upon the arrow package to read and write these data.\ntidyverse: To allow us to investigate, manipulate and write the datasets of interest in a readable manner. Also has great compatibility with sf objects.\nlubridate: To handle time format data and conversion of other data types into time formats.\nsf: Allows us to handle spatial data, specifically the master plan subzone and OpenStreetMap road network data.\nspatstat: Used to compute the Clark-Evan’s test and various Kernel Density Estimates in this report.\nmaptools: Dependency for spatstat.\ntmap: For visualisation of the spatial data.\nhtmlwidgets: Used to save interactive spatial data visualisations as HTML widgets to lessen the burden on Quarto when rendering.\n\nThe p_load() functionfrom the pacman package is used to load the libraries and automatically install them for the user if they aren’t already installed.\n\n\nReveal Code\npacman::p_load(sf, tidyverse, arrow, lubridate, tmap, maptools, spatstat, spNetwork, htmlwidgets)"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_05/In-Class_Exercise_05.html",
    "href": "In-Class_Exercise/In-Class_Exercise_05/In-Class_Exercise_05.html",
    "title": "In-Class Exercise 5: Global and Local Measures of Spatial Autocorrelation using sfDep methods",
    "section": "",
    "text": "Reveal Code\npacman::p_load(sf, sfdep, plotly, tidyverse, tmap, Kendall)"
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_01/Take-Home_Exercise_01.html#preparing-the-r-environment-for-analysis",
    "href": "Take-Home_Exercise/Take-Home_Exercise_01/Take-Home_Exercise_01.html#preparing-the-r-environment-for-analysis",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of Grab’s hailing services in Singapore",
    "section": "",
    "text": "The following R-packages and their use case are as follows:\n\narrow: The Grab-Posisi datasets are stored in snappy.parquet format, so we will need to leverage upon the arrow package to read and write these data.\ntidyverse: To allow us to investigate, manipulate and write the datasets of interest in a readable manner. Also has great compatibility with sf objects.\nlubridate: To handle time format data and conversion of other data types into time formats.\nsf: Allows us to handle spatial data, specifically the master plan subzone and OpenStreetMap road network data.\nspatstat: Used to compute the Clark-Evan’s test and various Kernel Density Estimates in this report.\nmaptools: Dependency for spatstat.\ntmap: For visualisation of the spatial data.\nhtmlwidgets: Used to save interactive spatial data visualisations as HTML widgets to lessen the burden on Quarto when rendering.\n\nThe p_load() functionfrom the pacman package is used to load the libraries and automatically install them for the user if they aren’t already installed.\n\n\nReveal Code\npacman::p_load(sf, tidyverse, arrow, lubridate, tmap, maptools, spatstat, spNetwork, htmlwidgets)"
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_01/Take-Home_Exercise_01.html#conducting-data-pre-processing-for-analysis",
    "href": "Take-Home_Exercise/Take-Home_Exercise_01/Take-Home_Exercise_01.html#conducting-data-pre-processing-for-analysis",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of Grab’s hailing services in Singapore",
    "section": "Conducting data pre-processing for analysis",
    "text": "Conducting data pre-processing for analysis\n\nImporting the datasets of interest\nFor this report, 3 different datasets are of interest. Grab-Posisi (parquet) from Grab to obtain the spatial events of Grab trips, MPSZ2019 (shp)from data.gov.sg to provide us with the geographical boundaries for our analysis and gis_osm_roads_free_1 (shp) from OpenStreetMap to obtain the road networks for analysis.\n\nGrab-Posisi Data:\nThe Grab-Posisi data is contained within 10 compartmentalised parquet files, thus, the read_parquet() function from the Arrow package is required. The files are loaded iteratively in a loop and immediately appended to each other without assignment using the bind_rows() function.\n\n\nReveal Code\ngrab_df &lt;- read_parquet(\"Data/Geospatial/GrabPosisi/part-00000-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")\n\nfor (i in 1:9) {\n  grab_df &lt;- grab_df %&gt;%\n    bind_rows(read_parquet(paste0(\"Data/Geospatial/GrabPosisi/part-0000\", as.character(i), \"-8bbff892-97d2-4011-9961-703e38972569.c000.snappy.parquet\")))\n}\n\n\nWe can see that the Grab-Posisi dataset in its entirety at 30+ million rows is way too large for computation.\n\n\nReveal Code\nglimpse(grab_df)\n\ngrab_df$pingtimestamp &lt;- as_datetime(grab_df$pingtimestamp)\n\n\n\nWe will store the compiled Grab-Posisi just in case there is a need for its entirety in the future as there is spare memory on my drive for now.\n\n\nReveal Code\nwrite_parquet(grab_df, \"Data/Geospatial/GrabPosisi/Grab_Posisi.parquet\")\n\n\nLuckily, as we are interested only in the analysis of the origins of Grab calls in Singapore, the Grab-Posisi data can be subset to reduce its size in the R-Environment to the necessary only. This is achieved using the group_by() function to sort each trip record by its ping time-stamp within the trip itself only. filter() is used to extract only the earliest, and therefore, the origin record while mutate() is used to extract the day of the week in which the trip occurred. The result is stored as an R-Data Structure (RDS) file using the write_rds() function to avoid re-computation in the future.\n\n\nReveal Code\ngrab_origin_df &lt;- grab_df %&gt;% \n  group_by(trj_id) %&gt;% \n  arrange(pingtimestamp) %&gt;% \n  filter(row_number() == 1) %&gt;% \n  mutate(weekday = wday(pingtimestamp, label = TRUE, abbr = TRUE))\n\nglimpse(grab_origin_df)\n\npaste(\"From:\", min(grab_origin_df$pingtimestamp), \"To:\", max(grab_origin_df$pingtimestamp))\n\nwrite_rds(grab_origin_df, \"Data/Geospatial/RDS/Grab_Origins_Posisi.rds\")\n\n\n\nFrom a glimpse() of the subset data, we can see that the data set has been reduced considerably to 28,000 rows. This is still too large for kernel density estimations for my computer to handle, but for data wrangling and investigation purposes, it is good enough. As such, we will not rush to remove columns in case there is a need for them later especially as the main constraint in spatial computations is the number of events in the data.\n\nAdditionally, we can see that the data exists for 14 days only between 8th April 2019 and 21st April 2019.\nWe save this subset data so that the code may be re-run in the future without going through the costly process of compiling and subsetting again.\n\n\nReveal Code\ngrab_origin_df &lt;- read_rds(\"Data/Geospatial/RDS/Grab_Origins_Posisi.rds\")\n\n\n\n\nSingapore Master Plan Subzone and Road Network Data\nBoth the Singapore Master Plan Subzone (mpsz) and Road Network Data are spatial data which require the sf package to read in order to retain the spatial information contained. As such, we will use the st_read() function to read the data, and apply the st_transform() function to cast them to a consistent coordinate reference system (CRS) so that we may apply spatial analysis across both data. The CRS we will use is SVY21, which is specific for Singapore.\nThe Singapore Master Plan Subzone is loaded into the R-Environment below:\n\n\nReveal Code\nmpsz2019 &lt;- \n  st_read(\"Data/Geospatial/MPSZ-2019\", layer = \"MPSZ-2019\") %&gt;% \n  st_transform(crs = 3414)\n\n\nReading layer `MPSZ-2019' from data source \n  `C:\\Users\\yungq\\Desktop\\SMU Modules\\Y4S1\\Geospatial Analysis and Applications\\IS415 Course Website\\Take-Home_Exercise\\Take-Home_Exercise_01\\Data\\Geospatial\\MPSZ-2019' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nReveal Code\nsummary(mpsz2019)\n\n\n  SUBZONE_N          SUBZONE_C          PLN_AREA_N         PLN_AREA_C       \n Length:332         Length:332         Length:332         Length:332        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n   REGION_N           REGION_C                  geometry  \n Length:332         Length:332         MULTIPOLYGON :332  \n Class :character   Class :character   epsg:3414    :  0  \n Mode  :character   Mode  :character   +proj=tmer...:  0  \n\n\nFrom the summary() of the data, we can see that it contains spatial polygon features, originally projected in WGS84, and we were successful in transforming the CRS to SVY21 (or EPSG: 3414 equivalently).\nPlotting the Master-Plan Subzone geospatial data with tmap’s tm_polygons() function for visualisation:\n\n\nReveal Code\nmpsz2019_plot &lt;- mpsz2019 %&gt;%\n  tm_shape() +\n  tm_polygons(col = \"lightyellow\", border.col = \"navy\") +\n  tm_layout(main.title = \"Singapore Master Plan Boundaries 2019\", main.title.size = 1) + tm_compass(size = 1)\n\ntmap_save(tm = mpsz2019_plot, \"Screenshots/mpsz2019.png\")\n\n\n\nThe OpenStreetMap (OSM) Road is loaded into the R-Environment below:\n\n\nReveal Code\nroads &lt;-\n  st_read(\"Data/Geospatial/OSM\", layer = \"gis_osm_roads_free_1\") %&gt;%\n  st_transform(crs = 3414)\n\nsummary(roads)\n\n\n\nHere, the data contains spatial linestrings, and like the mpsz data, is originally projected using WGS84 and successfully converted to SVY21. Also, although we know from the data source that the OSM road networks encompasses Singapore, Brunei and Malaysia, we can also tell from the R-outputs that it extends beyond Singapore’s borders. Compared to the mpsz data, its bounding box is clearly further extending. This also explains the vast number of features the data contains and its long reading time.\nIn the interest of computation times, we will subset the road networks to Singapore’s borders only. To do so, first we generate the Singaporean borders as a spatial polygon object using the st_union() function. We then employ the st_intersection() function on the generated outline of Singapore and the OSM road network to obtain the Singaporean road network only.\nFirst, the coastal outline of Singapore is generated, and its result is saved as an RDS file with the write_rds() function to again avoid re-generation in the future.\n\n\nReveal Code\ncoastal_outline &lt;- st_union(mpsz2019)\n\nwrite_rds(coastal_outline, \"Data/Geospatial/RDS/coastal_outline_sg.rds\")\n\n\n\n\nReveal Code\ncoastal_outline &lt;- read_rds(\"Data/Geospatial/RDS/coastal_outline_sg.rds\")\n\n\n\n\nReveal Code\nsg_coastal_outline_plot &lt;- tm_shape(coastal_outline) +\n  tm_polygons(col = \"white\", border.col = \"red\", lwd = 1.7) +\n  tm_layout(\"Coastal Outine of Singapore 2019\")\n\ntmap_save(sg_coastal_outline_plot, \"Screenshots/sg_coastal_outline_plot.png\")\n\n\n\nNext, we subset the OSM road networks by using the st_intersection() function to constrict the spatial line objects to those within the coastal boundaries of Singapore as generated. Considering the long computation time due to the size of the OSM data, we will save the constricted road network as an RDS file.\n\n\nReveal Code\nroads_sg &lt;- st_intersection(coastal_outline, roads)\n\nwrite_rds(roads_sg, \"Data/Geospatial/RDS/sg_road_network.rds\")\n\n\n\n\nReveal Code\nroads_sg &lt;- read_rds(\"Data/Geospatial/RDS/sg_road_network.rds\")\n\n\nVisualising the generated Singapore road networks with tmap using\n\n\nReveal Code\nmpsz_w_roads2019_plot &lt;-\n  tm_shape(coastal_outline) +\n  tm_polygons(col = \"lightyellow\", border.col = \"red\", border.alpha = 0.6) + tm_layout(main.title = \"Singapore Road Network 2019\", main.title.size = 1) +\n  tm_compass(size = 1) +\n  tm_shape(roads_sg) +\n  tm_lines()\n\ntmap_save(tm = mpsz_w_roads2019_plot, \"Screenshots/mpsz_w_roads2019.png\")\n\n\n\nHere we can observe that there is an extensive road network present outside the mainland of Singapore in the dataset. Thus, we will need to remove them if mainland Singapore is the scope of the study, or if they fall within the scope regardless as they will otherwise affect network contrained kernel density estimates. This is as Grab is unlikely to operate outside the mainland especially on islands like Pulau Tekong, thus, impacting global kernel density estimates because of its low or zero local density.\nFirst though, we should investigate the Grab-Posisi Data further as seen prior, we will need to reduce the scope of our analysis so that computations may be completed in a reasonable amount of time.\n\n\nTransforming the Grab-Posisi Data into a simple features object\nTo investigate the Grab-Posisi data, we must first cast it into a simple features object so that R can recognise the coordinate fields in the dataset as spatial and not simply numeric data. The st_as_af() function is used for this purpose, specifying the longitude and latitudes in that order, and the CRS as WGS84 (or EPSG: 4326 equivalently) as the data are geographical coordinates. The CRS of the data is then transformed into SVY21 format using the st_transform() function by specifying the crs parameter to be 3414, the EPSG code for SVY21.\n\n\nReveal Code\ngrab_origin_sf &lt;- grab_origin_df %&gt;%\n  st_as_sf(coords = c(\"rawlng\", \"rawlat\"), crs = 4326) %&gt;%\n  st_transform(crs = 3414)\n\nsummary(grab_origin_sf)\n\n\n    trj_id          driving_mode          osname         \n Length:28000       Length:28000       Length:28000      \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n                                                         \n pingtimestamp                        speed           bearing     \n Min.   :2019-04-08 00:09:26.00   Min.   :-1.000   Min.   :  0.0  \n 1st Qu.:2019-04-11 08:48:29.25   1st Qu.: 3.590   1st Qu.: 90.0  \n Median :2019-04-15 00:08:48.00   Median : 9.945   Median :179.0  \n Mean   :2019-04-14 21:29:59.93   Mean   : 9.566   Mean   :172.5  \n 3rd Qu.:2019-04-18 10:47:59.25   3rd Qu.:14.550   3rd Qu.:256.0  \n Max.   :2019-04-21 23:33:28.00   Max.   :30.949   Max.   :359.0  \n                                                                  \n    accuracy       weekday             geometry    \n Min.   :  1.000   Sun:3983   POINT        :28000  \n 1st Qu.:  3.900   Mon:3975   epsg:3414    :    0  \n Median :  6.000   Tue:4008   +proj=tmer...:    0  \n Mean   :  7.617   Wed:4016                        \n 3rd Qu.: 10.000   Thu:4008                        \n Max.   :728.000   Fri:4002                        \n                   Sat:4008                        \n\n\nWe can see from a the summary of the data that the casting of the grab origins data to a simple features object is successful and that a spatial point geometry column has been added to the data in place of “rawlng” and “rawlat”.\n\n\nTransforming the Grab-Posisi data further into Spatial Points, generic sp and ppp objects\nAs we are using the spatstat package, we will need to cast our Grab trip origins events data from a simple features (sf) object to a planar point pattern (ppp) object to work with it.\nTo do so, we can utilise the as_Spatial() function from the sf package to first convert it into a spatial point dataframe which can then be further transformed to a generic sp object using the as() from the same package by specifying the object class to be “SpatialPoints”. This is required to safely convert an sf object to a ppp object as the as() function does not support casting an sf object to a ppp object directly. The resulting sp object is then computed as a ppp object using the as() function but this time specifying the new object class to be “ppp”.\nThe transformation process and a summary of each casting step are as follows:\n\n\nReveal Code\ngrab_origin_spatial &lt;- grab_origin_sf %&gt;%\n  as_Spatial()\n\nsummary(grab_origin_spatial)\n\n\nObject of class SpatialPointsDataFrame\nCoordinates:\n                min      max\ncoords.x1  3628.243 49845.23\ncoords.x2 25198.140 49689.64\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nNumber of points: 28000\nData attributes:\n    trj_id          driving_mode          osname         \n Length:28000       Length:28000       Length:28000      \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n                                                         \n pingtimestamp                        speed           bearing     \n Min.   :2019-04-08 00:09:26.00   Min.   :-1.000   Min.   :  0.0  \n 1st Qu.:2019-04-11 08:48:29.25   1st Qu.: 3.590   1st Qu.: 90.0  \n Median :2019-04-15 00:08:48.00   Median : 9.945   Median :179.0  \n Mean   :2019-04-14 21:29:59.93   Mean   : 9.566   Mean   :172.5  \n 3rd Qu.:2019-04-18 10:47:59.25   3rd Qu.:14.550   3rd Qu.:256.0  \n Max.   :2019-04-21 23:33:28.00   Max.   :30.949   Max.   :359.0  \n                                                                  \n    accuracy       weekday   \n Min.   :  1.000   Sun:3983  \n 1st Qu.:  3.900   Mon:3975  \n Median :  6.000   Tue:4008  \n Mean   :  7.617   Wed:4016  \n 3rd Qu.: 10.000   Thu:4008  \n Max.   :728.000   Fri:4002  \n                   Sat:4008  \n\n\nReveal Code\ngrab_origin_sp &lt;- grab_origin_spatial %&gt;%\n  as(\"SpatialPoints\")\n\nsummary(grab_origin_sp)\n\n\nObject of class SpatialPoints\nCoordinates:\n                min      max\ncoords.x1  3628.243 49845.23\ncoords.x2 25198.140 49689.64\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nNumber of points: 28000\n\n\nReveal Code\ngrab_origin_ppp &lt;- grab_origin_sp %&gt;%  \n  as(\"ppp\")\n\nsummary(grab_origin_ppp)\n\n\nPlanar point pattern:  28000 points\nAverage intensity 2.473666e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [3628.24, 49845.23] x [25198.14, 49689.64] units\n                    (46220 x 24490 units)\nWindow area = 1131920000 square units\n\n\n\n\n\nVisualising the Grab-Posisi trip origins data\nTo visualise the Grab trip origins data we prepared, we can use the tm_dots() function. Additionally, as there are 28,000 event points located on a relatively small geographical area, we can expect the points to be dense enough such that we are likely to see clusters without being able to visually make out their densities or individual points.\nTo help with this problem, we can visualise the data using an interactive map style so that we may zoom into specific areas and reduce the density of our visualisation. Normally this can be achieved by specifying tmap_mode() to “view” but as such visualisations are large and computationally expensive, it is in our interest to build the in R and embed them as a HTML widget thus, avoiding building them during the render process. To do so, we leave it in “plot” mode in order to transform them to a leaflet object using the tmap_leaflet() function. The resulting leaflet object can then be saved as a HTML widget using the saveWidget() function from the htmlwidgets package.\n\n\nReveal Code\ngrab_origins_interactive &lt;- tm_shape(grab_origin_sf) +\n  tm_dots(alpha = 0.4, size = 0.03, col = \"green\") +\n  tm_layout(main.title = \"Grab-Posisi Origin points across Singapore\")\n\ngrab_origins_interactive = tmap_leaflet(grab_origins_interactive)\n\nsaveWidget(widget = grab_origins_interactive, file = \"Screenshots/grab_origins_interactive.html\")\n\n\n\n\n\n\nIf we zoom in, it appears that there are little to no overlaps of point coordinates in the data. This is to be expected for 2 reasons. First, pick-up locations are unlikely to fall in the exact same location especially when collected for 2 weeks only. Secondly, the data is very precise (to the cm) when considering that it exists on a country-wide scale. We know this as the data is precise to 2 decimal places when converted to SVY21 and SVY21 geographical points are listed in meters.\nTo be sure, we can use the following code to check for duplicated points.\n\n\nReveal Code\nany(duplicated(grab_origin_ppp))\n\n\n[1] FALSE\n\n\nThis is a good finding as it confirms that there is no need to account for point duplication in the dataset.\nNow, we need to solve the next problem which is the scope of our analysis. To do so, we can look for general point clusters across Singapore which might be of interest to us. A quick visualisation using the coastal outline previously generated as the base layer is performed to help with this.\n\n\nReveal Code\ngrab_origin_sg_plot &lt;- tm_shape(coastal_outline) +\n  tm_polygons(col = \"lightyellow\", border.col = \"blue\", lwd = 1.5) +\n  tm_layout(main.title = \"Origins of Grab Trips in Singapore (within Mainland only)\") +\n  tm_shape(grab_origin_sf) +\n  tm_dots(col = \"darkgreen\", alpha = 0.5)\n\ntmap_save(grab_origin_sg_plot, \"Screenshots/Grab_Origins_SG.png\")\n\n\n\nFrom the darker colouration, it appears that Grab calls in our data were much more concentrated in the central-southern part of Singapore than pretty much any other region. This of course makes sense as that region is where the central business district (CBD) lies, and considering the difference in cost of Grab vs. other forms of public transport, it should be expected that Grab customers are more likely fall within the CBD area especially towards the end of the workday.\nConsidering the size of the Grab origins data and the complexity of the road network, it makes sense to try to limit the area of study so our machines can handle the computations in reasonable time. Considering the spread of the data, the central region is chosen as our area of focus.\n\n\nLimiting the scope of the study\n\nExtracting the CBD polygons\nUsing the Urban Redevelopment Authority of Singapore’s (URA) definition of the CBD, the planning areas which makes it up are extracted from the mpsz spatial data. These polygons are identified using the “PLN_AREA_N” feature in the data, and extracted using base dataframe splicing methods and the %in% operator in R.\n\n\nReveal Code\ncentral_sg &lt;- mpsz2019[mpsz2019$PLN_AREA_N %in% c(\"DOWNTOWN CORE\", \"MARINA EAST\", \"MARINA SOUTH\", \"MUSEUM\", \"NEWTON\", \"ORCHARD\", \"OUTRAM\", \"RIVER VALLEY\", \"ROCHOR\", \"SINGAPORE RIVER\", \"STRAITS VIEW\"), ]\n\nsummary(central_sg)\n\n\n  SUBZONE_N          SUBZONE_C          PLN_AREA_N         PLN_AREA_C       \n Length:50          Length:50          Length:50          Length:50         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n   REGION_N           REGION_C                  geometry \n Length:50          Length:50          MULTIPOLYGON :50  \n Class :character   Class :character   epsg:3414    : 0  \n Mode  :character   Mode  :character   +proj=tmer...: 0  \n\n\nThe spliced sf object is assigned to central_sg and a summary of the data reveals that it contains 50 spatial polygon objects. Much smaller than the 332 polygon features that were originally in the mpsz dataset.\n\n\nVisualising the geograpical scope of study\nTo visualise the new geographical area of study:\n\n\nReveal Code\ncentral_region_plot &lt;- tm_shape(mpsz2019) +\n  tm_polygons(col = \"lightyellow\", border.col = \"navy\") +\n  tm_layout(main.title = \"Central Region of Singapore\") +\n  tm_shape(central_sg) +\n  tm_polygons(col = \"orange\", border.col = \"red\")\n\ntmap_save(central_region_plot, \"Screenshots/central_region_SG.png\")\n\n\n\nFrom the visualisation, we can confirm that the spliced polygons comprises of roughly the area of interest which we identified earlier and that we have reduced the boundaries of our data considerably (much more than the 332 → 50 polygon reduction would suggest).\nAlso, we can confirm that none of Singapore’s outer islands are involved in the focus area we have chosen, and as such we would not need to further narrow down the area to rid of any such polygons.\nAs the focus of the study is the CBD as a whole, and not specific planning areas within the CBD, it makes sense to recomputed the sliced data to consist of the outer boundaries of the CBD only. Like before, the st_union() function is used.\n\n\nReveal Code\ncentral_sg &lt;- st_union(central_sg)\n\n\nA visualisation of the computed boundary polygon can again be visualised by layering it upon the mpsz spatial data using multiple calls to the tm_polygons() function.\n\n\nReveal Code\ncentral_region_SG_outline &lt;- tm_shape(mpsz2019) +\n  tm_polygons(col = \"lightyellow\", border.col = \"navy\") +\n  tm_layout(main.title = \"Central Region of Singapore\") +\n  tm_shape(central_sg) +\n  tm_polygons(col = \"orange\", border.col = \"red\", lwd = 2)\n\ntmap_save(central_region_SG_outline, \"Screenshots/central_region_SG_outline.png\")\n\n\n\n\n\n\nFiltering down the Grab call origins data to match the study area\nNow that we have dictated the study area for the rest of the study, we will also need to trim down the Grab call origins data that we have. This can be achieve via the st_intersection() function to reduce the data to only those within the boundaries of the central_sg polygon we produced.\nA further interesting point of study might be the difference in calls between the weekends and weekdays. As mentioned in the justification for choosing the CBD as the scope, we expect that most of the Grab call events occur as a result of office workers travelling home. Thus, as most offices are closed on the weekends, it will be interesting to examine the difference in call patterns during the work week vs. the weekends . To do so, we will break the data into 2 parts using the weekday column generated prior to identify calls that fall on the weekends.\n\n\nReveal Code\ngrab_weekend &lt;- grab_origin_sf[grab_origin_sf$weekday %in% c(\"Sun\", \"Sat\"), ]\ngrab_weekday &lt;- grab_origin_sf[!grab_origin_sf$weekday %in% c(\"Sun\", \"Sat\"), ]\n\ncentral_grab_weekend_sf &lt;- st_intersection(grab_weekend, central_sg)\ncentral_grab_weekday_sf &lt;- st_intersection(grab_weekday, central_sg)\n\nsummary(central_grab_weekend_sf)\n\n\n    trj_id          driving_mode          osname         \n Length:698         Length:698         Length:698        \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n                                                         \n pingtimestamp                        speed           bearing     \n Min.   :2019-04-13 00:31:23.00   Min.   :-1.000   Min.   :  0.0  \n 1st Qu.:2019-04-13 16:50:57.00   1st Qu.: 3.417   1st Qu.: 53.0  \n Median :2019-04-14 14:02:41.00   Median : 8.527   Median :172.5  \n Mean   :2019-04-17 02:11:19.36   Mean   : 8.497   Mean   :172.9  \n 3rd Qu.:2019-04-20 15:51:27.25   3rd Qu.:13.170   3rd Qu.:299.0  \n Max.   :2019-04-21 23:25:40.00   Max.   :24.620   Max.   :358.0  \n                                                                  \n    accuracy       weekday            geometry  \n Min.   :  2.000   Sun:308   POINT        :698  \n 1st Qu.:  4.354   Mon:  0   epsg:3414    :  0  \n Median :  8.788   Tue:  0   +proj=tmer...:  0  \n Mean   : 10.932   Wed:  0                      \n 3rd Qu.: 13.490   Thu:  0                      \n Max.   :100.000   Fri:  0                      \n                   Sat:390                      \n\n\nReveal Code\nsummary(central_grab_weekday_sf)\n\n\n    trj_id          driving_mode          osname         \n Length:2335        Length:2335        Length:2335       \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n                                                         \n pingtimestamp                        speed           bearing     \n Min.   :2019-04-08 00:09:48.00   Min.   :-1.000   Min.   :  0.0  \n 1st Qu.:2019-04-10 09:36:16.50   1st Qu.: 2.631   1st Qu.: 48.5  \n Median :2019-04-12 22:38:39.00   Median : 7.583   Median :152.0  \n Mean   :2019-04-13 23:06:58.46   Mean   : 7.821   Mean   :166.7  \n 3rd Qu.:2019-04-17 12:29:12.50   3rd Qu.:12.196   3rd Qu.:293.0  \n Max.   :2019-04-19 23:12:41.00   Max.   :26.160   Max.   :359.0  \n                                                                  \n    accuracy       weekday            geometry   \n Min.   :  2.000   Sun:  0   POINT        :2335  \n 1st Qu.:  4.141   Mon:441   epsg:3414    :   0  \n Median :  8.576   Tue:454   +proj=tmer...:   0  \n Mean   : 11.581   Wed:457                       \n 3rd Qu.: 13.000   Thu:540                       \n Max.   :728.000   Fri:443                       \n                   Sat:  0                       \n\n\nA quick examination of the data shows that there were 2335 trips which originated on weekdays, and 698 calls on the weekends. In general, we can also expect around 25 less calls on Saturdays than during the work week and roughly 60 less calls on Sundays. Thursdays also generated the most calls at 540 trip originations happening on thursdays across the 2 weeks.\n\nVisualising the origins of Grab trips over the weekends and weekdays in the Central Region of Singapore.\nTo visualise the rough density patterns across the 2 different time periods in the CBD, we can employ the following code:\n\n\nReveal Code\ngrab_central_weekday_plot &lt;- tm_shape(central_sg) +\n  tm_polygons(col = \"lightyellow\", border.col = \"blue\", lwd = 1.5) +\n  tm_layout(main.title = \"Origins of Weekday Grab Trips in Singapore (within Central Region only)\", main.title.size = 0.7) +\n  tm_shape(central_grab_weekday_sf) +\n  tm_dots(col = \"darkgreen\", alpha = 0.3, size = 0.5)\n\ngrab_central_weekend_plot &lt;- tm_shape(central_sg) +\n  tm_polygons(col = \"lightyellow\", border.col = \"blue\", lwd = 1.5) +\n  tm_layout(main.title = \"Origins of Weekend Grab Trips in Singapore (within Central Region only)\", main.title.size = 0.7) +\n  tm_shape(central_grab_weekend_sf) +\n  tm_dots(col = \"darkgreen\", alpha = 0.3, size = 0.5)\n\ntmap_save(grab_central_weekday_plot, \"Screenshots/grab_central_weekday_plot.png\")\n\ntmap_save(grab_central_weekend_plot, \"Screenshots/grab_central_weekend_plot.png\")\n\n\n\n\ntm_dots() is used to identify the Grab trip origins and a reasonably low alpha value is specified to introduce transparency in the visualisation so that areas of denser events will stand out with deeper colours.\nIt appears that on the weekends, calls not only originate from the CBD less often. Although this is neither obvious nor interpretable from the visualisation alone as we are comparing 10 days of data vs. 4 days worth. However, our quick investigation of the spliced data above does make this a reasonable observation to have here.\nAdditionally, it seems also that the geographical patterns in Grab calls also differ on the weekends and weekdays. On the weekdays the Grab trip origins appear to be more evenly distributed whilst being slightly more concentrated in the nothern regions of the CBD on the weekends with barely any calls from the center and southern parts during this period.\n\n\nTransforming the filtered Grab origins data into Spatial Points, generic sp and ppp objects\nAs before with the simple features Grab data we need to transform the data to a ppp object if we want to conduct analysis on it using the spatstats package. To do so:\n\nFor the Weekend:\n\n\nReveal Code\ncentral_grab_weekend_spatial &lt;- central_grab_weekend_sf %&gt;%\n  as_Spatial()\n\nsummary(central_grab_weekend_spatial)\n\n\nObject of class SpatialPointsDataFrame\nCoordinates:\n               min      max\ncoords.x1 26935.13 31786.09\ncoords.x2 27890.04 32876.01\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nNumber of points: 698\nData attributes:\n    trj_id          driving_mode          osname         \n Length:698         Length:698         Length:698        \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n                                                         \n pingtimestamp                        speed           bearing     \n Min.   :2019-04-13 00:31:23.00   Min.   :-1.000   Min.   :  0.0  \n 1st Qu.:2019-04-13 16:50:57.00   1st Qu.: 3.417   1st Qu.: 53.0  \n Median :2019-04-14 14:02:41.00   Median : 8.527   Median :172.5  \n Mean   :2019-04-17 02:11:19.36   Mean   : 8.497   Mean   :172.9  \n 3rd Qu.:2019-04-20 15:51:27.25   3rd Qu.:13.170   3rd Qu.:299.0  \n Max.   :2019-04-21 23:25:40.00   Max.   :24.620   Max.   :358.0  \n                                                                  \n    accuracy       weekday  \n Min.   :  2.000   Sun:308  \n 1st Qu.:  4.354   Mon:  0  \n Median :  8.788   Tue:  0  \n Mean   : 10.932   Wed:  0  \n 3rd Qu.: 13.490   Thu:  0  \n Max.   :100.000   Fri:  0  \n                   Sat:390  \n\n\nReveal Code\ncentral_grab_weekend_sp &lt;- central_grab_weekend_spatial %&gt;%\n  as(\"SpatialPoints\")\n\nsummary(central_grab_weekend_sp)\n\n\nObject of class SpatialPoints\nCoordinates:\n               min      max\ncoords.x1 26935.13 31786.09\ncoords.x2 27890.04 32876.01\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nNumber of points: 698\n\n\nReveal Code\ncentral_grab_weekend_ppp &lt;- central_grab_weekend_sp %&gt;%\n  as(\"ppp\")\n\nsummary(central_grab_weekend_ppp)\n\n\nPlanar point pattern:  698 points\nAverage intensity 2.885876e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [26935.13, 31786.09] x [27890.04, 32876.01] units\n                    (4851 x 4986 units)\nWindow area = 24186800 square units\n\n\n\n\nFor the Weekdays:\n\n\nReveal Code\ncentral_grab_weekday_spatial &lt;- central_grab_weekday_sf %&gt;%\n  as_Spatial()\n\nsummary(central_grab_weekday_spatial)\n\n\nObject of class SpatialPointsDataFrame\nCoordinates:\n               min      max\ncoords.x1 26902.48 32829.73\ncoords.x2 28050.48 33252.24\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nNumber of points: 2335\nData attributes:\n    trj_id          driving_mode          osname         \n Length:2335        Length:2335        Length:2335       \n Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character  \n                                                         \n                                                         \n                                                         \n                                                         \n pingtimestamp                        speed           bearing     \n Min.   :2019-04-08 00:09:48.00   Min.   :-1.000   Min.   :  0.0  \n 1st Qu.:2019-04-10 09:36:16.50   1st Qu.: 2.631   1st Qu.: 48.5  \n Median :2019-04-12 22:38:39.00   Median : 7.583   Median :152.0  \n Mean   :2019-04-13 23:06:58.46   Mean   : 7.821   Mean   :166.7  \n 3rd Qu.:2019-04-17 12:29:12.50   3rd Qu.:12.196   3rd Qu.:293.0  \n Max.   :2019-04-19 23:12:41.00   Max.   :26.160   Max.   :359.0  \n                                                                  \n    accuracy       weekday  \n Min.   :  2.000   Sun:  0  \n 1st Qu.:  4.141   Mon:441  \n Median :  8.576   Tue:454  \n Mean   : 11.581   Wed:457  \n 3rd Qu.: 13.000   Thu:540  \n Max.   :728.000   Fri:443  \n                   Sat:  0  \n\n\nReveal Code\ncentral_grab_weekday_sp &lt;- central_grab_weekday_spatial %&gt;%\n  as(\"SpatialPoints\")\n\nsummary(central_grab_weekday_sp)\n\n\nObject of class SpatialPoints\nCoordinates:\n               min      max\ncoords.x1 26902.48 32829.73\ncoords.x2 28050.48 33252.24\nIs projected: TRUE \nproj4string :\n[+proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1\n+x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0\n+units=m +no_defs]\nNumber of points: 2335\n\n\nReveal Code\ncentral_grab_weekday_ppp &lt;- central_grab_weekday_sp %&gt;%\n  as(\"ppp\")\n\nsummary(central_grab_weekday_ppp)\n\n\nPlanar point pattern:  2335 points\nAverage intensity 7.573262e-05 points per square unit\n\nCoordinates are given to 3 decimal places\ni.e. rounded to the nearest multiple of 0.001 units\n\nWindow: rectangle = [26902.48, 32829.73] x [28050.48, 33252.24] units\n                    (5927 x 5202 units)\nWindow area = 30832200 square units\n\n\nAgain, summaries of each casting step are displayed to our purview.\n\n\n\nScaling the ppp objects to “km” for more interpretable patterns when we produce the kernel density estimates\nAs mentioned prior, the data is scaled in meters. This means that when we generate the kernel density estimates (KDE) we will be given densities which suggests that certain areas receive 0.0005 calls per meter2 for instance as we are running a KDE across an entire country. This has very low interpretability, so we should re-scale the data points to km so that we can receive easy to understand density estimates when we conduct KDE.\nTo do so, we rely upon the rescale() function, parsing the conversion rate of 1000 to the function:\n\n\nReveal Code\ncentral_grab_weekend_ppp.km &lt;- rescale(central_grab_weekend_ppp, 1000, \"km\")\n\ncentral_grab_weekday_ppp.km &lt;- rescale(central_grab_weekday_ppp, 1000, \"km\")\n\nsummary(central_grab_weekend_ppp.km)\n\n\nPlanar point pattern:  698 points\nAverage intensity 28.85876 points per square km\n\nCoordinates are given to 6 decimal places\n\nWindow: rectangle = [26.93513, 31.78609] x [27.89004, 32.87601] km\n                    (4.851 x 4.986 km)\nWindow area = 24.1868 square km\nUnit of length: 1 km\n\n\nReveal Code\nsummary(central_grab_weekday_ppp.km)\n\n\nPlanar point pattern:  2335 points\nAverage intensity 75.73262 points per square km\n\nCoordinates are given to 6 decimal places\n\nWindow: rectangle = [26.90248, 32.82973] x [28.05048, 33.25224] km\n                    (5.927 x 5.202 km)\nWindow area = 30.8322 square km\nUnit of length: 1 km\n\n\nSummaries of the Grab trip origins planar point pattern objects now show that the points have successfully been re-scaled to km."
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_01/Take-Home_Exercise_01.html#conducting-and-analysing-kernel-density-estimation",
    "href": "Take-Home_Exercise/Take-Home_Exercise_01/Take-Home_Exercise_01.html#conducting-and-analysing-kernel-density-estimation",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of Grab’s hailing services in Singapore",
    "section": "Conducting and Analysing Kernel Density Estimation",
    "text": "Conducting and Analysing Kernel Density Estimation\n\nUsing the ppl method to conduct the Kernel Density Estimations\nThe ppl method is favoured here because the pre-emptive visualisation showed us that the call origins are generally spread out in multiple clusters over the week. As such, we do not use the diggle bandwidth method as we are not searching for a single cluster within a bunch of noise but rather multiple clusters.\nThe KDE are computed using the density() function from spatstat, specifying bw.ppl for the kernel bandwidth. Especially as there are large clusters near the edge of our project’s geographical boundaries observable from earlier visualisations, it is imperative that we correct for edge bias by specifying it to TRUE.\n\n\nReveal Code\npar(cex.main = 0.7)\n\nkde_central_grab_weekend_ppl_bw.km &lt;- density(central_grab_weekend_ppp.km, sigma=bw.ppl, edge=TRUE, kernel=\"gaussian\")\n\nkde_central_grab_weekday_ppl_bw.km &lt;- density(central_grab_weekday_ppp.km, sigma=bw.ppl, edge=TRUE, kernel=\"gaussian\")\n\nplot(kde_central_grab_weekend_ppl_bw.km, main = \"Scaled Kernel Density Estimate of Grab Trip Origins in Central SG on Weekends (ppl)\")\n\n\n\n\n\n\n\n\n\nReveal Code\nplot(kde_central_grab_weekday_ppl_bw.km, main = \"Scaled Kernel Density Estimate of Grab Trip Origins in Central SG on Weekdays (ppl)\")\n\n\n\n\n\n\n\n\n\nFrom the produced KDE plots, we can confirm that the Grab trip origins are pretty evenly spread out in multiple clusters across the CBD on the weekdays. However, the trips are far more concentrated in the northern half of the CBD than we initially realised, with 2 big hotspots in there which stand out from the rest.\n\n\nUsing the Adaptive Bandwidth method to conduct the Kernel Density Estimations\nAn adaptive bandwidth method can also be applied to our kernel density estimates instead:\n\n\nReveal Code\npar(cex.main = 0.7)\n\nkde_central_grab_weekend_ppp_adaptive &lt;- adaptive.density(central_grab_weekend_ppp.km, method=\"kernel\")\n\nkde_central_grab_weekday_ppp_adaptive &lt;- adaptive.density(central_grab_weekday_ppp.km, method=\"kernel\")\n\nplot(kde_central_grab_weekend_ppp_adaptive, main = \"Kernel Density Estimate of Grab Trip Origins in central SG on weekends (adaptive bandwidth)\")\n\n\n\n\n\n\n\n\n\nReveal Code\nplot(kde_central_grab_weekday_ppp_adaptive, main = \"Kernel Density Estimate of Grab Trip Origins in central SG on weekdays (adaptive bandwidth)\")\n\n\n\n\n\n\n\n\n\nThe adaptive KDE plots tells a similar story to when the ppl bandwidth method was applied. However, this time, the clustering of the origins of Grab trips towards the northern half of the CBD during the weekends are far more evident than before. In fact, when adapative bandwidth is applied, the southern half of the CBD is what can only be described as a cold-spot with barely any purple-ish colouration present. The evidence of multiple but well-spread out clusters across the CBD during the weekdays is more evident here than before as previously it seems like the hot-spots may have been briefly connected, here, the drop-off between each hot-spot is much more obvious.\n\n\nConducting the Clark-Evans test for Spatial Point Pattern\nTo conduct a Clark-Evans’ hypothesis test as to the randomness of the spatial point distribution of Grab trips in the CBD, we can utilise the clarkevans.test() function. Within the function, we can correct for edge bias again, especially now that we know from the KDE that we can expect the data to be heavily concentrated near the top during the weekends. CDF correction method is applied as recommended in the Clark-Evans documentation in R which suggests Donnelly correction for rectangular windows only.\n\n\nReveal Code\nclarkevans.test(central_grab_weekday_ppp.km, correction=\"cdf\", alternative=c(\"clustered\"), nsim=99)\n\n\n\n    Clark-Evans test\n    CDF correction\n    Z-test\n\ndata:  central_grab_weekday_ppp.km\nR = 0.30295, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nReveal Code\nclarkevans.test(central_grab_weekend_ppp.km, correction=\"cdf\", alternative=c(\"clustered\"), nsim=99)\n\n\n\n    Clark-Evans test\n    CDF correction\n    Z-test\n\ndata:  central_grab_weekend_ppp.km\nR = 0.41096, p-value &lt; 2.2e-16\nalternative hypothesis: clustered (R &lt; 1)\n\n\nFrom the p-values of the Clark-Evan’s test, we have to conclude that the distributions of the Grab trip origins display clustering patterns within Singapore’s CBD regardless of the part of the week. This is a conclusion supported by our KDE plots either using ppl or adaptive bandwidth methods."
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_01/Take-Home_Exercise_01.html#conducting-and-analysing-network-constrained-kernel-density-estimations",
    "href": "Take-Home_Exercise/Take-Home_Exercise_01/Take-Home_Exercise_01.html#conducting-and-analysing-network-constrained-kernel-density-estimations",
    "title": "Take-Home Exercise 1: Application of Spatial Point Patterns Analysis to discover the geographical distribution of Grab’s hailing services in Singapore",
    "section": "Conducting and analysing Network-Constrained Kernel Density Estimations",
    "text": "Conducting and analysing Network-Constrained Kernel Density Estimations\n\nLimiting the Road Network Data to Central Singapore\nEarlier in this report, we conducted an extraction of the road networks from OpenStreetMap using the st_intersection() function. We will need to do so again as we have since further limited the scope of our study to the CBD. This time however, as the purpose of using the road network data lies in constructing Network-Contrained Kernel Density Estimations, we will need to ensure that only spatial Line features exist in the data. To do so, we can employ the st_cast() function to coerce any other spatial features to Spatial Lines.\n\n\nReveal Code\ncentral_roads &lt;- st_intersection(roads, central_sg)\n\ncentral_roads &lt;- st_cast(central_roads, \"LINESTRING\")\n\nwrite_rds(central_roads, \"Data/Geospatial/RDS/central_road_network.rds\")\n\n\nOnce again we save the spliced data for further use as it is computationally expensive.\n\n\nReveal Code\ncentral_roads &lt;- read_rds(\"Data/Geospatial/RDS/central_road_network.rds\")\n\ncentral_roads &lt;- st_simplify(central_roads, preserveTopology = FALSE)\n\n\n\nVisualising the Road Network Data across the CBD\nUsing the tm_lines() function we can build a visual plot of the road networks in the CBD\n\n\nReveal Code\ncentral_road_network_plot &lt;- tm_shape(central_sg) +\n  tm_polygons(col = \"lightyellow\") +\n  tm_layout(main.title = \"Road Network in Central Singapore\") +\n  tm_shape(central_roads) +\n  tm_lines(col = \"brown\")\n\ntmap_save(central_road_network_plot, \"Screenshots/central_road_network.png\")\n\n\n\n\n\n\nPreparing the lixel objects and generating the line centre points\nIn order to conduct NKDE, we will need to use the spNetwork package which requires that we parse lixel objects rather than sf objects with LINESTRING geometry type. Thus, we need to generate these lixels using the lixelize_lines() function. Additionally, the computation of NKDE also requires that we generate the center points of these lixels. This can be generated by parsing the lixels into the lines_center() function.\n\n\nReveal Code\nlixels &lt;- lixelize_lines(central_roads, 700, mindist = 300)\n\nsamples &lt;- lines_center(lixels)\n\nwrite_rds(lixels, \"Data/Geospatial/RDS/central_road_lixels.rds\")\n\nwrite_rds(samples, \"Data/Geospatial/RDS/central_road_centrepoints.rds\")\n\n\nAs the road network data is quite extensive, the computation of the lixels are extremely computationally expensive and time consuming. Thus, we save the generated lixels and lixel center points as RDS files also.\n\n\nReveal Code\nlixels &lt;- read_rds(\"Data/Geospatial/RDS/central_road_lixels.rds\")\n\nsamples &lt;- read_rds(\"Data/Geospatial/RDS/central_road_centrepoints.rds\")\n\n\n\n\nPerforming the Network Constrained Kernel Density Estimation\nNow that we have prepared the lixels and their center points, we can run the NKDE across our 2 segmented Grab data. Our previous KDE plots provides us with some indicates of the parameters in which we can run our NKDE upon. Firstly, the kernel used should be “quartic” as we are looking for several spikes in the data whilst being less sensitive to outlier events because we know that the southern parts of the CBD are less densely serviced by Grab than the northern parts during the weekends. And even though the data is more evenly spread out in the workweek, the adaptive KDE reveals that the data exists as multiple hot-spots with strong drop-offs rather than a smooth transition to the next hot-spot. We run it on a “simple” method and set sparse to TRUE to reduce computation time, but also set verbose to TRUE to get updated that the process is running properly as the computation is expected to be very time-consuming regardless.\n\nFor the Weekday Data:\nUsing the nkde() function to compute the network-constrained kernel density estimates of the weekday Grab trips in the CBD:\n\n\nReveal Code\nweekday_densities &lt;- nkde(central_roads, \n                          events = central_grab_weekday_sf,  \n                          w = rep(1,nrow(central_grab_weekday_sf)), \n                          samples = samples, \n                          kernel_name = \"quartic\", \n                          bw = 300, \n                          div= \"bw\", \n                          method = \"simple\", \n                          digits = 1, \n                          tol = 1, \n                          grid_shape = c(1,1), \n                          max_depth = 8, \n                          agg = 5, \n                          sparse = TRUE, \n                          verbose = TRUE)\n\nwrite_rds(weekday_densities, \"Data/Geospatial/RDS/Grab_weekday_nkde.rds\")\n\n\nOnce the density estimates are computed, we store them away as RDS files to avoid running them again unless there is a change in the data.\n\n\nReveal Code\nweekday_densities &lt;- read_rds(\"Data/Geospatial/RDS/Grab_weekday_nkde.rds\")\n\nsamples$density &lt;- weekday_densities * 1000\nlixels$density &lt;- weekday_densities * 1000\n\n\nWe then reassign the computed densities to the lixel and lixel center point objects used.\n\n\nVisualising the Network Constrained Kernel Density Estimate of the Weekday Grab Data over an interactive OpenStreetMap layer\nUsing the densities appended to the lixels generated, and the tm_lines() and tm_dots() function, we can visualise the NKDE plots. Furthermore, we shall use tm_basemap(“OpenStreetMap”) as the base layer rather than the central_sg polygons previously used. This will allow us to obtain contextualised information of the hot-spots from the NKDE produced.\n\n\nReveal Code\ngrab_weekday_interactive &lt;-  tm_shape(lixels) +\n  tm_lines(col=\"density\", lwd = 2) +\n  tm_layout(frame = TRUE, main.title = \"Network-Constrained Kernel Density Estimation of Grab Call Origins in the CBD\") +\n  tm_shape(central_grab_weekday_sf) +\n  tm_dots(col = \"green\", alpha = 0.5, size = 0.01) +\n  tm_scale_bar() +\n  tm_basemap(\"OpenStreetMap\")\n\ngrab_weekday_interactive &lt;- tmap_leaflet(grab_weekday_interactive)\n\nsaveWidget(grab_weekday_interactive, \"Screenshots/CBD_grab_weekday_interactive.html\")\n\n\n\n\n\n\nExamining the network constrained kernel density estimation plot for Grab trips in the CBD on weekdays, we can see that there are 5 main clusters which have been formed in the following areas:\n\nIn Orchard, around the junctions near Orchard Ion Shopping Center.\nAlong Somerset and Orchard Roads, between Somerset and Dhoby Ghaut MRT stations.\nAround Rochor and Bugis.\nChinatown\nRaffles Place\n\nIntuitively, we this makes sense as 1. and 2. are huge shopping districts in addition to housing plenty of offices. As such, we should expect them to be frequented by tourist who may be more inclined to using Grab, as well as office workers returning home from the area after work or a night out. For hot spot 3., even though less offices are expected there, there are more nightlife spots in the area which could explain why a cluster if formed there as well.\nThe hot-spots 4. and 5. are especially strong when compared to the other 3. This is likely a result of the concentration of financial institutions and large multinational corporations concentrated in the area unlike around the other 3 clusters. Thus, an explanation for hot spots 4 and 5 would be that demand from office workers returning home either from work or a night out is strongly contributing to Grab demand in these parts of the CBD.\n\n\nFor the Weekend Data:\nUsing the nkde() function to compute the network-constrained kernel density estimates of the weekend Grab trips in the CBD:\n\n\nReveal Code\nweekend_densities &lt;- nkde(central_roads,\n                  events = central_grab_weekend_sf,\n                  w = rep(1,nrow(central_grab_weekend_sf)),\n                  samples = samples,\n                  kernel_name = \"quartic\",\n                  bw = 300,\n                  div= \"bw\",\n                  method = \"simple\",\n                  digits = 1,\n                  tol = 1,\n                  grid_shape = c(1,1),\n                  max_depth = 8,\n                  agg = 5,\n                  sparse = TRUE,\n                  verbose = TRUE)\n\nwrite_rds(weekend_densities, \"Data/Geospatial/RDS/Grab_weekend_nkde.rds\")\n\n\n\n\nReveal Code\nweekend_densities &lt;- read_rds(\"Data/Geospatial/RDS/Grab_weekend_nkde.rds\")\n\nsamples$density &lt;- weekend_densities * 1000\nlixels$density &lt;- weekend_densities * 1000\n\n\n\n\nVisualising the Network Constrained Kernel Density Estimate of the Weekend Grab Data over an interactive OpenStreetMap layer\nSimilarly, like in the visualisation of the weekday Grab data, we can visualise the weekend Grab data within the CBD on weekends:\n\n\nReveal Code\ngrab_weekend_interactive &lt;-  tm_shape(lixels) +\n  tm_lines(col=\"density\", lwd = 2) +\n  tm_layout(frame = TRUE) +\n  tm_shape(central_grab_weekend_sf) +\n  tm_dots(col = \"green\", alpha = 0.5, size = 0.01) +\n  tm_scale_bar() +\n  tm_basemap(\"OpenStreetMap\")\n\ngrab_weekend_interactive &lt;- tmap_leaflet(grab_weekend_interactive)\n\nsaveWidget(grab_weekend_interactive, \"Screenshots/CBD_grab_weekend_interactive.html\")\n\n\n\n\n\n\nLooking at the network constrained kernel density estimation plot generated for Grab trips in the CBD on weekends, we cannot pin point any new and significant clusters when compared to the NKDE generated for the weekdays. There are 2 main differences however. The region around Fort Canning Park and the Esplanade appear to be slightly more dense than before, and clusters 4. and 5. have all but disappeared. It is possible that people are leaving from Fort Canning and the Esplanade more often on the weekends, but a more like cause is that the disappearance of clusters 4. and 5. and biased the NKDE computation slightly in these areas.\nThe visualisation of the weekend NKDE gives credence to the earlier suggestion that office workers are the heaviest contributors to the Grab call demand in Chinatown and Raffles Place as majority of offices are not opened on the weekends which would explain the tank in the Grab call demand."
  },
  {
    "objectID": "Hands-On_Exercise/Hands-On_Exercise_01/Hands-On_Exercise_01.html#section",
    "href": "Hands-On_Exercise/Hands-On_Exercise_01/Hands-On_Exercise_01.html#section",
    "title": "Hands-On Exercise 1: Geospatial Data Wrangling with R",
    "section": "1.3",
    "text": "1.3\n\n\nReveal Code\n#Installing the pacman package\n#install.packages('pacman')\npacman::p_load(sf, tidyverse) \n\n\n#1.4\n\n\nReveal Code\n#1.4.1\nmpsz = st_read(dsn = \"Data/Geospatial/Master Plan\", \n               layer = \"MP14_SUBZONE_WEB_PL\")\n\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\yungq\\Desktop\\SMU Modules\\Y4S1\\Geospatial Analysis and Applications\\IS415 Course Website\\Hands-On_Exercise\\Hands-On_Exercise_01\\Data\\Geospatial\\Master Plan' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nReveal Code\n#1.4.2\ncyclingpath = st_read(dsn = \"Data/Geospatial/CyclingPath\", \n                      layer = \"CyclingPathGazette\")\n\n\nReading layer `CyclingPathGazette' from data source \n  `C:\\Users\\yungq\\Desktop\\SMU Modules\\Y4S1\\Geospatial Analysis and Applications\\IS415 Course Website\\Hands-On_Exercise\\Hands-On_Exercise_01\\Data\\Geospatial\\CyclingPath' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2558 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\n\nReveal Code\n#1.4.3\npreschool = st_read(\"Data/Geospatial/Pre-School Location/PreSchoolsLocation.kml\")\n\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\Users\\yungq\\Desktop\\SMU Modules\\Y4S1\\Geospatial Analysis and Applications\\IS415 Course Website\\Hands-On_Exercise\\Hands-On_Exercise_01\\Data\\Geospatial\\Pre-School Location\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n#1.5\n\n\nReveal Code\n#1.5.1\nst_geometry(mpsz)\n\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\nReveal Code\n#1.5.2\nglimpse(mpsz)\n\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\nReveal Code\n#1.5.3\nhead(mpsz, n = 5)\n\n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n\n\n#1.6\n\n\nReveal Code\nplot(mpsz)\n\n\n\n\n\n\n\n\n\nReveal Code\nplot(st_geometry(mpsz))\n\n\n\n\n\n\n\n\n\nReveal Code\nplot(mpsz[\"PLN_AREA_N\"])\n\n\n\n\n\n\n\n\n\n#1.7\n\n\nReveal Code\n#1.7.1\nst_crs(mpsz)\n\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\nReveal Code\nmpsz3414 &lt;- st_set_crs(mpsz, 3414)\nst_crs(mpsz3414)\n\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nReveal Code\n#1.7.2\npreschool3414 &lt;- st_transform(preschool, \n                              crs = 3414)\n\n\n#1.8\n\n\nReveal Code\n#1.8.1\nlistings &lt;- read_csv(\"Data/Aspatial/Airbnb Listing/listings.csv\")\nlist(listings)\n\n\n[[1]]\n# A tibble: 3,457 × 75\n       id listing_url            scrape_id last_scraped source name  description\n    &lt;dbl&gt; &lt;chr&gt;                      &lt;dbl&gt; &lt;date&gt;       &lt;chr&gt;  &lt;chr&gt; &lt;lgl&gt;      \n 1  71609 https://www.airbnb.co…   2.02e13 2023-12-27   previ… Vill… NA         \n 2  71896 https://www.airbnb.co…   2.02e13 2023-12-26   city … Home… NA         \n 3  71903 https://www.airbnb.co…   2.02e13 2023-12-26   city … Home… NA         \n 4 275343 https://www.airbnb.co…   2.02e13 2023-12-26   city … Rent… NA         \n 5 275344 https://www.airbnb.co…   2.02e13 2023-12-26   city … Rent… NA         \n 6 289234 https://www.airbnb.co…   2.02e13 2023-12-27   previ… Home… NA         \n 7 294281 https://www.airbnb.co…   2.02e13 2023-12-27   city … Rent… NA         \n 8 324945 https://www.airbnb.co…   2.02e13 2023-12-26   city … Rent… NA         \n 9 330095 https://www.airbnb.co…   2.02e13 2023-12-26   city … Rent… NA         \n10 369141 https://www.airbnb.co…   2.02e13 2023-12-27   city … Plac… NA         \n# ℹ 3,447 more rows\n# ℹ 68 more variables: neighborhood_overview &lt;chr&gt;, picture_url &lt;chr&gt;,\n#   host_id &lt;dbl&gt;, host_url &lt;chr&gt;, host_name &lt;chr&gt;, host_since &lt;date&gt;,\n#   host_location &lt;chr&gt;, host_about &lt;chr&gt;, host_response_time &lt;chr&gt;,\n#   host_response_rate &lt;chr&gt;, host_acceptance_rate &lt;chr&gt;,\n#   host_is_superhost &lt;lgl&gt;, host_thumbnail_url &lt;chr&gt;, host_picture_url &lt;chr&gt;,\n#   host_neighbourhood &lt;chr&gt;, host_listings_count &lt;dbl&gt;, …\n\n\nReveal Code\n#1.8.2\nlistings_sf &lt;- st_as_sf(listings, \n                        coords = c(\"longitude\", \"latitude\"), \n                        crs=4326) %&gt;%\n  st_transform(crs = 3414)\n\nglimpse(listings_sf)\n\n\nRows: 3,457\nColumns: 74\n$ id                                           &lt;dbl&gt; 71609, 71896, 71903, 2753…\n$ listing_url                                  &lt;chr&gt; \"https://www.airbnb.com/r…\n$ scrape_id                                    &lt;dbl&gt; 2.023123e+13, 2.023123e+1…\n$ last_scraped                                 &lt;date&gt; 2023-12-27, 2023-12-26, …\n$ source                                       &lt;chr&gt; \"previous scrape\", \"city …\n$ name                                         &lt;chr&gt; \"Villa in Singapore · ★4.…\n$ description                                  &lt;lgl&gt; NA, NA, NA, NA, NA, NA, N…\n$ neighborhood_overview                        &lt;chr&gt; NA, NA, \"Quiet and view o…\n$ picture_url                                  &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_id                                      &lt;dbl&gt; 367042, 367042, 367042, 1…\n$ host_url                                     &lt;chr&gt; \"https://www.airbnb.com/u…\n$ host_name                                    &lt;chr&gt; \"Belinda\", \"Belinda\", \"Be…\n$ host_since                                   &lt;date&gt; 2011-01-29, 2011-01-29, …\n$ host_location                                &lt;chr&gt; \"Singapore\", \"Singapore\",…\n$ host_about                                   &lt;chr&gt; \"Hi My name is Belinda -H…\n$ host_response_time                           &lt;chr&gt; \"N/A\", \"N/A\", \"N/A\", \"wit…\n$ host_response_rate                           &lt;chr&gt; \"N/A\", \"N/A\", \"N/A\", \"100…\n$ host_acceptance_rate                         &lt;chr&gt; \"100%\", \"100%\", \"100%\", \"…\n$ host_is_superhost                            &lt;lgl&gt; FALSE, FALSE, FALSE, FALS…\n$ host_thumbnail_url                           &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_picture_url                             &lt;chr&gt; \"https://a0.muscache.com/…\n$ host_neighbourhood                           &lt;chr&gt; \"Tampines\", \"Tampines\", \"…\n$ host_listings_count                          &lt;dbl&gt; 5, 5, 5, 51, 51, 5, 7, 51…\n$ host_total_listings_count                    &lt;dbl&gt; 15, 15, 15, 68, 68, 15, 8…\n$ host_verifications                           &lt;chr&gt; \"['email', 'phone']\", \"['…\n$ host_has_profile_pic                         &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ host_identity_verified                       &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ neighbourhood                                &lt;chr&gt; NA, NA, \"Singapore, Singa…\n$ neighbourhood_cleansed                       &lt;chr&gt; \"Tampines\", \"Tampines\", \"…\n$ neighbourhood_group_cleansed                 &lt;chr&gt; \"East Region\", \"East Regi…\n$ property_type                                &lt;chr&gt; \"Private room in villa\", …\n$ room_type                                    &lt;chr&gt; \"Private room\", \"Private …\n$ accommodates                                 &lt;dbl&gt; 3, 1, 2, 1, 1, 4, 2, 1, 1…\n$ bathrooms                                    &lt;lgl&gt; NA, NA, NA, NA, NA, NA, N…\n$ bathrooms_text                               &lt;chr&gt; \"1 private bath\", \"Shared…\n$ bedrooms                                     &lt;lgl&gt; NA, NA, NA, NA, NA, NA, N…\n$ beds                                         &lt;dbl&gt; 3, 1, 2, 1, 1, 5, 1, 1, 1…\n$ amenities                                    &lt;chr&gt; \"[]\", \"[]\", \"[]\", \"[]\", \"…\n$ price                                        &lt;chr&gt; \"$150.00\", \"$80.00\", \"$80…\n$ minimum_nights                               &lt;dbl&gt; 92, 92, 92, 60, 60, 92, 9…\n$ maximum_nights                               &lt;dbl&gt; 365, 365, 365, 999, 999, …\n$ minimum_minimum_nights                       &lt;dbl&gt; 92, 92, 92, 60, 60, 92, 9…\n$ maximum_minimum_nights                       &lt;dbl&gt; 92, 92, 92, 60, 60, 92, 9…\n$ minimum_maximum_nights                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ maximum_maximum_nights                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ minimum_nights_avg_ntm                       &lt;dbl&gt; 92, 92, 92, 60, 60, 92, 9…\n$ maximum_nights_avg_ntm                       &lt;dbl&gt; 1125, 1125, 1125, 1125, 1…\n$ calendar_updated                             &lt;lgl&gt; NA, NA, NA, NA, NA, NA, N…\n$ has_availability                             &lt;lgl&gt; TRUE, TRUE, TRUE, TRUE, T…\n$ availability_30                              &lt;dbl&gt; 30, 30, 30, 6, 6, 29, 30,…\n$ availability_60                              &lt;dbl&gt; 34, 60, 60, 6, 6, 33, 60,…\n$ availability_90                              &lt;dbl&gt; 55, 90, 90, 6, 6, 54, 90,…\n$ availability_365                             &lt;dbl&gt; 55, 91, 91, 183, 183, 54,…\n$ calendar_last_scraped                        &lt;date&gt; 2023-12-27, 2023-12-26, …\n$ number_of_reviews                            &lt;dbl&gt; 19, 24, 46, 20, 16, 12, 1…\n$ number_of_reviews_ltm                        &lt;dbl&gt; 0, 0, 0, 0, 3, 0, 0, 1, 2…\n$ number_of_reviews_l30d                       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ first_review                                 &lt;date&gt; 2011-12-19, 2011-07-30, …\n$ last_review                                  &lt;date&gt; 2020-01-17, 2019-10-13, …\n$ review_scores_rating                         &lt;dbl&gt; 4.44, 4.16, 4.41, 4.40, 4…\n$ review_scores_accuracy                       &lt;dbl&gt; 4.37, 4.22, 4.39, 4.16, 4…\n$ review_scores_cleanliness                    &lt;dbl&gt; 4.00, 4.09, 4.52, 4.26, 4…\n$ review_scores_checkin                        &lt;dbl&gt; 4.63, 4.43, 4.63, 4.47, 4…\n$ review_scores_communication                  &lt;dbl&gt; 4.78, 4.43, 4.64, 4.42, 4…\n$ review_scores_location                       &lt;dbl&gt; 4.26, 4.17, 4.50, 4.53, 4…\n$ review_scores_value                          &lt;dbl&gt; 4.32, 4.04, 4.36, 4.63, 4…\n$ license                                      &lt;chr&gt; NA, NA, NA, \"S0399\", \"S03…\n$ instant_bookable                             &lt;lgl&gt; FALSE, FALSE, FALSE, TRUE…\n$ calculated_host_listings_count               &lt;dbl&gt; 5, 5, 5, 51, 51, 5, 7, 51…\n$ calculated_host_listings_count_entire_homes  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 1, 0, 0…\n$ calculated_host_listings_count_private_rooms &lt;dbl&gt; 5, 5, 5, 51, 51, 5, 6, 51…\n$ calculated_host_listings_count_shared_rooms  &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ reviews_per_month                            &lt;dbl&gt; 0.13, 0.16, 0.30, 0.15, 0…\n$ geometry                                     &lt;POINT [m]&gt; POINT (41972.5 3639…\n\n\n#1.9\n\n\nReveal Code\n#1.9.1\nbuffer_cycling &lt;- st_buffer(cyclingpath, \n                            dist=5, nQuadSegs = 30)\n\nbuffer_cycling$AREA &lt;- st_area(buffer_cycling)\nsum(buffer_cycling$AREA)\n\n\n1774367 [m^2]\n\n\nReveal Code\n#1.9.2\nmpsz3414$`PreSch Count`&lt;- lengths(st_intersects(mpsz3414, preschool3414))\nsummary(mpsz3414$`PreSch Count`)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n\n\nReveal Code\ntop_n(mpsz3414, 1, `PreSch Count`)\n\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           72\n\n\nReveal Code\nmpsz3414$Area &lt;- mpsz3414 %&gt;% \n  st_area()\n\nmpsz3414 &lt;- mpsz3414 %&gt;% \n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)\n\n\n#1.10\n\n\nReveal Code\nhist(mpsz3414$`PreSch Density`)\n\n\n\n\n\n\n\n\n\nReveal Code\nggplot(data=mpsz3414, \n       aes(x= as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") + \n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\", \n       x = \"Pre-school density (per km sq)\", \n       y = \"Frequency\")\n\n\n\n\n\n\n\n\n\nReveal Code\nggplot(data=mpsz3414, \n       aes(y = `PreSch Count`, \n           x= as.numeric(`PreSch Density`))) + \n  geom_point(color=\"black\", \n             fill=\"light blue\") + \n  xlim(0, 40) + \n  ylim(0, 40) +\n  labs(title = \"\", \n       x = \"Pre-school density (per km sq)\", \n       y = \"Pre-school count\")"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_02/In-Class_Exercise_02.html",
    "href": "In-Class_Exercise/In-Class_Exercise_02/In-Class_Exercise_02.html",
    "title": "In-Class Exercise 2: R for Geospatial Data Science",
    "section": "",
    "text": "Loading the following R packages:\n\narrow\nlubridate\ntidyverse\ntmap\nsf\n\n\n\nReveal Code\npacman::p_load(arrow, lubridate, tidyverse, tmap, sf)"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_02/In-Class_Exercise_02.html#preparing-the-data-for-use",
    "href": "In-Class_Exercise/In-Class_Exercise_02/In-Class_Exercise_02.html#preparing-the-data-for-use",
    "title": "In-Class Exercise 2: R for Geospatial Data Science",
    "section": "Preparing the data for use",
    "text": "Preparing the data for use\n\n\nReveal Code\ndf$pingtimestamp &lt;- as_datetime(df$pingtimestamp)"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_02/In-Class_Exercise_02.html#extracting-the-origin-locations-of-the-trips",
    "href": "In-Class_Exercise/In-Class_Exercise_02/In-Class_Exercise_02.html#extracting-the-origin-locations-of-the-trips",
    "title": "In-Class Exercise 2: R for Geospatial Data Science",
    "section": "Extracting the origin locations of the trips",
    "text": "Extracting the origin locations of the trips\n\n\nReveal Code\norigin_df &lt;- df %&gt;% \n  group_by(trj_id) %&gt;% \n  arrange(pingtimestamp) %&gt;% \n  filter(row_number() == 1) %&gt;% \n  mutate(weekday = wday(pingtimestamp, label = TRUE, abbr = TRUE), start_hr = factor(hour(pingtimestamp)), day = factor(mday(pingtimestamp)))\n\nhead(origin_df)\n\n\n# A tibble: 6 × 12\n# Groups:   trj_id [6]\n  trj_id driving_mode osname  pingtimestamp       rawlat rawlng speed bearing\n  &lt;chr&gt;  &lt;chr&gt;        &lt;chr&gt;   &lt;dttm&gt;               &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;   &lt;int&gt;\n1 70895  car          android 2019-04-08 00:09:40   1.38   104.  6.80      41\n2 21926  car          android 2019-04-08 00:09:49   1.29   104. 10.8       68\n3 47498  car          ios     2019-04-08 00:09:52   1.38   104. 18.3      307\n4 41322  car          android 2019-04-08 00:10:00   1.28   104. 18.7      230\n5 18103  car          android 2019-04-08 00:10:09   1.45   104. 14.1      155\n6 64813  car          ios     2019-04-08 00:10:12   1.31   104. 19.8      109\n# ℹ 4 more variables: accuracy &lt;dbl&gt;, weekday &lt;ord&gt;, start_hr &lt;fct&gt;, day &lt;fct&gt;"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_02/In-Class_Exercise_02.html#extracting-the-destination-locations-of-the-trips",
    "href": "In-Class_Exercise/In-Class_Exercise_02/In-Class_Exercise_02.html#extracting-the-destination-locations-of-the-trips",
    "title": "In-Class Exercise 2: R for Geospatial Data Science",
    "section": "Extracting the destination locations of the trips",
    "text": "Extracting the destination locations of the trips\n\n\nReveal Code\ndestination_df &lt;- df %&gt;% \n  group_by(trj_id) %&gt;% \n  arrange(desc(pingtimestamp)) %&gt;% \n  filter(row_number() == 1) %&gt;% \n  mutate(weekday = wday(pingtimestamp, label = TRUE, abbr = TRUE), start_hr = factor(hour(pingtimestamp)), day = factor(mday(pingtimestamp)))\n\nhead(destination_df)\n\n\n# A tibble: 6 × 12\n# Groups:   trj_id [6]\n  trj_id driving_mode osname  pingtimestamp       rawlat rawlng speed bearing\n  &lt;chr&gt;  &lt;chr&gt;        &lt;chr&gt;   &lt;dttm&gt;               &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;   &lt;int&gt;\n1 54687  car          android 2019-04-21 23:56:37   1.44   104.  1.19     299\n2 81574  car          ios     2019-04-21 23:56:33   1.34   104. 17.4      117\n3 17190  car          android 2019-04-21 23:56:30   1.34   104.  9.09     201\n4 13793  car          android 2019-04-21 23:56:25   1.32   104.  5.55     180\n5 39014  car          ios     2019-04-21 23:56:11   1.33   104. 14.1      179\n6 41170  car          ios     2019-04-21 23:56:09   1.32   104. 13.0       73\n# ℹ 4 more variables: accuracy &lt;dbl&gt;, weekday &lt;ord&gt;, start_hr &lt;fct&gt;, day &lt;fct&gt;\n\n\n\n\nReveal Code\nwrite_rds(origin_df, \"Data/rds/origin_df_part0.rds\")\nwrite_rds(destination_df, \"Data/rds/destination_df_part0.rds\")"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_02/In-Class_Exercise_02.html#importing-the-prepared-data",
    "href": "In-Class_Exercise/In-Class_Exercise_02/In-Class_Exercise_02.html#importing-the-prepared-data",
    "title": "In-Class Exercise 2: R for Geospatial Data Science",
    "section": "Importing the prepared data",
    "text": "Importing the prepared data"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_02/In-Class_Exercise_02.html#converting-the-aspatial-data-to-geospatial-data",
    "href": "In-Class_Exercise/In-Class_Exercise_02/In-Class_Exercise_02.html#converting-the-aspatial-data-to-geospatial-data",
    "title": "In-Class Exercise 2: R for Geospatial Data Science",
    "section": "Converting the aspatial data to geospatial data",
    "text": "Converting the aspatial data to geospatial data\n\n\nReveal Code\norigin_sf &lt;- \n  st_as_sf(origin_df, coords = c(\"rawlng\", \"rawlat\"), crs = 4326) %&gt;%\n  st_transform(crs = 3414)"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_02/In-Class_Exercise_02.html#visualising-the-frequency-distribution",
    "href": "In-Class_Exercise/In-Class_Exercise_02/In-Class_Exercise_02.html#visualising-the-frequency-distribution",
    "title": "In-Class Exercise 2: R for Geospatial Data Science",
    "section": "Visualising the frequency distribution",
    "text": "Visualising the frequency distribution\n\n\nReveal Code\nggplot(data=origin_df, \n       aes(x=weekday)) + \n  geom_bar()"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_02/In-Class_Exercise_02.html#visualising-the-trip-origins-as-points",
    "href": "In-Class_Exercise/In-Class_Exercise_02/In-Class_Exercise_02.html#visualising-the-trip-origins-as-points",
    "title": "In-Class Exercise 2: R for Geospatial Data Science",
    "section": "Visualising the trip origins as points",
    "text": "Visualising the trip origins as points\n\n\nReveal Code\ntmap_mode(\"plot\")\ntm_shape(origin_sf) +\n  tm_dots()"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_02/In-Class_Exercise_02.html#importing-the-map-layer",
    "href": "In-Class_Exercise/In-Class_Exercise_02/In-Class_Exercise_02.html#importing-the-map-layer",
    "title": "In-Class Exercise 2: R for Geospatial Data Science",
    "section": "Importing the map layer",
    "text": "Importing the map layer\n\n\nReveal Code\nmpsz2019 &lt;- st_read(\"Data/DataGov/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\") %&gt;%\n  st_transform(crs = 3414)\n\n\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `C:\\Users\\yungq\\Desktop\\SMU Modules\\Y4S1\\Geospatial Analysis and Applications\\IS415 Course Website\\In-Class_Exercise\\In-Class_Exercise_02\\Data\\DataGov\\MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_02/In-Class_Exercise_02.html#imposing-the-grab-trip-data-onto-the-map-polygon",
    "href": "In-Class_Exercise/In-Class_Exercise_02/In-Class_Exercise_02.html#imposing-the-grab-trip-data-onto-the-map-polygon",
    "title": "In-Class Exercise 2: R for Geospatial Data Science",
    "section": "Imposing the Grab trip data onto the map polygon",
    "text": "Imposing the Grab trip data onto the map polygon\n\n\nReveal Code\ntm_shape(mpsz2019) + \n  tm_polygons() + \n  tm_shape(origin_sf) +\n  tm_dots()"
  },
  {
    "objectID": "Hands-On_Exercise/Hands-On_Exercise_06/Hands-On_Exercise_06.html",
    "href": "Hands-On_Exercise/Hands-On_Exercise_06/Hands-On_Exercise_06.html",
    "title": "Hands-On Exercise 6:",
    "section": "",
    "text": "Reveal Code\nplot(mtcars)\n\n\n\n\n\nCaption for first plot\n\n\n\n\nReveal Code\nplot(cars)\n\n\n\n\n\nCaption for second plot\n\n\n\n\n\n\n\nCaption for first plot\nCaption for second plot"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_05/In-Class_Exercise_05.html#global-and-local-morans-i-analysis",
    "href": "In-Class_Exercise/In-Class_Exercise_05/In-Class_Exercise_05.html#global-and-local-morans-i-analysis",
    "title": "In-Class Exercise 5: Global and Local Measures of Spatial Autocorrelation using sfDep methods",
    "section": "Global and Local Moran’s I Analysis",
    "text": "Global and Local Moran’s I Analysis\n\nDeriving the congruity weights using the QUEEN’s method\n\n\nReveal Code\nwm_q &lt;- hunan_GDPPC %&gt;% \n  mutate(nb = st_contiguity(geometry), wt = st_weights(nb, style = \"W\"), .before = 1)\n\n\n\n\nComputing the Global Moran’s I statistic\n\n\nReveal Code\nmoranI &lt;- global_moran(wm_q$GDPPC, wm_q$nb, wm_q$wt)\n\nglimpse(moranI)\n\n\nList of 2\n $ I: num 0.301\n $ K: num 7.64\n\n\n\n\nPerforming the Global Moran’s I test\n\n\nReveal Code\nglobal_moran_test(wm_q$GDPPC, wm_q$nb, wm_q$wt)\n\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\n\nPerforming the Global Moran’s I permutation test\n\n\nReveal Code\nglobal_moran_perm(x = wm_q$GDPPC, nb = wm_q$nb, wt = wm_q$wt, nsim = 999)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 999, p-value = 0.002\nalternative hypothesis: two.sided\n\n\n\n\nComputing the Local Moran’s I Statistic\n\n\nReveal Code\nlisa &lt;- wm_q %&gt;% \n  mutate(local_moran = local_moran(GDPPC, nb, wt, nsim = 999), .before = 1) %&gt;%\n  unnest(local_moran)\n\nglimpse(lisa)\n\n\nRows: 88\nColumns: 21\n$ ii           &lt;dbl&gt; -1.468468e-03, 2.587817e-02, -1.198765e-02, 1.022468e-03,…\n$ eii          &lt;dbl&gt; 1.433282e-05, -3.790366e-04, 5.482084e-03, 6.493494e-05, …\n$ var_ii       &lt;dbl&gt; 5.155540e-04, 1.022994e-02, 1.089858e-01, 5.451345e-06, 1…\n$ z_ii         &lt;dbl&gt; -0.06530488, 0.25960440, -0.05291774, 0.41011136, 0.40982…\n$ p_ii         &lt;dbl&gt; 0.9479312534, 0.7951689453, 0.9577974516, 0.6817242595, 0…\n$ p_ii_sim     &lt;dbl&gt; 0.820, 0.926, 0.876, 0.596, 0.580, 0.788, 0.050, 0.110, 0…\n$ p_folded_sim &lt;dbl&gt; 0.410, 0.463, 0.438, 0.298, 0.290, 0.394, 0.025, 0.055, 0…\n$ skewness     &lt;dbl&gt; -0.8746918, -1.0109108, 0.8344852, 1.0626077, 1.0830373, …\n$ kurtosis     &lt;dbl&gt; 0.5472523, 1.4929719, 0.6632058, 1.3826526, 1.2643234, 0.…\n$ mean         &lt;fct&gt; Low-High, Low-Low, High-Low, High-High, High-High, High-L…\n$ median       &lt;fct&gt; High-High, High-High, High-High, High-High, High-High, Hi…\n$ pysal        &lt;fct&gt; Low-High, Low-Low, High-Low, High-High, High-High, High-L…\n$ nb           &lt;nb&gt; &lt;2, 3, 4, 57, 85&gt;, &lt;1, 57, 58, 78, 85&gt;, &lt;1, 4, 5, 85&gt;, &lt;1,…\n$ wt           &lt;list&gt; &lt;0.2, 0.2, 0.2, 0.2, 0.2&gt;, &lt;0.2, 0.2, 0.2, 0.2, 0.2&gt;, &lt;0…\n$ NAME_2       &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"C…\n$ ID_3         &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 2…\n$ NAME_3       &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", …\n$ ENGTYPE_3    &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"C…\n$ County       &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", …\n$ GDPPC        &lt;dbl&gt; 23667, 20981, 34592, 24473, 25554, 27137, 63118, 62202, 7…\n$ geometry     &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.228…\n\n\n\n\nVisualising the Local Moran’s I Statistic\n\n\nReveal Code\ntmap_mode(\"plot\")\n\ntm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of GDPPC\",\n            main.title.size = 0.8)\n\n\n\n\n\n\n\n\n\n\n\nVisualising the Local Moran’s I p-value\n\n\nReveal Code\ntmap_mode(\"plot\")\n\ntm_shape(lisa) +\n  tm_fill(\"p_ii_sim\") + \n  tm_borders(alpha = 0.5) +\n   tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\n\n\n\n\n\n\n\n\n\n\nVisualising the LISA map\n\n\nReveal Code\nlisa_sig &lt;- lisa  %&gt;%\n  filter(p_ii &lt; 0.05)\n\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") + \n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_05/In-Class_Exercise_05.html#hot-cold-spot-analysis",
    "href": "In-Class_Exercise/In-Class_Exercise_05/In-Class_Exercise_05.html#hot-cold-spot-analysis",
    "title": "In-Class Exercise 5: Global and Local Measures of Spatial Autocorrelation using sfDep methods",
    "section": "Hot & Cold Spot Analysis",
    "text": "Hot & Cold Spot Analysis\n\nComputing the Local Gi* Statistic\n\n\nReveal Code\nwm_idw &lt;- hunan_GDPPC %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wts = st_inverse_distance(nb, geometry,\n                                   scale = 1,\n                                   alpha = 1),\n         .before = 1)\n\nHCSA &lt;- wm_idw %&gt;% \n  mutate(local_Gi = local_gstar_perm(\n    GDPPC, nb, wt, nsim = 99),\n         .before = 1) %&gt;%\n  unnest(local_Gi)\n\nglimpse(HCSA)\n\n\nRows: 88\nColumns: 17\n$ gi_star      &lt;dbl&gt; 0.04157939, -0.33349729, 0.28072709, 0.41149401, 0.387293…\n$ e_gi         &lt;dbl&gt; 0.011187352, 0.010966172, 0.012616498, 0.011049479, 0.011…\n$ var_gi       &lt;dbl&gt; 5.824384e-06, 7.424333e-06, 7.623252e-06, 8.259654e-06, 8…\n$ p_value      &lt;dbl&gt; 0.12044798, -0.19088895, -0.14545253, 0.54348412, 0.34317…\n$ p_sim        &lt;dbl&gt; 0.9041282886, 0.8486125961, 0.8843535957, 0.5867965185, 0…\n$ p_folded_sim &lt;dbl&gt; 0.80, 0.98, 0.96, 0.50, 0.58, 0.80, 0.04, 0.08, 0.02, 0.2…\n$ skewness     &lt;dbl&gt; 0.40, 0.49, 0.48, 0.25, 0.29, 0.40, 0.02, 0.04, 0.01, 0.1…\n$ kurtosis     &lt;dbl&gt; 1.1100203, 0.7540941, 0.5091735, 1.1628205, 0.9694879, 0.…\n$ nb           &lt;nb&gt; &lt;2, 3, 4, 57, 85&gt;, &lt;1, 57, 58, 78, 85&gt;, &lt;1, 4, 5, 85&gt;, &lt;1,…\n$ wts          &lt;list&gt; &lt;0.01526149, 0.03515537, 0.02176677, 0.02836978, 0.01029…\n$ NAME_2       &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"C…\n$ ID_3         &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 2…\n$ NAME_3       &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", …\n$ ENGTYPE_3    &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"C…\n$ County       &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", …\n$ GDPPC        &lt;dbl&gt; 23667, 20981, 34592, 24473, 25554, 27137, 63118, 62202, 7…\n$ geometry     &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.228…\n\n\n\n\nVisualisng the Local Gi* Statistic\n\n\nReveal Code\ntmap_mode(\"plot\")\n\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8))\n\n\n\n\n\n\n\n\n\n\n\nVisualising the Local Gi* p-value\n\n\nReveal Code\ntmap_mode(\"plot\")\n\ntm_shape(HCSA) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8))\n\n\n\n\n\n\n\n\n\n\n\nVisualising the Hot & Cold Spot Areas\n\n\nReveal Code\nHCSA_sig &lt;- HCSA  %&gt;%\n  filter(p_sim &lt; 0.05)\n\ntmap_mode(\"plot\")\n\ntm_shape(HCSA) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(HCSA_sig) +\n  tm_fill(\"gi_star\") + \n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_05/In-Class_Exercise_05.html#emerging-hot-cold-spot-analysis",
    "href": "In-Class_Exercise/In-Class_Exercise_05/In-Class_Exercise_05.html#emerging-hot-cold-spot-analysis",
    "title": "In-Class Exercise 5: Global and Local Measures of Spatial Autocorrelation using sfDep methods",
    "section": "Emerging Hot & Cold Spot Analysis",
    "text": "Emerging Hot & Cold Spot Analysis"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_05/In-Class_Exercise_05.html#creating-the-spatial-temporal-cube",
    "href": "In-Class_Exercise/In-Class_Exercise_05/In-Class_Exercise_05.html#creating-the-spatial-temporal-cube",
    "title": "In-Class Exercise 5: Global and Local Measures of Spatial Autocorrelation using sfDep methods",
    "section": "Creating the Spatial-Temporal Cube",
    "text": "Creating the Spatial-Temporal Cube\n\n\nReveal Code\nGDPPC_st &lt;- spacetime(hunanGDPPC, hunan,\n                      .loc_col = \"County\",\n                      .time_col = \"Year\")\n\nis_spacetime_cube(GDPPC_st)\n\n\n[1] TRUE\n\n\n\nComputing the Local Gi* Statistic\n\nDeriving the Spatial Weights\n\n\nReveal Code\nGDPPC_nb &lt;- GDPPC_st %&gt;%\n  activate(\"geometry\") %&gt;%\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                  scale = 1,\n                                  alpha = 1),\n         .before = 1) %&gt;%\n  set_nbs(\"nb\") %&gt;%\n  set_wts(\"wt\")\n\n\n\n\nComputing the Gi* Statistic\n\n\nReveal Code\ngi_stars &lt;- GDPPC_nb %&gt;% \n  group_by(Year) %&gt;% \n  mutate(gi_star = local_gstar_perm(\n    GDPPC, nb, wt)) %&gt;% \n  tidyr::unnest(gi_star)\n\n\n\n\n\nConducting the Mann-Kendall Test\n\n\nReveal Code\ncbg &lt;- gi_stars %&gt;% \n  ungroup() %&gt;% \n  filter(County == \"Changsha\") |&gt; \n  select(County, Year, gi_star)\n\n\n\n\nVisualising the Mann-Kendall Test Results\n\n\nReveal Code\nggplot(data = cbg, \n       aes(x = Year, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\n\n\n\n\n\n\nVisualising the Mann-Kendall Test Result Interactively\n\n\nReveal Code\np &lt;- ggplot(data = cbg, \n       aes(x = Year, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\nggplotly(p)\n\n\n\n\n\n\n\n\nComputing the Mann-Kendall p-value to identify emerging hot-spots\n\n\nReveal Code\nehsa &lt;- gi_stars %&gt;%\n  group_by(County) %&gt;%\n  summarise(mk = list(unclass(MannKendall(gi_star)))) %&gt;% \n      unnest_wider(mk)\n\nemerging &lt;- ehsa %&gt;% \n  arrange(sl, abs(tau)) %&gt;% \n  slice(1:5)\n\nemerging\n\n\n# A tibble: 5 × 6\n  County        tau         sl     S     D  varS\n  &lt;chr&gt;       &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Shuangfeng  0.868 0.00000143   118  136.  589.\n2 Xiangtan    0.868 0.00000143   118  136.  589.\n3 Xiangxiang  0.868 0.00000143   118  136.  589.\n4 Chengbu    -0.824 0.00000482  -112  136.  589.\n5 Dongan     -0.824 0.00000482  -112  136.  589.\n\n\n\n\nPerforming the emerging hot-spot analysis\n\n\nReveal Code\nehsa &lt;- emerging_hotspot_analysis(\n  x = GDPPC_st, \n  .var = \"GDPPC\", \n  k = 1, \n  nsim = 99\n)\n\n\n\n\nVisualising the emerging hotspot classes\n\n\nReveal Code\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\n\n\nVisualising the emerging hot-spots geospatially\n\n\nReveal Code\nhunan_ehsa &lt;- hunan %&gt;%\n  left_join(ehsa,\n            by = join_by(County == location))\n\nehsa_sig &lt;- hunan_ehsa  %&gt;%\n  filter(p_value &lt; 0.05)\ntmap_mode(\"plot\")\ntm_shape(hunan_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_02/Take-Home_Exercise_02.html",
    "href": "Take-Home_Exercise/Take-Home_Exercise_02/Take-Home_Exercise_02.html",
    "title": "Take-Home Exercise 2: Using Spatial-Temporal Analysis to investigate the distribution of Dengue Fever cases in Tainan City, Taiwan",
    "section": "",
    "text": "As mentioned in the project outline, Taiwan has been very successful in containing the spread of Dengue Fever for many years. However, in 2023, especially between the epidemic weeks 31 to 50 (which corresponds to the end of July to the middle of December), Taiwan saw a dramatic spike in Dengue Fever cases. The interest of this report then, is to conduct an analysis into the cause of the outbreak, specifically in Tainan City, Taiwan, from a spatial autocorrelation perspective."
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_02/Data/Geospatial/TAINAN_VILLAGE.html",
    "href": "Take-Home_Exercise/Take-Home_Exercise_02/Data/Geospatial/TAINAN_VILLAGE.html",
    "title": "IS415 Course Website",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“TWD97”,DATUM[“Taiwan Datum 1997”,ELLIPSOID[“GRS 1980”,6378137,298.257222101,LENGTHUNIT[“metre”,1]]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“Taiwan, Republic of China - onshore and offshore - Taiwan Island, Penghu (Pescadores) Islands.”],BBOX[17.36,114.32,26.96,123.61]],ID[“EPSG”,3824]] +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs 27230 3824 EPSG:3824 TWD97 longlat EPSG:7019 true"
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_02/Take-Home_Exercise_02.html#priming-the-project",
    "href": "Take-Home_Exercise/Take-Home_Exercise_02/Take-Home_Exercise_02.html#priming-the-project",
    "title": "Take-Home Exercise 2: Using Spatial-Temporal Analysis to investigate the distribution of Dengue Fever cases in Tainan City, Taiwan",
    "section": "",
    "text": "As mentioned in the project outline, Taiwan has been very successful in containing the spread of Dengue Fever for many years. However, in 2023, especially between the epidemic weeks 31 to 50 (which corresponds to the end of July to the middle of December), Taiwan saw a dramatic spike in Dengue Fever cases. The interest of this report then, is to conduct an analysis into the cause of the outbreak, specifically in Tainan City, Taiwan, from a spatial autocorrelation perspective."
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_02/Take-Home_Exercise_02.html#preparing-the-r-environment-for-analysis",
    "href": "Take-Home_Exercise/Take-Home_Exercise_02/Take-Home_Exercise_02.html#preparing-the-r-environment-for-analysis",
    "title": "Take-Home Exercise 2: Using Spatial-Temporal Analysis to investigate the distribution of Dengue Fever cases in Tainan City, Taiwan",
    "section": "Preparing the R-Environment for analysis",
    "text": "Preparing the R-Environment for analysis\n\nLoading the necessary R-packages\nTo do so, we will need the following R-packages:\n\nsf: Allows us to handle both spatial data, i.e. the Tainan map data and XY coordinates within the dengue dataset.\nsfdep: Allows us to run spatial autocorrelation statistical analysis of our data.\nKendall: Used to run the Mann-Kendall’s test in emerging hotspot analysis\ntmap: For visualisation of the spatial data.\ntidyverse: To allow us to investigate, manipulate and write the datasets of interest in a readable manner. Also has great compatibility with sf objects.\nlubridate: To handle time format data and conversion of other data types into time formats.\nggplot2: Used to visualise data in forms like histograms and line graphs.\nhtmlwidgets: Used to save interactive spatial data visualisations as HTML widgets to lessen the burden on Quarto when rendering.\n\nThe p_load() functionfrom the pacman package is used to load the libraries and automatically install them for the user if they aren’t already installed.\n\n\nReveal Code\npacman::p_load(sf, sfdep, Kendall, tmap, tidyverse, lubridate, ggplot2, htmlwidgets)"
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_02/Take-Home_Exercise_02.html#conducting-data-pre-processing-for-analysis",
    "href": "Take-Home_Exercise/Take-Home_Exercise_02/Take-Home_Exercise_02.html#conducting-data-pre-processing-for-analysis",
    "title": "Take-Home Exercise 2: Using Spatial-Temporal Analysis to investigate the distribution of Dengue Fever cases in Tainan City, Taiwan",
    "section": "Conducting data pre-processing for analysis",
    "text": "Conducting data pre-processing for analysis\nThere are 2 datasets of interest to us in this report, the Tainan spatial data, and the dengue_daily aspatial data. The Tainan dataset contains spatial polygon information about the geographical boundaries of Tainan City, whilst the dengue_daily dataset is a record of all reported instances of dengue fever in Taiwan from 1998 till 2023.\n\nImporting the datasets of interest\n\nTainan Spatial Data:\nTo import the Tainan dataset, we require the the st_read() function from the sf package so as to preserve its spatial features. Additionally, st_transform() is required in order to cast the data set into the WGS84 coordinate reference system as the data is originally in TWD97, the Taiwanese CRS. We need to do so in order to visualise the data later on upon OpenStreetMap later as OpenStreetMap is coded in WGS84. From the glimpse() of the data, we can see that we were successful in doing so.\n\n\nReveal Code\ntainan &lt;- st_read(dsn = \"Data/Geospatial\", layer = \"TAINAN_VILLAGE\") %&gt;% \n  st_transform(4326)\n\n\nReading layer `TAINAN_VILLAGE' from data source \n  `C:\\Users\\yungq\\Desktop\\SMU Modules\\Y4S1\\Geospatial Analysis and Applications\\IS415 Course Website\\Take-Home_Exercise\\Take-Home_Exercise_02\\Data\\Geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 649 features and 10 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 120.0269 ymin: 22.88751 xmax: 120.6563 ymax: 23.41374\nGeodetic CRS:  TWD97\n\n\nReveal Code\nsummary(tainan)\n\n\n   VILLCODE          COUNTYNAME          TOWNNAME           VILLNAME        \n Length:649         Length:649         Length:649         Length:649        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n   VILLENG            COUNTYID          COUNTYCODE           TOWNID         \n Length:649         Length:649         Length:649         Length:649        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n   TOWNCODE             NOTE                    geometry  \n Length:649         Length:649         POLYGON      :649  \n Class :character   Class :character   epsg:4326    :  0  \n Mode  :character   Mode  :character   +proj=long...:  0  \n\n\nReveal Code\nglimpse(tainan)\n\n\nRows: 649\nColumns: 11\n$ VILLCODE   &lt;chr&gt; \"67000280002\", \"67000350032\", \"67000150009\", \"67000150010\",…\n$ COUNTYNAME &lt;chr&gt; \"臺南市\", \"臺南市\", \"臺南市\", \"臺南市\", \"臺南市\", \"臺南市\",…\n$ TOWNNAME   &lt;chr&gt; \"歸仁區\", \"安南區\", \"七股區\", \"七股區\", \"七股區\", \"七股區\",…\n$ VILLNAME   &lt;chr&gt; \"六甲里\", \"青草里\", \"溪南里\", \"七股里\", \"龍山里\", \"中寮里\",…\n$ VILLENG    &lt;chr&gt; \"Liujia Vil.\", \"Qingcao Vil.\", \"Xinan Vil.\", \"Qigu Vil.\", \"…\n$ COUNTYID   &lt;chr&gt; \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\",…\n$ COUNTYCODE &lt;chr&gt; \"67000\", \"67000\", \"67000\", \"67000\", \"67000\", \"67000\", \"6700…\n$ TOWNID     &lt;chr&gt; \"D33\", \"D06\", \"D22\", \"D22\", \"D22\", \"D22\", \"D22\", \"D22\", \"D2…\n$ TOWNCODE   &lt;chr&gt; \"67000280\", \"67000350\", \"67000150\", \"67000150\", \"67000150\",…\n$ NOTE       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ geometry   &lt;POLYGON [°]&gt; POLYGON ((120.2725 22.95868..., POLYGON ((120.1176 …\n\n\nPlotting the Tainan geospatial data with tmap’s tm_polygons() function for a quick visualisation (and confirmation of the data):\n\n\nReveal Code\ntm_shape(tainan) +\n  tm_polygons(col = \"darkgreen\", border.col = \"black\") + \n  tm_layout(main.title = \"Map of Tainan, Taiwan\", main.title.size = 0.9, main.title.position = \"center\", bg.color = \"lightblue\") +\n  tm_compass(type = \"rose\", size = 3) +\n  tm_scale_bar(width = 0.2, )\n\n\n\n\n\n\n\n\n\n\n\nDaily Dengue report data:\nNext, we will import the dengue_daily dataset, which is in csv (comma-separated values) format. We will rely on the read_csv() function from the readr package which is part of the tidyverse repository to do so. Additionally, we will not need the sf package for now as the spatial information in the dataset is in character format and thus, will not be recognised automatically by st_read() anyways:\n\n\nReveal Code\ndengue &lt;- read_csv(\"Data/Aspatial/Dengue_Daily.csv\")\nglimpse(dengue)\n\n\nRows: 106,861\nColumns: 26\n$ 發病日             &lt;date&gt; 1998-01-02, 1998-01-03, 1998-01-13, 1998-01-15, 19…\n$ 個案研判日         &lt;chr&gt; \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 通報日             &lt;date&gt; 1998-01-07, 1998-01-14, 1998-02-18, 1998-01-23, 19…\n$ 性別               &lt;chr&gt; \"男\", \"男\", \"男\", \"男\", \"男\", \"男\", \"男\", \"女\", \"女…\n$ 年齡層             &lt;chr&gt; \"40-44\", \"30-34\", \"55-59\", \"35-39\", \"55-59\", \"20-24…\n$ 居住縣市           &lt;chr&gt; \"屏東縣\", \"屏東縣\", \"宜蘭縣\", \"高雄市\", \"宜蘭縣\", \"…\n$ 居住鄉鎮           &lt;chr&gt; \"屏東市\", \"東港鎮\", \"宜蘭市\", \"苓雅區\", \"五結鄉\", \"…\n$ 居住村里           &lt;chr&gt; \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 最小統計區         &lt;chr&gt; \"A1320-0136-00\", \"A1303-0150-00\", \"A0201-0449-00\", …\n$ 最小統計區中心點X  &lt;chr&gt; \"120.505898941\", \"120.453657460\", \"121.751433765\", …\n$ 最小統計區中心點Y  &lt;chr&gt; \"22.464206650\", \"22.466338948\", \"24.749214667\", \"22…\n$ 一級統計區         &lt;chr&gt; \"A1320-04-008\", \"A1303-09-007\", \"A0201-23-006\", \"A6…\n$ 二級統計區         &lt;chr&gt; \"A1320-04\", \"A1303-09\", \"A0201-23\", \"A6408-10\", \"A0…\n$ 感染縣市           &lt;chr&gt; \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 感染鄉鎮           &lt;chr&gt; \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 感染村里           &lt;chr&gt; \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 是否境外移入       &lt;chr&gt; \"否\", \"是\", \"是\", \"否\", \"否\", \"是\", \"否\", \"否\", \"是…\n$ 感染國家           &lt;chr&gt; \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 確定病例數         &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ 居住村里代碼       &lt;chr&gt; \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 感染村里代碼       &lt;chr&gt; \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 血清型             &lt;chr&gt; \"None\", \"第二型\", \"None\", \"None\", \"None\", \"None\", \"…\n$ 內政部居住縣市代碼 &lt;chr&gt; \"10013\", \"10013\", \"10002\", \"64\", \"10002\", \"68\", \"65…\n$ 內政部居住鄉鎮代碼 &lt;chr&gt; \"1001301\", \"1001303\", \"1000201\", \"6400800\", \"100020…\n$ 內政部感染縣市代碼 &lt;chr&gt; \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 內政部感染鄉鎮代碼 &lt;chr&gt; \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n\n\nA quick investigation of the data yields the following:\n\nThere are missing spatial information in the dataset (some reports do not list reporting coordinates).\nIt is a medium sized dataset with 106, 861 rows.\n\nA quick calculation reveals that there are 1560 rows with missing coordinate information. Considering the overall size of the data, it is reasonable, nor do we have much option anyways, to remove rows with missing spatial information from the dataset as that will have repurcussions on our analysis if we leave them be.\nTo do so, we rely upon the mutate() and filter() functions from dplyr(), whilst using as.numeric() to convert the coordinates into floating number values so that sf may recognise it. To convert the dataset into a simple features object, we explicitly parse the “最小統計區中心點X” and “最小統計區中心點Y” columns as spatial information, using the st_as_st() function to cast the dataframe, and the st_set_crs() function to specify the use of the WGS84 coordinate reference system.\n\n\nReveal Code\ndengue &lt;- dengue %&gt;% \n  mutate(最小統計區中心點X = as.numeric(最小統計區中心點X),\n         最小統計區中心點Y = as.numeric(最小統計區中心點Y)) %&gt;%\n  filter(!is.na(最小統計區中心點X) & !is.na(最小統計區中心點Y)) %&gt;% \n  st_as_sf(coords = c(\"最小統計區中心點X\", \"最小統計區中心點Y\"), crs = \"TWD97\") %&gt;% \n  st_set_crs(4326)\n\nsummary(dengue)\n\n\n     發病日            個案研判日            通報日          \n Min.   :1998-01-02   Length:106081      Min.   :1998-01-07  \n 1st Qu.:2014-10-29   Class :character   1st Qu.:2014-11-01  \n Median :2015-09-29   Mode  :character   Median :2015-10-01  \n Mean   :2016-04-09                      Mean   :2016-04-12  \n 3rd Qu.:2023-07-02                      3rd Qu.:2023-07-05  \n Max.   :2024-01-29                      Max.   :2024-01-29  \n     性別              年齡層            居住縣市           居住鄉鎮        \n Length:106081      Length:106081      Length:106081      Length:106081     \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   居住村里          最小統計區         一級統計區         二級統計區       \n Length:106081      Length:106081      Length:106081      Length:106081     \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   感染縣市           感染鄉鎮           感染村里         是否境外移入      \n Length:106081      Length:106081      Length:106081      Length:106081     \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   感染國家           確定病例數 居住村里代碼       感染村里代碼      \n Length:106081      Min.   :1    Length:106081      Length:106081     \n Class :character   1st Qu.:1    Class :character   Class :character  \n Mode  :character   Median :1    Mode  :character   Mode  :character  \n                    Mean   :1                                         \n                    3rd Qu.:1                                         \n                    Max.   :2                                         \n    血清型          內政部居住縣市代碼 內政部居住鄉鎮代碼 內政部感染縣市代碼\n Length:106081      Length:106081      Length:106081      Length:106081     \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n 內政部感染鄉鎮代碼          geometry     \n Length:106081      POINT        :106081  \n Class :character   epsg:4326    :     0  \n Mode  :character   +proj=long...:     0  \n                                          \n                                          \n                                          \n\n\nReveal Code\nglimpse(dengue)\n\n\nRows: 106,081\nColumns: 25\n$ 發病日             &lt;date&gt; 1998-01-02, 1998-01-03, 1998-01-13, 1998-01-15, 19…\n$ 個案研判日         &lt;chr&gt; \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 通報日             &lt;date&gt; 1998-01-07, 1998-01-14, 1998-02-18, 1998-01-23, 19…\n$ 性別               &lt;chr&gt; \"男\", \"男\", \"男\", \"男\", \"男\", \"男\", \"女\", \"女\", \"男…\n$ 年齡層             &lt;chr&gt; \"40-44\", \"30-34\", \"55-59\", \"35-39\", \"55-59\", \"40-44…\n$ 居住縣市           &lt;chr&gt; \"屏東縣\", \"屏東縣\", \"宜蘭縣\", \"高雄市\", \"宜蘭縣\", \"…\n$ 居住鄉鎮           &lt;chr&gt; \"屏東市\", \"東港鎮\", \"宜蘭市\", \"苓雅區\", \"五結鄉\", \"…\n$ 居住村里           &lt;chr&gt; \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 最小統計區         &lt;chr&gt; \"A1320-0136-00\", \"A1303-0150-00\", \"A0201-0449-00\", …\n$ 一級統計區         &lt;chr&gt; \"A1320-04-008\", \"A1303-09-007\", \"A0201-23-006\", \"A6…\n$ 二級統計區         &lt;chr&gt; \"A1320-04\", \"A1303-09\", \"A0201-23\", \"A6408-10\", \"A0…\n$ 感染縣市           &lt;chr&gt; \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 感染鄉鎮           &lt;chr&gt; \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 感染村里           &lt;chr&gt; \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 是否境外移入       &lt;chr&gt; \"否\", \"是\", \"是\", \"否\", \"否\", \"否\", \"否\", \"是\", \"是…\n$ 感染國家           &lt;chr&gt; \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 確定病例數         &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ 居住村里代碼       &lt;chr&gt; \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 感染村里代碼       &lt;chr&gt; \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 血清型             &lt;chr&gt; \"None\", \"第二型\", \"None\", \"None\", \"None\", \"None\", \"…\n$ 內政部居住縣市代碼 &lt;chr&gt; \"10013\", \"10013\", \"10002\", \"64\", \"10002\", \"65\", \"63…\n$ 內政部居住鄉鎮代碼 &lt;chr&gt; \"1001301\", \"1001303\", \"1000201\", \"6400800\", \"100020…\n$ 內政部感染縣市代碼 &lt;chr&gt; \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ 內政部感染鄉鎮代碼 &lt;chr&gt; \"None\", \"None\", \"None\", \"None\", \"None\", \"None\", \"No…\n$ geometry           &lt;POINT [°]&gt; POINT (120.5059 22.46421), POINT (120.4537 22…\n\n\nAs the dengue information covers the whole of Taiwan, the st_intersection() function is used to confine the spread of the data solely to Tainan, our project objective. st_union() is applied here to draw the outer boundaries of Tainan, and speed up the computation time.\n\n\nReveal Code\ndengue &lt;- dengue %&gt;% \n  st_intersection(st_union(tainan))\n\n\n\n\nReveal Code\ndengue %&gt;% \n  write_rds(\"Data/RDS/dengue_tainan.rds\")\n\n\nA visualisation of the locations of dengue fever reports in Tainan is as follows:\n\n\nReveal Code\ntm_shape(tainan) + \n  tm_polygons(col = \"darkgreen\", border.col = \"black\") + \n  tm_layout(main.title = \"Outbreak of Dengue Fever in Tainan, Taiwan\", main.title.size = 0.9, main.title.position = \"center\", bg.color = \"lightblue\") +\ntm_shape(dengue) + \n  tm_dots(size = 0.05, alpha = 0.2, col = \"red\") +\n  tm_compass(type = \"rose\", size = 3, position = \"left\") +\n  tm_scale_bar(width = 0.2, position = \"left\")\n\n\n\n\n\n\n\n\n\nFrom the incident map drawn, we can see that the majority of dengue fever reports occur in the south-western part of the city which explains why a further restriction of the data to a couple of towns within Tainan was specified as part of the report. Below, we will constrict the Tainan spatial polygon data to the requested towns using the filter() function from dpylr, and produce an easy visualisation of the new area of focus.\n\n\nReveal Code\ntainan &lt;- tainan %&gt;% \n  filter(TOWNID %in% c(\"D01\", \"D02\", \"D04\", \"D06\", \"D07\", \"D08\", \"D32\", \"D39\"))\nglimpse(tainan)\n\n\nRows: 258\nColumns: 11\n$ VILLCODE   &lt;chr&gt; \"67000350032\", \"67000270011\", \"67000370005\", \"67000330004\",…\n$ COUNTYNAME &lt;chr&gt; \"臺南市\", \"臺南市\", \"臺南市\", \"臺南市\", \"臺南市\", \"臺南市\",…\n$ TOWNNAME   &lt;chr&gt; \"安南區\", \"仁德區\", \"中西區\", \"南區\", \"安南區\", \"安南區\", \"…\n$ VILLNAME   &lt;chr&gt; \"青草里\", \"保安里\", \"赤嵌里\", \"大成里\", \"城北里\", \"城南里\",…\n$ VILLENG    &lt;chr&gt; \"Qingcao Vil.\", \"Bao'an Vil.\", \"Chihkan Vil.\", \"Dacheng Vil…\n$ COUNTYID   &lt;chr&gt; \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\",…\n$ COUNTYCODE &lt;chr&gt; \"67000\", \"67000\", \"67000\", \"67000\", \"67000\", \"67000\", \"6700…\n$ TOWNID     &lt;chr&gt; \"D06\", \"D32\", \"D08\", \"D02\", \"D06\", \"D06\", \"D08\", \"D06\", \"D0…\n$ TOWNCODE   &lt;chr&gt; \"67000350\", \"67000270\", \"67000370\", \"67000330\", \"67000350\",…\n$ NOTE       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ geometry   &lt;POLYGON [°]&gt; POLYGON ((120.1176 23.08387..., POLYGON ((120.2304 …\n\n\nReveal Code\ntm_shape(tainan) +\n  tm_polygons(col = \"darkgreen\", border.col = \"black\") + \n  tm_layout(main.title = \"Outbreak Region of Tainan, Taiwan\", main.title.size = 0.9, main.title.position = \"center\", bg.color = \"lightblue\") +\n  tm_compass(type = \"rose\", size = 3, position = \"left\") +\n  tm_scale_bar(width = 0.2, position = \"left\")\n\n\n\n\n\n\n\n\n\nAs the boundary of the reports have been re-drawn, we will need to employ the st_intersection() function once again to restrict the dengue reports to the focus area:\n\n\nReveal Code\ndengue &lt;- dengue %&gt;% \n  st_intersection(st_union(tainan))\n\n\nBy plotting the newly restricted daily_dengue data over the Tainan data subset, we can confirm that the restriction process has gone well:\n\n\nReveal Code\ntm_shape(tainan) + \n  tm_polygons(col = \"darkgreen\", border.col = \"black\") + \n  tm_layout(main.title = \"Cases of Dengue Fever in Tainan, Taiwan\", main.title.size = 0.9, main.title.position = \"center\", bg.color = \"lightblue\") +\ntm_shape(dengue) + \n  tm_dots(size = 0.05, alpha = 0.2, col = \"red\") +\n  tm_compass(type = \"rose\", size = 3, position = \"left\") +\n  tm_scale_bar(width = 0.2, position = \"left\")\n\n\n\n\n\n\n\n\n\nNext, we will need to reduce the dengue report data that we have to the time period which we are interested in, namely the 31st to 50th epidemic weeks of 2023. To do so, we first need to extract out the year and week information from the data. Thus, we apply the year() and isoweek() functions from the lubridate package to do so, and the mutate() function from dplyr to create these new columns in the data.\nThere are 3 functions to extract the week information from a date field in lubridate, but we will use isoweek() for the following reason. In order to conduct year-on-year analysis of the data, we will need a way to standardise the weeks extracted across the years. weeks() will not allow us to do so, whereas isoweek() will. Of course as we are not doing year-on-year analysis, choosing isoweek() will not make an impactful difference, but it still is good practice to do so. epiweek() is discounted on the other hand, as even though it standardises week extraction, it starts the week on a Sunday rather than a Monday as is standard in Taiwan.\n\n\nReveal Code\ndengue &lt;- dengue %&gt;% \n  mutate(發病年 = year(發病日), 發病周 = isoweek(發病日)) \n\ndengue %&gt;% \n  group_by(發病周) %&gt;% \n  summarise(dengue_count = n()) %&gt;% \n    ggplot(aes(y = dengue_count, x = 發病周)) +\n    geom_line(col = \"orange\", scale_colour_hue = 100) +\n    labs(title = \"Trend of Dengue Fever Cases in Tainan, Taiwan\") +\n    xlab(\"Epidemic Week\") +\n    ylab(\"Number of Dengue Cases Reported\") + \n    theme(panel.background = element_rect(fill = \"navy\"), \n          panel.grid.major = element_line(color = \"black\", linewidth = 0.1),\n          panel.grid.minor = element_line(color = \"black\", linewidth = 0.1))\n\n\n\n\n\n\n\n\n\nUsing ggplot2 this time, we visualise above, the trend of dengue reports across our area of focus in Taiwan over 2023 on a weekly basis. From our graph, it becomes evident that the dengue reports does pick up dramatically from weeks 31 to 50 as the project outline states. Thus, we employ the filter() function once again to narrow down our study scope.\n\n\nReveal Code\ndengue &lt;- dengue %&gt;%\n  filter(發病年 == 2023 & (between(發病周, 31, 50)))\n\n\n\n\nReveal Code\ndengue %&gt;% \n  write_rds(\"Data/RDS/dengue_tainan_wk31_50.rds\")\n\n\nA visualisation of the base of our study using tmap is thus, as follows:\n\n\nReveal Code\ntm_shape(tainan) + \n  tm_polygons(col = \"darkgreen\", border.col = \"black\") + \n  tm_layout(main.title = \"Cases of Dengue Fever between epidemic weeks 31 to 50 in Tainan, Taiwan\", main.title.size = 0.75, main.title.position = \"center\", bg.color = \"lightblue\") +\ntm_shape(dengue) + \n  tm_dots(size = 0.05, alpha = 0.2, col = \"red\") +\n  tm_compass(type = \"rose\", size = 3, position = \"left\") +\n  tm_scale_bar(width = 0.2, position = \"left\")"
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_02/Take-Home_Exercise_02.html#conducting-global-spatial-auto-correlation-analysis",
    "href": "Take-Home_Exercise/Take-Home_Exercise_02/Take-Home_Exercise_02.html#conducting-global-spatial-auto-correlation-analysis",
    "title": "Take-Home Exercise 2: Using Spatial-Temporal Analysis to investigate the distribution of Dengue Fever cases in Tainan City, Taiwan",
    "section": "Conducting Global Spatial Auto-correlation analysis",
    "text": "Conducting Global Spatial Auto-correlation analysis\nTo conduct our global spatial autocorrelation analysis, we will employ Moran’s I statistics rather than Geary’s C as transmission of dengue occurs via the Aedes vector, and we should not lighten the impact of linear associations of dengue reports from our analysis.\nTo start, we need to count the number of reports which occurred in each polygon of our geographical scope. The st_intersects() function is employed over the st_intersection() function here for computation speed as we need not retain all information in the data, only just the counts. lengths() is used to compute the length of each element in the list generated by st_intersects().\n\n\nReveal Code\ntainan$dengue_count &lt;- tainan %&gt;% \n  st_intersects(dengue) %&gt;% \n  lengths()\n\nglimpse(tainan)\n\n\nRows: 258\nColumns: 12\n$ VILLCODE     &lt;chr&gt; \"67000350032\", \"67000270011\", \"67000370005\", \"67000330004…\n$ COUNTYNAME   &lt;chr&gt; \"臺南市\", \"臺南市\", \"臺南市\", \"臺南市\", \"臺南市\", \"臺南市…\n$ TOWNNAME     &lt;chr&gt; \"安南區\", \"仁德區\", \"中西區\", \"南區\", \"安南區\", \"安南區\",…\n$ VILLNAME     &lt;chr&gt; \"青草里\", \"保安里\", \"赤嵌里\", \"大成里\", \"城北里\", \"城南里…\n$ VILLENG      &lt;chr&gt; \"Qingcao Vil.\", \"Bao'an Vil.\", \"Chihkan Vil.\", \"Dacheng V…\n$ COUNTYID     &lt;chr&gt; \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D\", \"D…\n$ COUNTYCODE   &lt;chr&gt; \"67000\", \"67000\", \"67000\", \"67000\", \"67000\", \"67000\", \"67…\n$ TOWNID       &lt;chr&gt; \"D06\", \"D32\", \"D08\", \"D02\", \"D06\", \"D06\", \"D08\", \"D06\", \"…\n$ TOWNCODE     &lt;chr&gt; \"67000350\", \"67000270\", \"67000370\", \"67000330\", \"67000350…\n$ NOTE         &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ geometry     &lt;POLYGON [°]&gt; POLYGON ((120.1176 23.08387..., POLYGON ((120.230…\n$ dengue_count &lt;int&gt; 2, 19, 111, 29, 1, 10, 38, 44, 112, 65, 28, 2, 3, 11, 24,…\n\n\nNext, we need to compute the congruity weight matrix as Moran’s I is a congruity based method. The st_contiguity() is used to do so, with the queen option set to true as mentioned prior, the vector-transmission method of dengue fever does not allow us to discount neither the neighbours at the edge nor vertices. The st_weights() function is used to compute the weights of each polygon in the dataset, with style set to ‘W’ so that row-standardised weights are computed.\n\n\nReveal Code\nweight_matrix_queen &lt;- tainan %&gt;% \n  mutate(neighbours = st_contiguity(geometry, queen = TRUE),\n         weight = st_weights(neighbours, style = \"W\"),\n         .before = 1)\n\nsummary(weight_matrix_queen$neighbours)\n\n\nNeighbour list object:\nNumber of regions: 258 \nNumber of nonzero links: 1526 \nPercentage nonzero weights: 2.29253 \nAverage number of links: 5.914729 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 10 11 12 14 \n 4 17 47 49 49 41 26 14  6  3  1  1 \n4 least connected regions:\n77 117 138 238 with 2 links\n1 most connected region:\n128 with 14 links\n\n\nAfter we obtain the row-standardised weight matrix of our spatial data, we can proceed to compute the global Moran’s statistic with it. global_moran_perm() is used to conduct a Monte-Carlo simulation of the global Moran’s I statistic with 500 simulations done. As in all Monte-Carlo simulations conducted in this report, 500 simulations will be used as it represents the largest amount of simulations my computer can conduct in a reasonable amount of time.\nAdditionally, set.seed() is used to ensure that the results of the simulation are repeatable.\n\n\nReveal Code\nset.seed(3142)\n\nglobal_moran_500 &lt;- global_moran_perm(weight_matrix_queen$dengue_count, \n                  weight_matrix_queen$neighbours,\n                  weight_matrix_queen$weight,\n                  nsim = 499)\n\nprint(global_moran_500)\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 500 \n\nstatistic = 0.46821, observed rank = 500, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\nFrom the simulation results, we can see that the p-value is extremely low, leading to a conclusion that the incidents of dengue cases in Tainan show evidence of non-randomness at all reasonable levels of statistical significance. This result is not surprising as Aedes mosquitoes breed and travel short ranges, meaning that when they start carrying the Dengue virus, we expect people near to the initial carrier of dengue to suffer from it to. Also, we might think from the perspective that areas where Aedes mosquitoes thrive will frequently give rise to clusters of dengue cases as they are more prone to breeding of mosquitoes which makes it difficult to eliminate the vector in these areas.\nWe can visualise the Monte-Carlo simulation using geom_histogram() and geom_vline() from ggplot2 as below:\n\n\nReveal Code\nggplot() + \n  geom_histogram(aes(global_moran_500$res[1:499]),\n                 bins = 100, \n                 fill = \"blue\", \n                 color = \"black\", \n                 alpha = 0.7, \n                 size = 0.25) + \n  geom_vline(xintercept = mean(global_moran_500$res[1:499]), \n              color = \"red\") +\n  labs(title = \"Monte-Carlo Simulation of Global Moran's I test-statistic (n = 500)\") +\n  xlab(\"Global Moran's I test-statistic\") +\n  ylab(\"Frequency\") +\n  theme_classic()"
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_02/Take-Home_Exercise_02.html#conducting-local-spatial-auto-correlation-analysis",
    "href": "Take-Home_Exercise/Take-Home_Exercise_02/Take-Home_Exercise_02.html#conducting-local-spatial-auto-correlation-analysis",
    "title": "Take-Home Exercise 2: Using Spatial-Temporal Analysis to investigate the distribution of Dengue Fever cases in Tainan City, Taiwan",
    "section": "Conducting Local Spatial Auto-correlation analysis",
    "text": "Conducting Local Spatial Auto-correlation analysis\nFor the same reasons as in the global spatial auto-correlation analysis, Moran’s I statistic will be used over Geary’s C here.\nLike in our global spatial auto-correlation analysis, we will need a congruity weight matrix first as Moran’s I is a congruity-based method. Luckily, there is no obvious reason to compute a different congruity weight matrix and thus we will used the one generated in our global spatial auto-correlation analysis.\nTo apply the local Moran’s I test, the local_moran() function is used and simulated over 500 times. As the result of the local_moran() function is a nested list, unnest() is thus, needed to expand it into a readable format.\n\n\nReveal Code\nlisa &lt;- weight_matrix_queen %&gt;% \n  mutate(local_moran = local_moran(weight_matrix_queen$dengue_count, \n                  weight_matrix_queen$neighbours,\n                  weight_matrix_queen$weight,\n                  nsim = 499),\n         .before = 1) %&gt;%\n  unnest(local_moran)\n\n\nAn interactive display of the Moran’s I statistic is shown below:\n\n\nReveal Code\nlisa_leaflet &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\", \n          title = \"Local Moran's I\", \n          interactive = TRUE,\n          alpha = 0.3) + \n  tm_borders(alpha = 1) + \n  tm_basemap(\"OpenStreetMap\")\n\nlisa_leaflet &lt;- tmap_leaflet(lisa_leaflet)\n\nsaveWidget(lisa_leaflet, \"Screenshots/lisa_leaflet.html\")\n\n\n\n\n\n\nAn interactive display of the p-values of the Moran’s I statistic is shown below:\n\n\nReveal Code\nlisa_p_leaflet &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii_sim\", \n          title = \"Local Moran's I p-value\", \n          interactive = TRUE,\n          alpha = 0.3) + \n  tm_borders(alpha = 1) + \n  tm_basemap(\"OpenStreetMap\")\n\nlisa_p_leaflet &lt;- tmap_leaflet(lisa_p_leaflet)\n\nsaveWidget(lisa_p_leaflet, \"Screenshots/lisa_p_leaflet.html\")\n\n\n\n\n\n\nAn interactive display of the regions with a significant Moran’s I statistic (5% level) is shown below:\n\n\nReveal Code\nlisa_sig_leaflet &lt;- lisa %&gt;%\n  tm_shape(filter = .$p_ii &lt;= 0.05) +\n    tm_fill(\"mean\", \n            title = \"Local Moran's I clusters\", \n            interactive = TRUE,\n            alpha = 0.3) + \n    tm_borders(alpha = 1) + \n    tm_basemap(\"OpenStreetMap\")\n\nlisa_sig_leaflet &lt;- tmap_leaflet(lisa_sig_leaflet)\n\nsaveWidget(lisa_sig_leaflet, \"Screenshots/lisa_sig_leaflet.html\")"
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_02/Take-Home_Exercise_02.html#conducting-emerging-hot-spot-analysis",
    "href": "Take-Home_Exercise/Take-Home_Exercise_02/Take-Home_Exercise_02.html#conducting-emerging-hot-spot-analysis",
    "title": "Take-Home Exercise 2: Using Spatial-Temporal Analysis to investigate the distribution of Dengue Fever cases in Tainan City, Taiwan",
    "section": "Conducting Emerging Hot-Spot Analysis",
    "text": "Conducting Emerging Hot-Spot Analysis\nBeyond spatial auto-correlation analysis, we should also be interested in spatio-temporal analysis as the intensity of the outbreak over time will determine how easy is it to contain it. To do so, we will need to create a spacetime_cube object using the spacetime() function in sfdep.\nHowever, before we can proceed to do so, we will need to create a dataframe of all possible combinations of spatio-temporal events across our dataset. This is done via the following code:\n\n\nReveal Code\nspatial_temporal_dengue_count &lt;- crossing(dengue$發病周, \n         tainan$VILLCODE) %&gt;% \n  rename(\"WEEK\" = \"dengue$發病周\", \n         \"VILLCODE\" = \"tainan$VILLCODE\") %&gt;% \n  left_join(tainan, by = \"VILLCODE\") %&gt;% \n  select(\"WEEK\", \"VILLCODE\", \"geometry\") %&gt;% \n  st_as_sf(crs = \"WGS84\")\n\nspatial_temporal_dengue_count$DENGUE_COUNT &lt;- NA\n\nfor (t in 31:50) {\n  \n  spatial_temporal_dengue_count[spatial_temporal_dengue_count$WEEK == t, \"DENGUE_COUNT\"] &lt;- \n    st_intersects(\n      spatial_temporal_dengue_count %&gt;% \n        filter(WEEK == t), \n      dengue %&gt;% \n        filter(發病周 == t)\n      ) %&gt;% \n    lengths()\n  \n}\n\nspatial_temporal_dengue_count &lt;- spatial_temporal_dengue_count %&gt;% \n  st_drop_geometry()\n\nglimpse(spatial_temporal_dengue_count)\nsum(spatial_temporal_dengue_count$DENGUE_COUNT)\n\n\ncrossing() is used to create a dataframe of all possible weeks over all spatial regions in Tainan, resulting in a total of 5160 combinations. After which, st_intersects() and filter() are employed iteratively, to give a count of the number of dengue reports in each region over each time period.\n\n\nReveal Code\nspatial_temporal_dengue_count %&gt;% \n  write_rds(\"Data/RDS/spatial_temporal_dengue_count.rds\")\n\n\n\n\nRows: 5,160\nColumns: 3\n$ WEEK         &lt;dbl&gt; 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 3…\n$ VILLCODE     &lt;chr&gt; \"67000270001\", \"67000270002\", \"67000270003\", \"67000270004…\n$ DENGUE_COUNT &lt;int&gt; 0, 0, 1, 4, 2, 0, 1, 0, 1, 7, 1, 2, 0, 0, 0, 0, 42, 0, 0,…\n\n\n[1] 18800\n\n\nA sum() of our counts column matches up with the total number of cases in our reduced dengue_daily data.\n\n\nReveal Code\ndengue_spt &lt;- spacetime(.data = spatial_temporal_dengue_count, \n                        .geometry = tainan,\n                        .loc_col = \"VILLCODE\", \n                        .time_col = \"WEEK\")\n\nis_spacetime_cube(dengue_spt)\n\n\n[1] TRUE\n\n\nAnd is_spacetime_cube() confirms that we were successful. Thus, we can proceed to conduct the emerging hot-spot analysis using our spacetime cube, upon the DENGUE_COUNT feature which we created in the earlier step. The analysis is performed using the emerging_hotspot_analysis() function from sfdep, which utilises both Gerd-Ord’s Gi* statistic and Mann-Kendall statistic to do so. Thus, Kendall needs to be installed in the R-Environment as earlier.\n\n\nReveal Code\nehsa &lt;- emerging_hotspot_analysis(\n  x = dengue_spt, \n  .var = \"DENGUE_COUNT\", \n  k = 1, \n  nsim = 499)\n\nglimpse(ehsa)\n\n\n\n\nReveal Code\nehsa %&gt;% \n  write_rds(\"Data/RDS/dengue_ehsa.rds\")\n\n\n\n\nRows: 258\nColumns: 4\n$ location       &lt;chr&gt; \"67000350032\", \"67000270011\", \"67000370005\", \"670003300…\n$ tau            &lt;dbl&gt; 0.37894735, 0.36842102, 0.56842101, 0.41052628, 0.54736…\n$ p_value        &lt;dbl&gt; 2.124822e-02, 2.517831e-02, 5.174875e-04, 1.248217e-02,…\n$ classification &lt;chr&gt; \"oscilating coldspot\", \"oscilating coldspot\", \"consecut…\n\n\nUsing ggplot2, we can visualise the frequency of each type of hot-spot identified in our emerging hot-spot analysis Monte-Carlo simulation.\n\n\nReveal Code\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar(fill = \"orange\") + \n  labs(title = \"Types of Hot-Spots Identified\") +\n  xlab(\"Classification\") +\n  ylab(\"Number of hot-spots\") +\n  theme(axis.text.x = element_text(angle = 10, hjust = 0.5, vjust = 0.7),\n        panel.background = element_rect(fill = \"lightgrey\")) \n\n\n\n\n\n\n\n\n\nAnd using tmap, we can display an interactive map of the different hot-spots over OpenStreetMap.\n\n\nReveal Code\nehsa_leaflet &lt;- tainan %&gt;% \n  left_join(ehsa,\n            by = join_by(VILLCODE == location)) %&gt;% \n  tm_shape(filter = .$p_value &lt;= 0.05) +\n    tm_fill(\"classification\",\n            interactive = TRUE,\n            alpha = 0.3,\n            title = \"Classification\") + \n    tm_borders(alpha = 1) + \n  tm_basemap(\"OpenStreetMap\")\n\nehsa_leaflet &lt;- tmap_leaflet(ehsa_leaflet)\n\nsaveWidget(ehsa_leaflet, \"Screenshots/ehsa_leaflet.html\")\n\n\n\n\n\n\nFrom the interactive map produced, we can see that most of the hot-spots are oscillating hot and cold spots, and are also mostly centered around the central parts of our map scope. There is actually quite an intuitive explanation. The proximity and human density of the hot/cold spots are probably really high considering their location, which will only make it easier for Dengue Fever to spread. Additionally, public facilities like pipes and drains are likely to be under higher stress, making it easier for Aedes mosquitoes to breed. Thus, it is likely that these areas will be most prone to dengue outbreaks and it is a testament to Taiwan’s dengue management that they are oscillation spots, because this mostly likely happens as they are able to contain outbreaks but not fast enough to stop the spread to other regions."
  },
  {
    "objectID": "Hands-On_Exercise/Hands-On_Exercise_07/Hands-On_Exercise_07.html",
    "href": "Hands-On_Exercise/Hands-On_Exercise_07/Hands-On_Exercise_07.html",
    "title": "Hands-On Exercise 7: Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "",
    "text": "Reveal Code\npacman::p_load(sp, spdep, tmap, sf, ClustGeo, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, tidyverse, GGally)\n\n\n\n\nReveal Code\nshan_sf &lt;- st_read(dsn = \"Data/Geospatial\", \n                   layer = \"myanmar_township_boundaries\") %&gt;%\n  filter(ST %in% c(\"Shan (East)\", \"Shan (North)\", \"Shan (South)\")) %&gt;%\n  select(c(2:7))\n\n\nReading layer `myanmar_township_boundaries' from data source \n  `C:\\Users\\yungq\\Desktop\\SMU Modules\\Y4S1\\Geospatial Analysis and Applications\\IS415 Course Website\\Hands-On_Exercise\\Hands-On_Exercise_07\\Data\\Geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 330 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.17275 ymin: 9.671252 xmax: 101.1699 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\n\nReveal Code\nglimpse(shan_sf)\n\n\nRows: 55\nColumns: 7\n$ ST       &lt;chr&gt; \"Shan (North)\", \"Shan (South)\", \"Shan (South)\", \"Shan (South)…\n$ ST_PCODE &lt;chr&gt; \"MMR015\", \"MMR014\", \"MMR014\", \"MMR014\", \"MMR015\", \"MMR014\", \"…\n$ DT       &lt;chr&gt; \"Mongmit\", \"Taunggyi\", \"Taunggyi\", \"Taunggyi\", \"Mongmit\", \"Ta…\n$ DT_PCODE &lt;chr&gt; \"MMR015D008\", \"MMR014D001\", \"MMR014D001\", \"MMR014D001\", \"MMR0…\n$ TS       &lt;chr&gt; \"Mongmit\", \"Pindaya\", \"Ywangan\", \"Pinlaung\", \"Mabein\", \"Kalaw…\n$ TS_PCODE &lt;chr&gt; \"MMR015017\", \"MMR014006\", \"MMR014007\", \"MMR014009\", \"MMR01501…\n$ geometry &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((96.96001 23..., MULTIPOLYGON (((…\n\n\n\n\nReveal Code\nict &lt;- read_csv (\"Data/Aspatial/Shan-ICT.csv\")\n\nsummary(ict)\n\n\n District Pcode     District Name      Township Pcode     Township Name     \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n Total households     Radio         Television    Land line phone \n Min.   : 3318    Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711    1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685    Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369    Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471    3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604    Max.   :30176   Max.   :62388   Max.   :6736.0  \n  Mobile phone      Computer      Internet at home\n Min.   :  150   Min.   :  20.0   Min.   :   8.0  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0  \n Median : 3559   Median : 244.0   Median : 316.0  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0  \n\n\n\n\nReveal Code\nict_derived &lt;- ict %&gt;%\n  mutate(`RADIO_PR` = `Radio`/`Total households`*1000) %&gt;%\n  mutate(`TV_PR` = `Television`/`Total households`*1000) %&gt;%\n  mutate(`LLPHONE_PR` = `Land line phone`/`Total households`*1000) %&gt;%\n  mutate(`MPHONE_PR` = `Mobile phone`/`Total households`*1000) %&gt;%\n  mutate(`COMPUTER_PR` = `Computer`/`Total households`*1000) %&gt;%\n  mutate(`INTERNET_PR` = `Internet at home`/`Total households`*1000) %&gt;%\n  rename(`DT_PCODE` =`District Pcode`,`DT`=`District Name`,\n         `TS_PCODE`=`Township Pcode`, `TS`=`Township Name`,\n         `TT_HOUSEHOLDS`=`Total households`,\n         `RADIO`=`Radio`, `TV`=`Television`, \n         `LLPHONE`=`Land line phone`, `MPHONE`=`Mobile phone`,\n         `COMPUTER`=`Computer`, `INTERNET`=`Internet at home`) \n\nsummary(ict_derived)\n\n\n   DT_PCODE              DT              TS_PCODE              TS           \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n TT_HOUSEHOLDS       RADIO             TV           LLPHONE      \n Min.   : 3318   Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711   1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685   Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369   Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471   3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604   Max.   :30176   Max.   :62388   Max.   :6736.0  \n     MPHONE         COMPUTER         INTERNET         RADIO_PR     \n Min.   :  150   Min.   :  20.0   Min.   :   8.0   Min.   : 21.05  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0   1st Qu.:138.95  \n Median : 3559   Median : 244.0   Median : 316.0   Median :210.95  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2   Mean   :215.68  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5   3rd Qu.:268.07  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0   Max.   :484.52  \n     TV_PR         LLPHONE_PR       MPHONE_PR       COMPUTER_PR    \n Min.   :116.0   Min.   :  2.78   Min.   : 36.42   Min.   : 3.278  \n 1st Qu.:450.2   1st Qu.: 22.84   1st Qu.:190.14   1st Qu.:11.832  \n Median :517.2   Median : 37.59   Median :305.27   Median :18.970  \n Mean   :509.5   Mean   : 51.09   Mean   :314.05   Mean   :24.393  \n 3rd Qu.:606.4   3rd Qu.: 69.72   3rd Qu.:428.43   3rd Qu.:29.897  \n Max.   :842.5   Max.   :181.49   Max.   :735.43   Max.   :92.402  \n  INTERNET_PR     \n Min.   :  1.041  \n 1st Qu.:  8.617  \n Median : 22.829  \n Mean   : 30.644  \n 3rd Qu.: 41.281  \n Max.   :117.985  \n\n\n\n\nReveal Code\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nggplot(data=ict_derived, \n       aes(x=`RADIO`)) +\n  geom_boxplot(color=\"black\", \n               fill=\"light blue\")\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nggplot(data=ict_derived, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nggplot(data=ict_derived, \n       aes(x=`RADIO_PR`)) +\n  geom_boxplot(color=\"black\", \n               fill=\"light blue\")\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nradio &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ntv &lt;- ggplot(data=ict_derived, \n             aes(x= `TV_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nllphone &lt;- ggplot(data=ict_derived, \n             aes(x= `LLPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nmphone &lt;- ggplot(data=ict_derived, \n             aes(x= `MPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ncomputer &lt;- ggplot(data=ict_derived, \n             aes(x= `COMPUTER_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ninternet &lt;- ggplot(data=ict_derived, \n             aes(x= `INTERNET_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nggarrange(radio, tv, llphone, mphone, computer, internet, \n          ncol = 3, \n          nrow = 2)\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nshan_sf &lt;- left_join(shan_sf, \n                     ict_derived, by=c(\"TS_PCODE\"=\"TS_PCODE\"))\n  \nwrite_rds(shan_sf, \"Data/RDS/shan_sf.rds\")\n\n\n\n\nReveal Code\nshan_sf &lt;- read_rds(\"Data/RDS/shan_sf.rds\")\n\n\n\n\nReveal Code\nqtm(shan_sf, \"RADIO_PR\")\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nTT_HOUSEHOLDS.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"TT_HOUSEHOLDS\",\n          n = 5,\n          style = \"jenks\", \n          title = \"Total households\") + \n  tm_borders(alpha = 0.5) \n\nRADIO.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"RADIO\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Number Radio \") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(TT_HOUSEHOLDS.map, RADIO.map,\n             asp=NA, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\ntm_shape(shan_sf) +\n    tm_polygons(c(\"TT_HOUSEHOLDS\", \"RADIO_PR\"),\n                style=\"jenks\") +\n    tm_facets(sync = TRUE, ncol = 2) +\n  tm_legend(legend.position = c(\"right\", \"bottom\"))+\n  tm_layout(outer.margins=0, asp=0)\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\ncluster_vars.cor = cor(ict_derived[,12:17])\ncorrplot.mixed(cluster_vars.cor,\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\ncluster_vars &lt;- shan_sf %&gt;%\n  st_set_geometry(NULL) %&gt;%\n  select(\"TS.x\", \"RADIO_PR\", \"TV_PR\", \"LLPHONE_PR\", \"MPHONE_PR\", \"COMPUTER_PR\")\nhead(cluster_vars,10)\n\n\n        TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\n1    Mongmit 286.1852 554.1313   35.30618  260.6944    12.15939\n2    Pindaya 417.4647 505.1300   19.83584  162.3917    12.88190\n3    Ywangan 484.5215 260.5734   11.93591  120.2856     4.41465\n4   Pinlaung 231.6499 541.7189   28.54454  249.4903    13.76255\n5     Mabein 449.4903 708.6423   72.75255  392.6089    16.45042\n6      Kalaw 280.7624 611.6204   42.06478  408.7951    29.63160\n7      Pekon 318.6118 535.8494   39.83270  214.8476    18.97032\n8   Lawksawk 387.1017 630.0035   31.51366  320.5686    21.76677\n9  Nawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\n10   Kyaukme 210.9548 601.1773   39.58267  372.4930    30.94709\n\n\n\n\nReveal Code\nrow.names(cluster_vars) &lt;- cluster_vars$\"TS.x\"\nhead(cluster_vars,10)\n\n\n               TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit     Mongmit 286.1852 554.1313   35.30618  260.6944    12.15939\nPindaya     Pindaya 417.4647 505.1300   19.83584  162.3917    12.88190\nYwangan     Ywangan 484.5215 260.5734   11.93591  120.2856     4.41465\nPinlaung   Pinlaung 231.6499 541.7189   28.54454  249.4903    13.76255\nMabein       Mabein 449.4903 708.6423   72.75255  392.6089    16.45042\nKalaw         Kalaw 280.7624 611.6204   42.06478  408.7951    29.63160\nPekon         Pekon 318.6118 535.8494   39.83270  214.8476    18.97032\nLawksawk   Lawksawk 387.1017 630.0035   31.51366  320.5686    21.76677\nNawnghkio Nawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\nKyaukme     Kyaukme 210.9548 601.1773   39.58267  372.4930    30.94709\n\n\n\n\nReveal Code\nshan_ict &lt;- select(cluster_vars, c(2:6))\nhead(shan_ict, 10)\n\n\n          RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit   286.1852 554.1313   35.30618  260.6944    12.15939\nPindaya   417.4647 505.1300   19.83584  162.3917    12.88190\nYwangan   484.5215 260.5734   11.93591  120.2856     4.41465\nPinlaung  231.6499 541.7189   28.54454  249.4903    13.76255\nMabein    449.4903 708.6423   72.75255  392.6089    16.45042\nKalaw     280.7624 611.6204   42.06478  408.7951    29.63160\nPekon     318.6118 535.8494   39.83270  214.8476    18.97032\nLawksawk  387.1017 630.0035   31.51366  320.5686    21.76677\nNawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\nKyaukme   210.9548 601.1773   39.58267  372.4930    30.94709\n\n\n\n\nReveal Code\nshan_ict.std &lt;- normalize(shan_ict)\nsummary(shan_ict.std)\n\n\n    RADIO_PR          TV_PR          LLPHONE_PR       MPHONE_PR     \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.2544   1st Qu.:0.4600   1st Qu.:0.1123   1st Qu.:0.2199  \n Median :0.4097   Median :0.5523   Median :0.1948   Median :0.3846  \n Mean   :0.4199   Mean   :0.5416   Mean   :0.2703   Mean   :0.3972  \n 3rd Qu.:0.5330   3rd Qu.:0.6750   3rd Qu.:0.3746   3rd Qu.:0.5608  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n  COMPUTER_PR     \n Min.   :0.00000  \n 1st Qu.:0.09598  \n Median :0.17607  \n Mean   :0.23692  \n 3rd Qu.:0.29868  \n Max.   :1.00000  \n\n\n\n\nReveal Code\nshan_ict.z &lt;- scale(shan_ict)\ndescribe(shan_ict.z)\n\n\n            vars  n mean sd median trimmed  mad   min  max range  skew kurtosis\nRADIO_PR       1 55    0  1  -0.04   -0.06 0.94 -1.85 2.55  4.40  0.48    -0.27\nTV_PR          2 55    0  1   0.05    0.04 0.78 -2.47 2.09  4.56 -0.38    -0.23\nLLPHONE_PR     3 55    0  1  -0.33   -0.15 0.68 -1.19 3.20  4.39  1.37     1.49\nMPHONE_PR      4 55    0  1  -0.05   -0.06 1.01 -1.58 2.40  3.98  0.48    -0.34\nCOMPUTER_PR    5 55    0  1  -0.26   -0.18 0.64 -1.03 3.31  4.34  1.80     2.96\n              se\nRADIO_PR    0.13\nTV_PR       0.13\nLLPHONE_PR  0.13\nMPHONE_PR   0.13\nCOMPUTER_PR 0.13\n\n\n\n\nReveal Code\nr &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nshan_ict_s_df &lt;- as.data.frame(shan_ict.std)\ns &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nshan_ict_z_df &lt;- as.data.frame(shan_ict.z)\nz &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z,\n          ncol = 3,\n          nrow = 1)\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nr &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nshan_ict_s_df &lt;- as.data.frame(shan_ict.std)\ns &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nshan_ict_z_df &lt;- as.data.frame(shan_ict.z)\nz &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z,\n          ncol = 3,\n          nrow = 1)\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nproxmat &lt;- dist(shan_ict, method = 'euclidean')\n\nproxmat\n\n\n             Mongmit   Pindaya   Ywangan  Pinlaung    Mabein     Kalaw\nPindaya    171.86828                                                  \nYwangan    381.88259 257.31610                                        \nPinlaung    57.46286 208.63519 400.05492                              \nMabein     263.37099 313.45776 529.14689 312.66966                    \nKalaw      160.05997 302.51785 499.53297 181.96406 198.14085          \nPekon       59.61977 117.91580 336.50410  94.61225 282.26877 211.91531\nLawksawk   140.11550 204.32952 432.16535 192.57320 130.36525 140.01101\nNawnghkio   89.07103 180.64047 377.87702 139.27495 204.63154 127.74787\nKyaukme    144.02475 311.01487 505.89191 139.67966 264.88283  79.42225\nMuse       563.01629 704.11252 899.44137 571.58335 453.27410 412.46033\nLaihka     141.87227 298.61288 491.83321 101.10150 345.00222 197.34633\nMongnai    115.86190 258.49346 422.71934  64.52387 358.86053 200.34668\nMawkmai    434.92968 437.99577 397.03752 398.11227 693.24602 562.59200\nKutkai      97.61092 212.81775 360.11861  78.07733 340.55064 204.93018\nMongton    192.67961 283.35574 361.23257 163.42143 425.16902 267.87522\nMongyai    256.72744 287.41816 333.12853 220.56339 516.40426 386.74701\nMongkaing  503.61965 481.71125 364.98429 476.29056 747.17454 625.24500\nLashio     251.29457 398.98167 602.17475 262.51735 231.28227 106.69059\nMongpan    193.32063 335.72896 483.68125 192.78316 301.52942 114.69105\nMatman     401.25041 354.39039 255.22031 382.40610 637.53975 537.63884\nTachileik  529.63213 635.51774 807.44220 555.01039 365.32538 373.64459\nNarphan    406.15714 474.50209 452.95769 371.26895 630.34312 463.53759\nMongkhet   349.45980 391.74783 408.97731 305.86058 610.30557 465.52013\nHsipaw     118.18050 245.98884 388.63147  76.55260 366.42787 212.36711\nMonghsat   214.20854 314.71506 432.98028 160.44703 470.48135 317.96188\nMongmao    242.54541 402.21719 542.85957 217.58854 384.91867 195.18913\nNansang    104.91839 275.44246 472.77637  85.49572 287.92364 124.30500\nLaukkaing  568.27732 726.85355 908.82520 563.81750 520.67373 427.77791\nPangsang   272.67383 428.24958 556.82263 244.47146 418.54016 224.03998\nNamtu      179.62251 225.40822 444.66868 170.04533 366.16094 307.27427\nMonghpyak  177.76325 221.30579 367.44835 222.20020 212.69450 167.08436\nKonkyan    403.39082 500.86933 528.12533 365.44693 613.51206 444.75859\nMongping   265.12574 310.64850 337.94020 229.75261 518.16310 375.64739\nHopong     136.93111 223.06050 352.85844  98.14855 398.00917 264.16294\nNyaungshwe  99.38590 216.52463 407.11649 138.12050 210.21337  95.66782\nHsihseng   131.49728 172.00796 342.91035 111.61846 381.20187 287.11074\nMongla     384.30076 549.42389 728.16301 372.59678 406.09124 260.26411\nHseni      189.37188 337.98982 534.44679 204.47572 213.61240  38.52842\nKunlong    224.12169 355.47066 531.63089 194.76257 396.61508 273.01375\nHopang     281.05362 443.26362 596.19312 265.96924 368.55167 185.14704\nNamhkan    386.02794 543.81859 714.43173 382.78835 379.56035 246.39577\nKengtung   246.45691 385.68322 573.23173 263.48638 219.47071  88.29335\nLangkho    164.26299 323.28133 507.78892 168.44228 253.84371  67.19580\nMonghsu    109.15790 198.35391 340.42789  80.86834 367.19820 237.34578\nTaunggyi   399.84278 503.75471 697.98323 429.54386 226.24011 252.26066\nPangwaun   381.51246 512.13162 580.13146 356.37963 523.44632 338.35194\nKyethi     202.92551 175.54012 287.29358 189.47065 442.07679 360.17247\nLoilen     145.48666 293.61143 469.51621  91.56527 375.06406 217.19877\nManton     430.64070 402.42888 306.16379 405.83081 674.01120 560.16577\nMongyang   309.51302 475.93982 630.71590 286.03834 411.88352 233.56349\nKunhing    173.50424 318.23811 449.67218 141.58836 375.82140 197.63683\nMongyawng  214.21738 332.92193 570.56521 235.55497 193.49994 173.43078\nTangyan    195.92520 208.43740 324.77002 169.50567 448.59948 348.06617\nNamhsan    237.78494 228.41073 286.16305 214.33352 488.33873 385.88676\n               Pekon  Lawksawk Nawnghkio   Kyaukme      Muse    Laihka\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk   157.51129                                                  \nNawnghkio  113.15370  90.82891                                        \nKyaukme    202.12206 186.29066 157.04230                              \nMuse       614.56144 510.13288 533.68806 434.75768                    \nLaihka     182.23667 246.74469 211.88187 128.24979 526.65211          \nMongnai    151.60031 241.71260 182.21245 142.45669 571.97975 100.53457\nMawkmai    416.00669 567.52693 495.15047 512.02846 926.93007 429.96554\nKutkai     114.98048 224.64646 147.44053 170.93318 592.90743 144.67198\nMongton    208.14888 311.07742 225.81118 229.28509 634.71074 212.07320\nMongyai    242.52301 391.26989 319.57938 339.27780 763.91399 264.13364\nMongkaing  480.23965 625.18712 546.69447 586.05094 995.66496 522.96309\nLashio     303.80011 220.75270 230.55346 129.95255 313.15288 238.64533\nMongpan    243.30037 228.54223 172.84425 110.37831 447.49969 210.76951\nMatman     368.25761 515.39711 444.05061 505.52285 929.11283 443.25453\nTachileik  573.39528 441.82621 470.45533 429.15493 221.19950 549.08985\nNarphan    416.84901 523.69580 435.59661 420.30003 770.40234 392.32592\nMongkhet   342.08722 487.41102 414.10280 409.03553 816.44931 324.97428\nHsipaw     145.37542 249.35081 176.09570 163.95741 591.03355 128.42987\nMonghsat   225.64279 352.31496 289.83220 253.25370 663.76026 158.93517\nMongmao    293.70625 314.64777 257.76465 146.09228 451.82530 185.99082\nNansang    160.37607 188.78869 151.13185  60.32773 489.35308  78.78999\nLaukkaing  624.82399 548.83928 552.65554 428.74978 149.26996 507.39700\nPangsang   321.81214 345.91486 287.10769 175.35273 460.24292 214.19291\nNamtu      165.02707 260.95300 257.52713 270.87277 659.16927 185.86794\nMonghpyak  190.93173 142.31691  93.03711 217.64419 539.43485 293.22640\nKonkyan    421.48797 520.31264 439.34272 393.79911 704.86973 351.75354\nMongping   259.68288 396.47081 316.14719 330.28984 744.44948 272.82761\nHopong     138.86577 274.91604 204.88286 218.84211 648.68011 157.48857\nNyaungshwe 139.31874 104.17830  43.26545 126.50414 505.88581 201.71653\nHsihseng   105.30573 257.11202 209.88026 250.27059 677.66886 175.89761\nMongla     441.20998 393.18472 381.40808 241.58966 256.80556 315.93218\nHseni      243.98001 171.50398 164.05304  81.20593 381.30567 204.49010\nKunlong    249.36301 318.30406 285.04608 215.63037 547.24297 122.68682\nHopang     336.38582 321.16462 279.84188 154.91633 377.44407 230.78652\nNamhkan    442.77120 379.41126 367.33575 247.81990 238.67060 342.43665\nKengtung   297.67761 209.38215 208.29647 136.23356 330.08211 258.23950\nLangkho    219.21623 190.30257 156.51662  51.67279 413.64173 160.94435\nMonghsu    113.84636 242.04063 170.09168 200.77712 633.21624 163.28926\nTaunggyi   440.66133 304.96838 344.79200 312.60547 250.81471 425.36916\nPangwaun   423.81347 453.02765 381.67478 308.31407 541.97887 351.78203\nKyethi     162.43575 317.74604 267.21607 328.14177 757.16745 255.83275\nLoilen     181.94596 265.29318 219.26405 146.92675 560.43400  59.69478\nManton     403.82131 551.13000 475.77296 522.86003 941.49778 458.30232\nMongyang   363.58788 363.37684 323.32123 188.59489 389.59919 229.71502\nKunhing    213.46379 278.68953 206.15773 145.00266 533.00162 142.03682\nMongyawng  248.43910 179.07229 220.61209 181.55295 422.37358 211.99976\nTangyan    167.79937 323.14701 269.07880 306.78359 736.93741 224.29176\nNamhsan    207.16559 362.84062 299.74967 347.85944 778.52971 273.79672\n             Mongnai   Mawkmai    Kutkai   Mongton   Mongyai Mongkaing\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai    374.50873                                                  \nKutkai      91.15307 364.95519                                        \nMongton    131.67061 313.35220 107.06341                              \nMongyai    203.23607 178.70499 188.94166 159.79790                    \nMongkaing  456.00842 133.29995 428.96133 365.50032 262.84016          \nLashio     270.86983 638.60773 289.82513 347.11584 466.36472 708.65819\nMongpan    178.09554 509.99632 185.18173 200.31803 346.39710 563.56780\nMatman     376.33870 147.83545 340.86349 303.04574 186.95158 135.51424\nTachileik  563.95232 919.38755 568.99109 608.76740 750.29555 967.14087\nNarphan    329.31700 273.75350 314.27683 215.97925 248.82845 285.65085\nMongkhet   275.76855 115.58388 273.91673 223.22828 104.98924 222.60577\nHsipaw      52.68195 351.34601  51.46282  90.69766 177.33790 423.77868\nMonghsat   125.25968 275.09705 154.32012 150.98053 127.35225 375.60376\nMongmao    188.29603 485.52853 204.69232 206.57001 335.61300 552.31959\nNansang     92.79567 462.41938 130.04549 199.58124 288.55962 542.16609\nLaukkaing  551.56800 882.51110 580.38112 604.66190 732.68347 954.11795\nPangsang   204.25746 484.14757 228.33583 210.77938 343.30638 548.40662\nNamtu      209.35473 427.95451 225.28268 308.71751 278.02761 525.04057\nMonghpyak  253.26470 536.71695 206.61627 258.04282 370.01575 568.21089\nKonkyan    328.82831 339.01411 310.60810 248.25265 287.87384 380.92091\nMongping   202.99615 194.31049 182.75266 119.86993  65.38727 257.18572\nHopong      91.53795 302.84362  73.45899 106.21031 124.62791 379.37916\nNyaungshwe 169.63695 502.99026 152.15482 219.72196 327.13541 557.32112\nHsihseng   142.36728 329.29477 128.21054 194.64317 162.27126 411.59788\nMongla     354.10985 686.88950 388.40984 411.06668 535.28615 761.48327\nHseni      216.81639 582.53670 229.37894 286.75945 408.23212 648.04408\nKunlong    202.92529 446.53763 204.54010 270.02165 299.36066 539.91284\nHopang     243.00945 561.24281 263.31986 273.50305 408.73288 626.17673\nNamhkan    370.05669 706.47792 392.48568 414.53594 550.62819 771.39688\nKengtung   272.28711 632.54638 279.19573 329.38387 460.39706 692.74693\nLangkho    174.67678 531.08019 180.51419 236.70878 358.95672 597.42714\nMonghsu     84.11238 332.07962  62.60859 107.04894 154.86049 400.71816\nTaunggyi   448.55282 810.74692 450.33382 508.40925 635.94105 866.21117\nPangwaun   312.13429 500.68857 321.80465 257.50434 394.07696 536.95736\nKyethi     210.50453 278.85535 184.23422 222.52947 137.79420 352.06533\nLoilen      58.41263 388.73386 131.56529 176.16001 224.79239 482.18190\nManton     391.54062 109.08779 361.82684 310.20581 195.59882  81.75337\nMongyang   260.39387 558.83162 285.33223 295.60023 414.31237 631.91325\nKunhing    110.55197 398.43973 108.84990 114.03609 238.99570 465.03971\nMongyawng  275.77546 620.04321 281.03383 375.22688 445.78964 700.98284\nTangyan    180.37471 262.66006 166.61820 198.88460 109.08506 348.56123\nNamhsan    218.10003 215.19289 191.32762 196.76188  77.35900 288.66231\n              Lashio   Mongpan    Matman Tachileik   Narphan  Mongkhet\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan    172.33279                                                  \nMatman     628.11049 494.81014                                        \nTachileik  311.95286 411.03849 890.12935                              \nNarphan    525.63854 371.13393 312.05193 760.29566                    \nMongkhet   534.44463 412.17123 203.02855 820.50164 217.28718          \nHsipaw     290.86435 179.52054 344.45451 576.18780 295.40170 253.80950\nMonghsat   377.86793 283.30992 313.59911 677.09508 278.21548 167.98445\nMongmao    214.23677 131.59966 501.59903 472.95568 331.42618 375.35820\nNansang    184.47950 144.77393 458.06573 486.77266 398.13308 360.99219\nLaukkaing  334.65738 435.58047 903.72094 325.06329 708.82887 769.06406\nPangsang   236.72516 140.23910 506.29940 481.31907 316.30314 375.58139\nNamtu      365.88437 352.91394 416.65397 659.56458 494.36143 355.99713\nMonghpyak  262.09281 187.85699 470.46845 444.04411 448.40651 462.63265\nKonkyan    485.51312 365.87588 392.40306 730.92980 158.82353 254.24424\nMongping   454.52548 318.47482 201.65224 727.08969 188.64567 113.80917\nHopong     345.31042 239.43845 291.84351 632.45718 294.40441 212.99485\nNyaungshwe 201.58191 137.29734 460.91883 445.81335 427.94086 417.08639\nHsihseng   369.00833 295.87811 304.02806 658.87060 377.52977 256.70338\nMongla     179.95877 253.20001 708.17595 347.33155 531.46949 574.40292\nHseni       79.41836 120.66550 564.64051 354.90063 474.12297 481.88406\nKunlong    295.23103 288.03320 468.27436 595.70536 413.07823 341.68641\nHopang     170.63913 135.62913 573.55355 403.82035 397.85908 451.51070\nNamhkan    173.27153 240.34131 715.42102 295.91660 536.85519 596.19944\nKengtung    59.85893 142.21554 613.01033 295.90429 505.40025 531.35998\nLangkho    115.18145  94.98486 518.86151 402.33622 420.65204 428.08061\nMonghsu    325.71557 216.25326 308.13805 605.02113 311.92379 247.73318\nTaunggyi   195.14541 319.81385 778.45810 150.84117 684.20905 712.80752\nPangwaun   362.45608 232.52209 523.43600 540.60474 264.64997 407.02947\nKyethi     447.10266 358.89620 233.83079 728.87329 374.90376 233.25039\nLoilen     268.92310 207.25000 406.56282 573.75476 354.79137 284.76895\nManton     646.66493 507.96808  59.52318 910.23039 280.26395 181.33894\nMongyang   209.33700 194.93467 585.61776 448.79027 401.39475 445.40621\nKunhing    255.10832 137.85278 403.66587 532.26397 281.62645 292.49814\nMongyawng  172.70139 275.15989 601.80824 432.10118 572.76394 522.91815\nTangyan    429.84475 340.39128 242.78233 719.84066 348.84991 201.49393\nNamhsan    472.04024 364.77086 180.09747 754.03913 316.54695 170.90848\n              Hsipaw  Monghsat   Mongmao   Nansang Laukkaing  Pangsang\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat   121.78922                                                  \nMongmao    185.99483 247.17708                                        \nNansang    120.24428 201.92690 164.99494                              \nLaukkaing  569.06099 626.44910 404.00848 480.60074                    \nPangsang   205.04337 256.37933  57.60801 193.36162 408.04016          \nNamtu      229.44658 231.78673 365.03882 217.61884 664.06286 392.97391\nMonghpyak  237.67919 356.84917 291.88846 227.52638 565.84279 315.11651\nKonkyan    296.74316 268.25060 281.87425 374.70456 635.92043 274.81900\nMongping   168.92101 140.95392 305.57166 287.36626 708.13447 308.33123\nHopong      62.86179 100.45714 244.16253 167.66291 628.48557 261.51075\nNyaungshwe 169.92664 286.37238 230.45003 131.18943 520.24345 257.77823\nHsihseng   136.54610 153.49551 311.98001 193.53779 670.74564 335.52974\nMongla     373.47509 429.00536 216.24705 289.45119 202.55831 217.88123\nHseni      231.48538 331.22632 184.67099 136.45492 391.74585 214.66375\nKunlong    205.10051 202.31862 224.43391 183.01388 521.88657 258.49342\nHopang     248.72536 317.64824  78.29342 196.47091 331.67199  92.57672\nNamhkan    382.79302 455.10875 223.32205 302.89487 196.46063 231.38484\nKengtung   284.08582 383.72138 207.58055 193.67980 351.48520 229.85484\nLangkho    183.05109 279.52329 134.50170  99.39859 410.41270 167.65920\nMonghsu     58.55724 137.24737 242.43599 153.59962 619.01766 260.52971\nTaunggyi   462.31183 562.88102 387.33906 365.04897 345.98041 405.59730\nPangwaun   298.12447 343.53898 187.40057 326.12960 470.63605 157.48757\nKyethi     195.17677 190.50609 377.89657 273.02385 749.99415 396.89963\nLoilen      98.04789 118.65144 190.26490  94.23028 535.57527 207.94433\nManton     359.60008 317.15603 503.79786 476.55544 907.38406 504.75214\nMongyang   267.10497 312.64797  91.06281 218.49285 326.19219 108.37735\nKunhing     90.77517 165.38834 103.91040 128.20940 500.41640 123.18870\nMongyawng  294.70967 364.40429 296.40789 191.11990 454.80044 336.16703\nTangyan    167.69794 144.59626 347.14183 249.70235 722.40954 364.76893\nNamhsan    194.47928 169.56962 371.71448 294.16284 760.45960 385.65526\n               Namtu Monghpyak   Konkyan  Mongping    Hopong Nyaungshwe\nPindaya                                                                \nYwangan                                                                \nPinlaung                                                               \nMabein                                                                 \nKalaw                                                                  \nPekon                                                                  \nLawksawk                                                               \nNawnghkio                                                              \nKyaukme                                                                \nMuse                                                                   \nLaihka                                                                 \nMongnai                                                                \nMawkmai                                                                \nKutkai                                                                 \nMongton                                                                \nMongyai                                                                \nMongkaing                                                              \nLashio                                                                 \nMongpan                                                                \nMatman                                                                 \nTachileik                                                              \nNarphan                                                                \nMongkhet                                                               \nHsipaw                                                                 \nMonghsat                                                               \nMongmao                                                                \nNansang                                                                \nLaukkaing                                                              \nPangsang                                                               \nNamtu                                                                  \nMonghpyak  346.57799                                                   \nKonkyan    478.37690 463.39594                                         \nMongping   321.66441 354.76537 242.02901                               \nHopong     206.82668 267.95563 304.49287 134.00139                     \nNyaungshwe 271.41464 103.97300 432.35040 319.32583 209.32532           \nHsihseng   131.89940 285.37627 383.49700 199.64389  91.65458  225.80242\nMongla     483.49434 408.03397 468.09747 512.61580 432.31105  347.60273\nHseni      327.41448 200.26876 448.84563 395.58453 286.41193  130.86310\nKunlong    233.60474 357.44661 329.11433 309.05385 219.06817  285.13095\nHopang     408.24516 304.26577 348.18522 379.27212 309.77356  247.19891\nNamhkan    506.32466 379.50202 481.59596 523.74815 444.13246  333.32428\nKengtung   385.33554 221.47613 474.82621 442.80821 340.47382  177.75714\nLangkho    305.03473 200.27496 386.95022 343.96455 239.63685  128.26577\nMonghsu    209.64684 232.17823 331.72187 158.90478  43.40665  173.82799\nTaunggyi   518.72748 334.17439 650.56905 621.53039 513.76415  325.09619\nPangwaun   517.03554 381.95144 263.97576 340.37881 346.00673  352.92324\nKyethi     186.90932 328.16234 400.10989 187.43974 136.49038  288.06872\nLoilen     194.24075 296.99681 334.19820 231.99959 124.74445  206.40432\nManton     448.58230 502.20840 366.66876 200.48082 310.58885  488.79874\nMongyang   413.26052 358.17599 329.39338 387.80686 323.35704  294.29500\nKunhing    296.43996 250.74435 253.74202 212.59619 145.15617  189.97131\nMongyawng  262.24331 285.56475 522.38580 455.59190 326.59925  218.12104\nTangyan    178.69483 335.26416 367.46064 161.67411 106.82328  284.14692\nNamhsan    240.95555 352.70492 352.20115 130.23777 132.70541  315.91750\n            Hsihseng    Mongla     Hseni   Kunlong    Hopang   Namhkan\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla     478.66210                                                  \nHseni      312.74375 226.82048                                        \nKunlong    231.85967 346.46200 276.19175                              \nHopang     370.01334 147.02444 162.80878 271.34451                    \nNamhkan    492.09476  77.21355 212.11323 375.73885 146.18632          \nKengtung   370.72441 202.45004  66.12817 317.14187 164.29921 175.63015\nLangkho    276.27441 229.01675  66.66133 224.52741 134.24847 224.40029\nMonghsu     97.82470 424.51868 262.28462 239.89665 301.84458 431.32637\nTaunggyi   528.14240 297.09863 238.19389 471.29032 329.95252 257.29147\nPangwaun   433.06326 319.18643 330.70182 392.45403 206.98364 310.44067\nKyethi      84.04049 556.02500 388.33498 298.55859 440.48114 567.86202\nLoilen     158.84853 338.67408 227.10984 166.53599 242.89326 364.90647\nManton     334.87758 712.51416 584.63341 479.76855 577.52046 721.86149\nMongyang   382.59743 146.66661 210.19929 247.22785  69.25859 167.72448\nKunhing    220.15490 306.47566 206.47448 193.77551 172.96164 314.92119\nMongyawng  309.51462 315.57550 173.86004 240.39800 290.51360 321.21112\nTangyan     70.27241 526.80849 373.07575 268.07983 412.22167 542.64078\nNamhsan    125.74240 564.02740 411.96125 310.40560 440.51555 576.42717\n            Kengtung   Langkho   Monghsu  Taunggyi  Pangwaun    Kyethi\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla                                                                \nHseni                                                                 \nKunlong                                                               \nHopang                                                                \nNamhkan                                                               \nKengtung                                                              \nLangkho    107.16213                                                  \nMonghsu    316.91914 221.84918                                        \nTaunggyi   186.28225 288.27478 486.91951                              \nPangwaun   337.48335 295.38434 343.38498 497.61245                    \nKyethi     444.26274 350.91512 146.61572 599.57407 476.62610          \nLoilen     282.22935 184.10672 131.55208 455.91617 331.69981 232.32965\nManton     631.99123 535.95620 330.76503 803.08034 510.79265 272.03299\nMongyang   217.08047 175.35413 323.95988 374.58247 225.25026 453.86726\nKunhing    245.95083 146.38284 146.78891 429.98509 229.09986 278.95182\nMongyawng  203.87199 186.11584 312.85089 287.73864 475.33116 387.71518\nTangyan    429.95076 332.02048 127.42203 592.65262 447.05580  47.79331\nNamhsan    466.20497 368.20978 153.22576 631.49232 448.58030  68.67929\n              Loilen    Manton  Mongyang   Kunhing Mongyawng   Tangyan\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla                                                                \nHseni                                                                 \nKunlong                                                               \nHopang                                                                \nNamhkan                                                               \nKengtung                                                              \nLangkho                                                               \nMonghsu                                                               \nTaunggyi                                                              \nPangwaun                                                              \nKyethi                                                                \nLoilen                                                                \nManton     419.06087                                                  \nMongyang   246.76592 585.70558                                        \nKunhing    130.39336 410.49230 188.89405                              \nMongyawng  261.75211 629.43339 304.21734 295.35984                    \nTangyan    196.60826 271.82672 421.06366 249.74161 377.52279          \nNamhsan    242.15271 210.48485 450.97869 270.79121 430.02019  63.67613\n\n\n\n\nReveal Code\nhclust_ward &lt;- hclust(proxmat, method = 'ward.D')\n\nplot(hclust_ward, cex = 0.6)\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nm &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(m) &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\n\nac &lt;- function(x) {\n  agnes(shan_ict, method = x)$ac\n}\n\nmap_dbl(m, ac)\n\n\n  average    single  complete      ward \n0.8131144 0.6628705 0.8950702 0.9427730 \n\n\n\n\nReveal Code\nset.seed(12345)\ngap_stat &lt;- clusGap(shan_ict, \n                    FUN = hcut, \n                    nstart = 25, \n                    K.max = 10, \n                    B = 50)\n# Print the result\nprint(gap_stat, method = \"firstmax\")\n\n\nClustering Gap statistic [\"clusGap\"] from call:\nclusGap(x = shan_ict, FUNcluster = hcut, K.max = 10, B = 50, nstart = 25)\nB=50 simulated reference sets, k = 1..10; spaceH0=\"scaledPCA\"\n --&gt; Number of clusters (method 'firstmax'): 1\n          logW   E.logW       gap     SE.sim\n [1,] 8.407129 8.680794 0.2736651 0.04460994\n [2,] 8.130029 8.350712 0.2206824 0.03880130\n [3,] 7.992265 8.202550 0.2102844 0.03362652\n [4,] 7.862224 8.080655 0.2184311 0.03784781\n [5,] 7.756461 7.978022 0.2215615 0.03897071\n [6,] 7.665594 7.887777 0.2221833 0.03973087\n [7,] 7.590919 7.806333 0.2154145 0.04054939\n [8,] 7.526680 7.731619 0.2049390 0.04198644\n [9,] 7.458024 7.660795 0.2027705 0.04421874\n[10,] 7.377412 7.593858 0.2164465 0.04540947\n\n\n\n\nReveal Code\nfviz_gap_stat(gap_stat)\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, \n            k = 6, \n            border = 2:5)\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nshan_ict_mat &lt;- data.matrix(shan_ict)\n\n\n\n\nReveal Code\nheatmaply(normalize(shan_ict_mat),\n          Colv=NA,\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\",\n          seriate = \"OLO\",\n          colors = Blues,\n          k_row = 6,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"Geographic Segmentation of Shan State by ICT indicators\",\n          xlab = \"ICT Indicators\",\n          ylab = \"Townships of Shan State\"\n          )\n\n\n\n\n\n\n\n\nReveal Code\ngroups &lt;- as.factor(cutree(hclust_ward, k=6))\n\n\n\n\nReveal Code\nshan_sf_cluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER`=`as.matrix.groups.`)\n\n\n\n\nReveal Code\nqtm(shan_sf_cluster, \"CLUSTER\")\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nshan_sp &lt;- as_Spatial(shan_sf)\n\n\n\n\nReveal Code\nshan.nb &lt;- poly2nb(shan_sp)\nsummary(shan.nb)\n\n\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\n\n\n\nReveal Code\nplot(shan_sp, \n     border=grey(.5))\nplot(shan.nb, \n     coordinates(shan_sp), \n     col=\"blue\", \n     add=TRUE)\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nlcosts &lt;- nbcosts(shan.nb, shan_ict)\n\n\n\n\nReveal Code\nshan.w &lt;- nb2listw(shan.nb, \n                   lcosts, \n                   style=\"B\")\nsummary(shan.w)\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 55 \nNumber of nonzero links: 264 \nPercentage nonzero weights: 8.727273 \nAverage number of links: 4.8 \nLink number distribution:\n\n 2  3  4  5  6  7  8  9 \n 5  9  7 21  4  3  5  1 \n5 least connected regions:\n3 5 7 9 47 with 2 links\n1 most connected region:\n8 with 9 links\n\nWeights style: B \nWeights constants summary:\n   n   nn       S0       S1        S2\nB 55 3025 76267.65 58260785 522016004\n\n\n\n\nReveal Code\nshan.mst &lt;- mstree(shan.w)\n\nclass(shan.mst)\n\n\n[1] \"mst\"    \"matrix\"\n\n\nReveal Code\ndim(shan.mst)\n\n\n[1] 54  3\n\n\nReveal Code\nhead(shan.mst)\n\n\n     [,1] [,2]      [,3]\n[1,]   54   48  47.79331\n[2,]   54   17 109.08506\n[3,]   54   45 127.42203\n[4,]   45   52 146.78891\n[5,]   52   13 110.55197\n[6,]   13   28  92.79567\n\n\n\n\nReveal Code\nplot(shan_sp, border=gray(.5))\nplot.mst(shan.mst, \n         coordinates(shan_sp), \n         col=\"blue\", \n         cex.lab=0.7, \n         cex.circles=0.005, \n         add=TRUE)\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nclust6 &lt;- spdep::skater(edges = shan.mst[,1:2], \n                 data = shan_ict, \n                 method = \"euclidean\", \n                 ncuts = 5)\n\nstr(clust6)\n\n\nList of 8\n $ groups      : num [1:55] 3 3 6 3 3 3 3 3 3 3 ...\n $ edges.groups:List of 6\n  ..$ :List of 3\n  .. ..$ node: num [1:22] 13 48 54 55 45 37 34 16 25 52 ...\n  .. ..$ edge: num [1:21, 1:3] 48 55 54 37 34 16 45 25 13 13 ...\n  .. ..$ ssw : num 3423\n  ..$ :List of 3\n  .. ..$ node: num [1:18] 47 27 53 38 42 15 41 51 43 32 ...\n  .. ..$ edge: num [1:17, 1:3] 53 15 42 38 41 51 15 27 15 43 ...\n  .. ..$ ssw : num 3759\n  ..$ :List of 3\n  .. ..$ node: num [1:11] 2 6 8 1 36 4 10 9 46 5 ...\n  .. ..$ edge: num [1:10, 1:3] 6 1 8 36 4 6 8 10 10 9 ...\n  .. ..$ ssw : num 1458\n  ..$ :List of 3\n  .. ..$ node: num [1:2] 44 20\n  .. ..$ edge: num [1, 1:3] 44 20 95\n  .. ..$ ssw : num 95\n  ..$ :List of 3\n  .. ..$ node: num 23\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n  ..$ :List of 3\n  .. ..$ node: num 3\n  .. ..$ edge: num[0 , 1:3] \n  .. ..$ ssw : num 0\n $ not.prune   : NULL\n $ candidates  : int [1:6] 1 2 3 4 5 6\n $ ssto        : num 12613\n $ ssw         : num [1:6] 12613 10977 9962 9540 9123 ...\n $ crit        : num [1:2] 1 Inf\n $ vec.crit    : num [1:55] 1 1 1 1 1 1 1 1 1 1 ...\n - attr(*, \"class\")= chr \"skater\"\n\n\n\n\nReveal Code\nccs6 &lt;- clust6$groups\nccs6\n\n\n [1] 3 3 6 3 3 3 3 3 3 3 2 1 1 1 2 1 1 1 2 4 1 2 5 1 1 1 2 1 2 2 1 2 2 1 1 3 1 2\n[39] 2 2 2 2 2 4 1 3 2 1 1 1 2 1 2 1 1\n\n\nReveal Code\ntable(ccs6)\n\n\nccs6\n 1  2  3  4  5  6 \n22 18 11  2  1  1 \n\n\n\n\nReveal Code\nplot(shan_sp, border=gray(.5))\nplot(clust6, \n     coordinates(shan_sp), \n     cex.lab=.7,\n     groups.colors=c(\"red\",\"green\",\"blue\", \"brown\", \"pink\"),\n     cex.circles=0.005, \n     add=TRUE)\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\ngroups_mat &lt;- as.matrix(clust6$groups)\nshan_sf_spatialcluster &lt;- cbind(shan_sf_cluster, as.factor(groups_mat)) %&gt;%\n  rename(`SP_CLUSTER`=`as.factor.groups_mat.`)\nqtm(shan_sf_spatialcluster, \"SP_CLUSTER\")\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nhclust.map &lt;- qtm(shan_sf_cluster,\n                  \"CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\nshclust.map &lt;- qtm(shan_sf_spatialcluster,\n                   \"SP_CLUSTER\") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(hclust.map, shclust.map,\n             asp=NA, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nnongeo_cluster &lt;- hclustgeo(proxmat)\nplot(nongeo_cluster, cex = 0.5)\nrect.hclust(nongeo_cluster, \n            k = 6, \n            border = 2:5)\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\ngroups &lt;- as.factor(cutree(nongeo_cluster, k=6))\n\nshan_sf_ngeo_cluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\nqtm(shan_sf_ngeo_cluster, \"CLUSTER\")\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\ndist &lt;- st_distance(shan_sf, shan_sf)\ndistmat &lt;- as.dist(dist)\n\n\n\n\nReveal Code\ncr &lt;- choicealpha(proxmat, distmat, range.alpha = seq(0, 1, 0.1), K=6, graph = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nclustG &lt;- hclustgeo(proxmat, distmat, alpha = 0.3)\n\ngroups &lt;- as.factor(cutree(clustG, k=6))\n\nshan_sf_Gcluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER` = `as.matrix.groups.`)\n\nqtm(shan_sf_Gcluster, \"CLUSTER\")\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nggplot(data = shan_sf_ngeo_cluster,\n       aes(x = CLUSTER, y = RADIO_PR)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nggparcoord(data = shan_sf_ngeo_cluster, \n           columns = c(17:21), \n           scale = \"globalminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of ICT Variables by Cluster\") +\n  facet_grid(~ CLUSTER) + \n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nshan_sf_ngeo_cluster %&gt;% \n  st_set_geometry(NULL) %&gt;%\n  group_by(CLUSTER) %&gt;%\n  summarise(mean_RADIO_PR = mean(RADIO_PR),\n            mean_TV_PR = mean(TV_PR),\n            mean_LLPHONE_PR = mean(LLPHONE_PR),\n            mean_MPHONE_PR = mean(MPHONE_PR),\n            mean_COMPUTER_PR = mean(COMPUTER_PR))\n\n\n# A tibble: 6 × 6\n  CLUSTER mean_RADIO_PR mean_TV_PR mean_LLPHONE_PR mean_MPHONE_PR\n  &lt;chr&gt;           &lt;dbl&gt;      &lt;dbl&gt;           &lt;dbl&gt;          &lt;dbl&gt;\n1 1               221.        521.            44.2           246.\n2 2               237.        402.            23.9           134.\n3 3               300.        611.            52.2           392.\n4 4               196.        744.            99.0           651.\n5 5               124.        224.            38.0           132.\n6 6                98.6       499.            74.5           468.\n# ℹ 1 more variable: mean_COMPUTER_PR &lt;dbl&gt;"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_08/In-Class_Exercise_08.html",
    "href": "In-Class_Exercise/In-Class_Exercise_08/In-Class_Exercise_08.html",
    "title": "In-Class Exercise 8: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "",
    "text": "Reveal Code\npacman::p_load(olsrr, ggstatsplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)\n\n\n\n\nReveal Code\nmpsz = st_read(dsn = \"Data/Geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\yungq\\Desktop\\SMU Modules\\Y4S1\\Geospatial Analysis and Applications\\IS415 Course Website\\In-Class_Exercise\\In-Class_Exercise_08\\Data\\Geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nReveal Code\nmpsz_svy21 = mpsz %&gt;% \n  st_transform(crs = 3414)\n\n\n\n\nReveal Code\ncondo_resale = read_csv(\"Data/Aspatial/Condo_resale_2015.csv\")\n\ncondo_resale_sf &lt;- st_as_sf(condo_resale, \n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs = 4326) %&gt;% \n  st_transform(crs = 3414)\n\n\n\n\nReveal Code\nggcorrmat(condo_resale[, 5:23])\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\ncondo.mlr1 &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE    + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale_sf)\n\nsummary(condo.mlr1)\n\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale_sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  &lt; 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  &lt; 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  &lt; 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  &lt; 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: &lt; 2.2e-16\n\n\n\n\nReveal Code\ntbl_regression(condo.mlr1, \n               intercept = TRUE)\n\n\n\n\n\n\n\n\nCharacteristic\nBeta\n95% CI1\np-value\n\n\n\n\n(Intercept)\n481,728\n243,505, 719,952\n&lt;0.001\n\n\nAREA_SQM\n12,708\n11,983, 13,433\n&lt;0.001\n\n\nAGE\n-24,441\n-29,861, -19,020\n&lt;0.001\n\n\nPROX_CBD\n-78,670\n-91,948, -65,391\n&lt;0.001\n\n\nPROX_CHILDCARE\n-351,618\n-566,353, -136,883\n0.001\n\n\nPROX_ELDERLYCARE\n171,029\n88,424, 253,635\n&lt;0.001\n\n\nPROX_URA_GROWTH_AREA\n38,475\n13,908, 63,041\n0.002\n\n\nPROX_HAWKER_MARKET\n23,746\n-33,729, 81,222\n0.4\n\n\nPROX_KINDERGARTEN\n147,469\n-14,698, 309,636\n0.075\n\n\nPROX_MRT\n-314,600\n-428,272, -200,928\n&lt;0.001\n\n\nPROX_PARK\n563,280\n432,730, 693,831\n&lt;0.001\n\n\nPROX_PRIMARY_SCH\n180,186\n52,213, 308,159\n0.006\n\n\nPROX_TOP_PRIMARY_SCH\n2,280\n-37,758, 42,318\n&gt;0.9\n\n\nPROX_SHOPPING_MALL\n-206,604\n-290,642, -122,566\n&lt;0.001\n\n\nPROX_SUPERMARKET\n-44,992\n-196,200, 106,217\n0.6\n\n\nPROX_BUS_STOP\n683,121\n411,722, 954,521\n&lt;0.001\n\n\nNO_Of_UNITS\n-231\n-406, -57\n0.010\n\n\nFAMILY_FRIENDLY\n140,341\n48,103, 232,578\n0.003\n\n\nFREEHOLD\n359,913\n263,361, 456,465\n&lt;0.001\n\n\n\n1 CI = Confidence Interval\n\n\n\n\n\n\n\n\n\n\nReveal Code\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %&gt;% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n481,728\n243,505, 719,952\n&lt;0.001\n    AREA_SQM\n12,708\n11,983, 13,433\n&lt;0.001\n    AGE\n-24,441\n-29,861, -19,020\n&lt;0.001\n    PROX_CBD\n-78,670\n-91,948, -65,391\n&lt;0.001\n    PROX_CHILDCARE\n-351,618\n-566,353, -136,883\n0.001\n    PROX_ELDERLYCARE\n171,029\n88,424, 253,635\n&lt;0.001\n    PROX_URA_GROWTH_AREA\n38,475\n13,908, 63,041\n0.002\n    PROX_HAWKER_MARKET\n23,746\n-33,729, 81,222\n0.4\n    PROX_KINDERGARTEN\n147,469\n-14,698, 309,636\n0.075\n    PROX_MRT\n-314,600\n-428,272, -200,928\n&lt;0.001\n    PROX_PARK\n563,280\n432,730, 693,831\n&lt;0.001\n    PROX_PRIMARY_SCH\n180,186\n52,213, 308,159\n0.006\n    PROX_TOP_PRIMARY_SCH\n2,280\n-37,758, 42,318\n&gt;0.9\n    PROX_SHOPPING_MALL\n-206,604\n-290,642, -122,566\n&lt;0.001\n    PROX_SUPERMARKET\n-44,992\n-196,200, 106,217\n0.6\n    PROX_BUS_STOP\n683,121\n411,722, 954,521\n&lt;0.001\n    NO_Of_UNITS\n-231\n-406, -57\n0.010\n    FAMILY_FRIENDLY\n140,341\n48,103, 232,578\n0.003\n    FREEHOLD\n359,913\n263,361, 456,465\n&lt;0.001\n  \n  \n    \n      R² = 0.652; Adjusted R² = 0.647; AIC = 42,970; Statistic = 147; p-value = &lt;0.001; σ = 755,816\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\n\nReveal Code\nmlr.p &lt;- ggcoefstats(condo.mlr1)\nmlr.p\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nmlr.p &lt;- ggcoefstats(condo.mlr1,\n                     sort = \"ascending\")\nmlr.p\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nols_vif_tol(condo.mlr1)\n\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8625928 1.159296\n2                   AGE 0.7026139 1.423257\n3              PROX_CBD 0.4605774 2.171188\n4        PROX_CHILDCARE 0.2981029 3.354546\n5      PROX_ELDERLYCARE 0.5922259 1.688545\n6  PROX_URA_GROWTH_AREA 0.6614127 1.511915\n7    PROX_HAWKER_MARKET 0.4373889 2.286295\n8     PROX_KINDERGARTEN 0.8370845 1.194622\n9              PROX_MRT 0.5049530 1.980382\n10            PROX_PARK 0.8018396 1.247132\n11     PROX_PRIMARY_SCH 0.3855782 2.593508\n12 PROX_TOP_PRIMARY_SCH 0.4968645 2.012621\n13   PROX_SHOPPING_MALL 0.4906426 2.038144\n14     PROX_SUPERMARKET 0.6152063 1.625471\n15        PROX_BUS_STOP 0.3320516 3.011580\n16          NO_Of_UNITS 0.6731165 1.485627\n17      FAMILY_FRIENDLY 0.7202230 1.388459\n18             FREEHOLD 0.6729095 1.486084\n\n\n\n\nReveal Code\nols_plot_resid_fit(condo.mlr1)\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nols_plot_resid_hist(condo.mlr1)\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nols_test_normality(condo.mlr1)\n\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6836         0.0000 \nKolmogorov-Smirnov        0.1388         0.0000 \nCramer-von Mises         120.5692        0.0000 \nAnderson-Darling         68.3268         0.0000 \n-----------------------------------------------\n\n\n\n\nReveal Code\nmlr.output &lt;- as.data.frame(condo.mlr1$residuals)\n\ncondo_resale.res_sf &lt;- cbind(condo_resale_sf, \n                        condo.mlr1$residuals) %&gt;% \n  rename(`MLR_RES` = `condo.mlr1.residuals`)\n\ncondo_resale_sp &lt;- as_Spatial(condo_resale_sf)\ncondo_resale_sp\n\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1436 \nextent      : 14940.85, 43352.45, 24765.67, 48382.81  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 21\nnames       : POSTCODE, SELLING_PRICE, AREA_SQM, AGE,    PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN,    PROX_MRT,   PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, PROX_SHOPPING_MALL, ... \nmin values  :    18965,        540000,       34,   0, 0.386916393,    0.004927023,      0.054508623,          0.214539508,        0.051817113,       0.004927023, 0.052779424, 0.029064164,      0.077106132,          0.077106132,                  0, ... \nmax values  :   828833,       1.8e+07,      619,  37, 19.18042832,     3.46572633,      3.949157205,           9.15540001,        5.374348075,       2.229045366,  3.48037319,  2.16104919,      3.928989144,          6.748192062,        3.477433767, ... \n\n\n\n\nReveal Code\ntmap_mode(\"view\")\n\ntm_shape(mpsz_svy21)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res_sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\nReveal Code\ntmap_mode(\"plot\")\n\n\n\n\nReveal Code\nnb &lt;- dnearneigh(coordinates(condo_resale_sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\n\nReveal Code\nnb_lw &lt;- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nWeights style: W \nWeights constants summary:\n     n      nn   S0       S1       S2\nW 1436 2062096 1436 94.81916 5798.341\n\n\nReveal Code\nlm.morantest(condo.mlr1, nb_lw)\n\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA +\nPROX_HAWKER_MARKET + PROX_KINDERGARTEN + PROX_MRT + PROX_PARK +\nPROX_PRIMARY_SCH + PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL +\nPROX_SUPERMARKET + PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY +\nFREEHOLD, data = condo_resale_sf)\nweights: nb_lw\n\nMoran I statistic standard deviate = 24.673, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    1.392527e-01    -7.134319e-03     3.520278e-05 \n\n\n\n\nReveal Code\nbw.fixed &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                     PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n                     PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n                     PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                     FAMILY_FRIENDLY + FREEHOLD, \n                   data= condo_resale_sp, \n                   approach=\"CV\", \n                   kernel=\"gaussian\", \n                   adaptive=FALSE, \n                   longlat=FALSE)\n\n\nFixed bandwidth: 17660.96 CV score: 8.259118e+14 \nFixed bandwidth: 10917.26 CV score: 7.970454e+14 \nFixed bandwidth: 6749.419 CV score: 7.273273e+14 \nFixed bandwidth: 4173.553 CV score: 6.300006e+14 \nFixed bandwidth: 2581.58 CV score: 5.404958e+14 \nFixed bandwidth: 1597.687 CV score: 4.857515e+14 \nFixed bandwidth: 989.6077 CV score: 4.722431e+14 \nFixed bandwidth: 613.7939 CV score: 1.378294e+16 \nFixed bandwidth: 1221.873 CV score: 4.778717e+14 \nFixed bandwidth: 846.0596 CV score: 4.791629e+14 \nFixed bandwidth: 1078.325 CV score: 4.751406e+14 \nFixed bandwidth: 934.7772 CV score: 4.72518e+14 \nFixed bandwidth: 1023.495 CV score: 4.730305e+14 \nFixed bandwidth: 968.6643 CV score: 4.721317e+14 \nFixed bandwidth: 955.7206 CV score: 4.722072e+14 \nFixed bandwidth: 976.6639 CV score: 4.721387e+14 \nFixed bandwidth: 963.7202 CV score: 4.721484e+14 \nFixed bandwidth: 971.7199 CV score: 4.721293e+14 \nFixed bandwidth: 973.6083 CV score: 4.721309e+14 \nFixed bandwidth: 970.5527 CV score: 4.721295e+14 \nFixed bandwidth: 972.4412 CV score: 4.721296e+14 \nFixed bandwidth: 971.2741 CV score: 4.721292e+14 \nFixed bandwidth: 970.9985 CV score: 4.721293e+14 \nFixed bandwidth: 971.4443 CV score: 4.721292e+14 \nFixed bandwidth: 971.5496 CV score: 4.721293e+14 \nFixed bandwidth: 971.3793 CV score: 4.721292e+14 \nFixed bandwidth: 971.3391 CV score: 4.721292e+14 \nFixed bandwidth: 971.3143 CV score: 4.721292e+14 \nFixed bandwidth: 971.3545 CV score: 4.721292e+14 \nFixed bandwidth: 971.3296 CV score: 4.721292e+14 \nFixed bandwidth: 971.345 CV score: 4.721292e+14 \nFixed bandwidth: 971.3355 CV score: 4.721292e+14 \nFixed bandwidth: 971.3413 CV score: 4.721292e+14 \nFixed bandwidth: 971.3377 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3408 CV score: 4.721292e+14 \nFixed bandwidth: 971.3403 CV score: 4.721292e+14 \nFixed bandwidth: 971.3406 CV score: 4.721292e+14 \nFixed bandwidth: 971.3404 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \n\n\n\n\nReveal Code\ngwr.fixed &lt;- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                         PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                         PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                         PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                         FAMILY_FRIENDLY + FREEHOLD, \n                       data=condo_resale_sp, \n                       bw=bw.fixed, \n                       kernel = 'gaussian', \n                       longlat = FALSE)\n\ngwr.fixed\n\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-03-11 11:29:30.239192 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale_sp, bw = bw.fixed, kernel = \"gaussian\", \n    longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  &lt; 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  &lt; 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  &lt; 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  &lt; 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 971.3405 \n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -3.5988e+07 -5.1998e+05  7.6780e+05  1.7412e+06\n   AREA_SQM              1.0003e+03  5.2758e+03  7.4740e+03  1.2301e+04\n   AGE                  -1.3475e+05 -2.0813e+04 -8.6260e+03 -3.7784e+03\n   PROX_CBD             -7.7047e+07 -2.3608e+05 -8.3600e+04  3.4646e+04\n   PROX_CHILDCARE       -6.0097e+06 -3.3667e+05 -9.7425e+04  2.9007e+05\n   PROX_ELDERLYCARE     -3.5000e+06 -1.5970e+05  3.1971e+04  1.9577e+05\n   PROX_URA_GROWTH_AREA -3.0170e+06 -8.2013e+04  7.0749e+04  2.2612e+05\n   PROX_MRT             -3.5282e+06 -6.5836e+05 -1.8833e+05  3.6922e+04\n   PROX_PARK            -1.2062e+06 -2.1732e+05  3.5383e+04  4.1335e+05\n   PROX_PRIMARY_SCH     -2.2695e+07 -1.7066e+05  4.8472e+04  5.1555e+05\n   PROX_SHOPPING_MALL   -7.2585e+06 -1.6684e+05 -1.0517e+04  1.5923e+05\n   PROX_BUS_STOP        -1.4676e+06 -4.5207e+04  3.7601e+05  1.1664e+06\n   NO_Of_UNITS          -1.3170e+03 -2.4822e+02 -3.0846e+01  2.5496e+02\n   FAMILY_FRIENDLY      -2.2749e+06 -1.1140e+05  7.6214e+03  1.6107e+05\n   FREEHOLD             -9.2067e+06  3.8073e+04  1.5169e+05  3.7528e+05\n                             Max.\n   Intercept            112793548\n   AREA_SQM                 21575\n   AGE                     434201\n   PROX_CBD               2704596\n   PROX_CHILDCARE         1654087\n   PROX_ELDERLYCARE      38867814\n   PROX_URA_GROWTH_AREA  78515730\n   PROX_MRT               3124316\n   PROX_PARK             18122425\n   PROX_PRIMARY_SCH       4637503\n   PROX_SHOPPING_MALL     1529952\n   PROX_BUS_STOP         11342182\n   NO_Of_UNITS              12907\n   FAMILY_FRIENDLY        1720744\n   FREEHOLD               6073636\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 438.3804 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 997.6196 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 42263.61 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41632.36 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 42515.71 \n   Residual sum of squares: 2.53407e+14 \n   R-square value:  0.8909912 \n   Adjusted R-square value:  0.8430417 \n\n   ***********************************************************************\n   Program stops at: 2024-03-11 11:29:31.7134 \n\n\n\n\nReveal Code\nbw.adaptive &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE  + \n                        PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE    + \n                        PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                        PROX_PRIMARY_SCH + PROX_SHOPPING_MALL   + PROX_BUS_STOP + \n                        NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                      data=condo_resale_sp, \n                      approach=\"CV\", \n                      kernel=\"gaussian\", \n                      adaptive=TRUE, \n                      longlat=FALSE)\n\n\nAdaptive bandwidth: 895 CV score: 7.952401e+14 \nAdaptive bandwidth: 561 CV score: 7.667364e+14 \nAdaptive bandwidth: 354 CV score: 6.953454e+14 \nAdaptive bandwidth: 226 CV score: 6.15223e+14 \nAdaptive bandwidth: 147 CV score: 5.674373e+14 \nAdaptive bandwidth: 98 CV score: 5.426745e+14 \nAdaptive bandwidth: 68 CV score: 5.168117e+14 \nAdaptive bandwidth: 49 CV score: 4.859631e+14 \nAdaptive bandwidth: 37 CV score: 4.646518e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \nAdaptive bandwidth: 25 CV score: 4.430816e+14 \nAdaptive bandwidth: 32 CV score: 4.505602e+14 \nAdaptive bandwidth: 27 CV score: 4.462172e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \n\n\nReveal Code\ngwr.adaptive &lt;- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                            PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE + \n                            PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                            PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                            NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                          data=condo_resale_sp,\n                          bw=bw.adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE, \n                          longlat = FALSE)\n\ngwr.adaptive\n\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-03-11 11:29:39.054727 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale_sp, bw = bw.adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  &lt; 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  &lt; 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  &lt; 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  &lt; 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 30 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -1.3487e+08 -2.4669e+05  7.7928e+05  1.6194e+06\n   AREA_SQM              3.3188e+03  5.6285e+03  7.7825e+03  1.2738e+04\n   AGE                  -9.6746e+04 -2.9288e+04 -1.4043e+04 -5.6119e+03\n   PROX_CBD             -2.5330e+06 -1.6256e+05 -7.7242e+04  2.6624e+03\n   PROX_CHILDCARE       -1.2790e+06 -2.0175e+05  8.7158e+03  3.7778e+05\n   PROX_ELDERLYCARE     -1.6212e+06 -9.2050e+04  6.1029e+04  2.8184e+05\n   PROX_URA_GROWTH_AREA -7.2686e+06 -3.0350e+04  4.5869e+04  2.4613e+05\n   PROX_MRT             -4.3781e+07 -6.7282e+05 -2.2115e+05 -7.4593e+04\n   PROX_PARK            -2.9020e+06 -1.6782e+05  1.1601e+05  4.6572e+05\n   PROX_PRIMARY_SCH     -8.6418e+05 -1.6627e+05 -7.7853e+03  4.3222e+05\n   PROX_SHOPPING_MALL   -1.8272e+06 -1.3175e+05 -1.4049e+04  1.3799e+05\n   PROX_BUS_STOP        -2.0579e+06 -7.1461e+04  4.1104e+05  1.2071e+06\n   NO_Of_UNITS          -2.1993e+03 -2.3685e+02 -3.4699e+01  1.1657e+02\n   FAMILY_FRIENDLY      -5.9879e+05 -5.0927e+04  2.6173e+04  2.2481e+05\n   FREEHOLD             -1.6340e+05  4.0765e+04  1.9023e+05  3.7960e+05\n                            Max.\n   Intercept            18758355\n   AREA_SQM                23064\n   AGE                     13303\n   PROX_CBD             11346650\n   PROX_CHILDCARE        2892127\n   PROX_ELDERLYCARE      2465671\n   PROX_URA_GROWTH_AREA  7384059\n   PROX_MRT              1186242\n   PROX_PARK             2588497\n   PROX_PRIMARY_SCH      3381462\n   PROX_SHOPPING_MALL   38038564\n   PROX_BUS_STOP        12081592\n   NO_Of_UNITS              1010\n   FAMILY_FRIENDLY       2072414\n   FREEHOLD              1813995\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 350.3088 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 1085.691 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 41982.22 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41546.74 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 41914.08 \n   Residual sum of squares: 2.528227e+14 \n   R-square value:  0.8912425 \n   Adjusted R-square value:  0.8561185 \n\n   ***********************************************************************\n   Program stops at: 2024-03-11 11:29:40.55828 \n\n\n\n\nReveal Code\ncondo_resale_sf.adaptive &lt;- st_as_sf(gwr.adaptive$SDF) %&gt;%\n  st_transform(crs = 3414)\n\ncondo_resale_sf.adaptive.svy21 &lt;- st_transform(condo_resale_sf.adaptive, 3414)\ncondo_resale_sf.adaptive.svy21\n\n\nSimple feature collection with 1436 features and 51 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14940.85 ymin: 24765.67 xmax: 43352.45 ymax: 48382.81\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n    Intercept  AREA_SQM        AGE  PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n1   2050011.7  9561.892  -9514.634 -120681.9      319266.92       -393417.79\n2   1633128.2 16576.853 -58185.479 -149434.2      441102.18        325188.74\n3   3433608.2 13091.861 -26707.386 -259397.8     -120116.82        535855.81\n4    234358.9 20730.601 -93308.988 2426853.7      480825.28        314783.72\n5   2285804.9  6722.836 -17608.018 -316835.5       90764.78       -137384.61\n6  -3568877.4  6039.581 -26535.592  327306.1     -152531.19       -700392.85\n7  -2874842.4 16843.575 -59166.727 -983577.2     -177810.50       -122384.02\n8   2038086.0  6905.135 -17681.897 -285076.6       70259.40        -96012.78\n9   1718478.4  9580.703 -14401.128  105803.4     -657698.02       -123276.00\n10  3457054.0 14072.011 -31579.884 -234895.4       79961.45        548581.04\n   PROX_URA_GROWTH_AREA    PROX_MRT  PROX_PARK PROX_PRIMARY_SCH\n1            -159980.20  -299742.96 -172104.47        242668.03\n2            -142290.39 -2510522.23  523379.72       1106830.66\n3            -253621.21  -936853.28  209099.85        571462.33\n4           -2679297.89 -2039479.50 -759153.26       3127477.21\n5             303714.81   -44567.05  -10284.62         30413.56\n6             -28051.25   733566.47 1511488.92        320878.23\n7            1397676.38 -2745430.34  710114.74       1786570.95\n8             269368.71   -14552.99   73533.34         53359.73\n9            -361974.72  -476785.32 -132067.59        -40128.92\n10           -150024.38 -1503835.53  574155.47        108996.67\n   PROX_SHOPPING_MALL PROX_BUS_STOP  NO_Of_UNITS FAMILY_FRIENDLY  FREEHOLD\n1          300881.390     1210615.4  104.8290640       -9075.370  303955.6\n2          -87693.378     1843587.2 -288.3441183      310074.664  396221.3\n3         -126732.712     1411924.9   -9.5532945        5949.746  168821.7\n4          -29593.342     7225577.5 -161.3551620     1556178.531 1212515.6\n5           -7490.586      677577.0   42.2659674       58986.951  328175.2\n6          258583.881     1086012.6 -214.3671271      201992.641  471873.1\n7         -384251.210     5094060.5   -0.9212521      359659.512  408871.9\n8          -39634.902      735767.1   30.1741069       55602.506  347075.0\n9          276718.757     2815772.4  675.1615559      -30453.297  503872.8\n10        -454726.822     2123557.0  -21.3044311     -100935.586  213324.6\n         y    yhat    residual CV_Score Stud_residual Intercept_SE AREA_SQM_SE\n1  3000000 2886532   113468.16        0    0.38207013     516105.5    823.2860\n2  3880000 3466801   413198.52        0    1.01433140     488083.5    825.2380\n3  3325000 3616527  -291527.20        0   -0.83780678     963711.4    988.2240\n4  4250000 5435482 -1185481.63        0   -2.84614670     444185.5    617.4007\n5  1400000 1388166    11834.26        0    0.03404453    2119620.6   1376.2778\n6  1320000 1516702  -196701.94        0   -0.72065800   28572883.7   2348.0091\n7  3410000 3266881   143118.77        0    0.41291992     679546.6    893.5893\n8  1420000 1431955   -11955.27        0   -0.03033109    2217773.1   1415.2604\n9  2025000 1832799   192200.83        0    0.52018109     814281.8    943.8434\n10 2550000 2223364   326635.53        0    1.10559735    2410252.0   1271.4073\n      AGE_SE PROX_CBD_SE PROX_CHILDCARE_SE PROX_ELDERLYCARE_SE\n1   5889.782    37411.22          319111.1           120633.34\n2   6226.916    23615.06          299705.3            84546.69\n3   6510.236    56103.77          349128.5           129687.07\n4   6010.511   469337.41          304965.2           127150.69\n5   8180.361   410644.47          698720.6           327371.55\n6  14601.909  5272846.47         1141599.8          1653002.19\n7   8970.629   346164.20          530101.1           148598.71\n8   8661.309   438035.69          742532.8           399221.05\n9  11791.208    89148.35          704630.7           329683.30\n10  9941.980   173532.77          500976.2           281876.74\n   PROX_URA_GROWTH_AREA_SE PROX_MRT_SE PROX_PARK_SE PROX_PRIMARY_SCH_SE\n1                 56207.39    185181.3     205499.6            152400.7\n2                 76956.50    281133.9     229358.7            165150.7\n3                 95774.60    275483.7     314124.3            196662.6\n4                470762.12    279877.1     227249.4            240878.9\n5                474339.56    363830.0     364580.9            249087.7\n6               5496627.21    730453.2    1741712.0            683265.5\n7                371692.97    375511.9     297400.9            344602.8\n8                517977.91    423155.4     440984.4            261251.2\n9                153436.22    285325.4     304998.4            278258.5\n10               239182.57    571355.7     599131.8            331284.8\n   PROX_SHOPPING_MALL_SE PROX_BUS_STOP_SE NO_Of_UNITS_SE FAMILY_FRIENDLY_SE\n1               109268.8         600668.6       218.1258           131474.7\n2                98906.8         410222.1       208.9410           114989.1\n3               119913.3         464156.7       210.9828           146607.2\n4               177104.1         562810.8       361.7767           108726.6\n5               301032.9         740922.4       299.5034           160663.7\n6              2931208.6        1418333.3       602.5571           331727.0\n7               249969.5         821236.4       532.1978           129241.2\n8               351634.0         775038.4       338.6777           171895.1\n9               289872.7         850095.5       439.9037           220223.4\n10              265529.7         631399.2       259.0169           189125.5\n   FREEHOLD_SE Intercept_TV AREA_SQM_TV     AGE_TV PROX_CBD_TV\n1     115954.0    3.9720784   11.614302  -1.615447 -3.22582173\n2     130110.0    3.3460017   20.087361  -9.344188 -6.32792021\n3     141031.5    3.5629010   13.247868  -4.102368 -4.62353528\n4     138239.1    0.5276150   33.577223 -15.524302  5.17080808\n5     210641.1    1.0784029    4.884795  -2.152474 -0.77155660\n6     374347.3   -0.1249043    2.572214  -1.817269  0.06207388\n7     182216.9   -4.2305303   18.849348  -6.595605 -2.84136028\n8     216649.4    0.9189786    4.879056  -2.041481 -0.65080678\n9     220473.7    2.1104224   10.150733  -1.221345  1.18682383\n10    206346.2    1.4343123   11.068059  -3.176418 -1.35360852\n   PROX_CHILDCARE_TV PROX_ELDERLYCARE_TV PROX_URA_GROWTH_AREA_TV PROX_MRT_TV\n1         1.00048819          -3.2612693            -2.846248368 -1.61864578\n2         1.47178634           3.8462625            -1.848971738 -8.92998600\n3        -0.34404755           4.1319138            -2.648105057 -3.40075727\n4         1.57665606           2.4756745            -5.691404992 -7.28705261\n5         0.12990138          -0.4196596             0.640289855 -0.12249416\n6        -0.13361179          -0.4237096            -0.005103357  1.00426206\n7        -0.33542751          -0.8235874             3.760298131 -7.31116712\n8         0.09462126          -0.2405003             0.520038994 -0.03439159\n9        -0.93339393          -0.3739225            -2.359121712 -1.67102293\n10        0.15961128           1.9461735            -0.627237944 -2.63204802\n   PROX_PARK_TV PROX_PRIMARY_SCH_TV PROX_SHOPPING_MALL_TV PROX_BUS_STOP_TV\n1   -0.83749312           1.5923022            2.75358842        2.0154464\n2    2.28192684           6.7019454           -0.88662640        4.4941192\n3    0.66565951           2.9058009           -1.05686949        3.0419145\n4   -3.34061770          12.9836105           -0.16709578       12.8383775\n5   -0.02820944           0.1220998           -0.02488294        0.9145046\n6    0.86781794           0.4696245            0.08821750        0.7656963\n7    2.38773567           5.1844351           -1.53719231        6.2029165\n8    0.16674816           0.2042469           -0.11271635        0.9493299\n9   -0.43301073          -0.1442145            0.95462153        3.3123012\n10   0.95831249           0.3290120           -1.71252687        3.3632555\n   NO_Of_UNITS_TV FAMILY_FRIENDLY_TV FREEHOLD_TV  Local_R2\n1     0.480589953        -0.06902748    2.621347 0.8846744\n2    -1.380026395         2.69655779    3.045280 0.8899773\n3    -0.045279967         0.04058290    1.197050 0.8947007\n4    -0.446007570        14.31276425    8.771149 0.9073605\n5     0.141120178         0.36714544    1.557983 0.9510057\n6    -0.355762335         0.60891234    1.260522 0.9247586\n7    -0.001731033         2.78285441    2.243875 0.8310458\n8     0.089093858         0.32346758    1.602012 0.9463936\n9     1.534793921        -0.13828365    2.285410 0.8380365\n10   -0.082251138        -0.53369623    1.033819 0.9080753\n                    geometry\n1  POINT (22085.12 29951.54)\n2   POINT (25656.84 34546.2)\n3   POINT (23963.99 32890.8)\n4  POINT (27044.28 32319.77)\n5  POINT (41042.56 33743.64)\n6   POINT (39717.04 32943.1)\n7   POINT (28419.1 33513.37)\n8  POINT (40763.57 33879.61)\n9  POINT (23595.63 28884.78)\n10 POINT (24586.56 33194.31)\n\n\n\n\nReveal Code\ngwr.adaptive.output &lt;- as.data.frame(gwr.adaptive$SDF)\ncondo_resale_sf.adaptive &lt;- cbind(condo_resale.res_sf, as.matrix(gwr.adaptive.output))\n\nglimpse(condo_resale_sf.adaptive)\n\n\nRows: 1,436\nColumns: 76\n$ POSTCODE                &lt;dbl&gt; 118635, 288420, 267833, 258380, 467169, 466472…\n$ SELLING_PRICE           &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ AREA_SQM                &lt;dbl&gt; 309, 290, 248, 127, 145, 139, 218, 141, 165, 1…\n$ AGE                     &lt;dbl&gt; 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22,…\n$ PROX_CBD                &lt;dbl&gt; 7.941259, 6.609797, 6.898000, 4.038861, 11.783…\n$ PROX_CHILDCARE          &lt;dbl&gt; 0.16597932, 0.28027246, 0.42922669, 0.39473543…\n$ PROX_ELDERLYCARE        &lt;dbl&gt; 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.…\n$ PROX_URA_GROWTH_AREA    &lt;dbl&gt; 6.618741, 7.505109, 6.463887, 4.906512, 6.4106…\n$ PROX_HAWKER_MARKET      &lt;dbl&gt; 1.76542207, 0.54507614, 0.37789301, 1.68259969…\n$ PROX_KINDERGARTEN       &lt;dbl&gt; 0.05835552, 0.61592412, 0.14120309, 0.38200076…\n$ PROX_MRT                &lt;dbl&gt; 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.…\n$ PROX_PARK               &lt;dbl&gt; 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.…\n$ PROX_PRIMARY_SCH        &lt;dbl&gt; 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.…\n$ PROX_TOP_PRIMARY_SCH    &lt;dbl&gt; 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.…\n$ PROX_SHOPPING_MALL      &lt;dbl&gt; 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.…\n$ PROX_SUPERMARKET        &lt;dbl&gt; 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.…\n$ PROX_BUS_STOP           &lt;dbl&gt; 0.10336166, 0.28673408, 0.28504777, 0.29872340…\n$ NO_Of_UNITS             &lt;dbl&gt; 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34…\n$ FAMILY_FRIENDLY         &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD                &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ MLR_RES                 &lt;dbl&gt; -1442408.78, 389648.30, 221790.82, 1087048.92,…\n$ Intercept               &lt;dbl&gt; 2050011.67, 1633128.24, 3433608.17, 234358.91,…\n$ AREA_SQM.1              &lt;dbl&gt; 9561.892, 16576.853, 13091.861, 20730.601, 672…\n$ AGE.1                   &lt;dbl&gt; -9514.634, -58185.479, -26707.386, -93308.988,…\n$ PROX_CBD.1              &lt;dbl&gt; -120681.94, -149434.22, -259397.77, 2426853.66…\n$ PROX_CHILDCARE.1        &lt;dbl&gt; 319266.925, 441102.177, -120116.816, 480825.28…\n$ PROX_ELDERLYCARE.1      &lt;dbl&gt; -393417.795, 325188.741, 535855.806, 314783.72…\n$ PROX_URA_GROWTH_AREA.1  &lt;dbl&gt; -159980.203, -142290.389, -253621.206, -267929…\n$ PROX_MRT.1              &lt;dbl&gt; -299742.96, -2510522.23, -936853.28, -2039479.…\n$ PROX_PARK.1             &lt;dbl&gt; -172104.47, 523379.72, 209099.85, -759153.26, …\n$ PROX_PRIMARY_SCH.1      &lt;dbl&gt; 242668.03, 1106830.66, 571462.33, 3127477.21, …\n$ PROX_SHOPPING_MALL.1    &lt;dbl&gt; 300881.390, -87693.378, -126732.712, -29593.34…\n$ PROX_BUS_STOP.1         &lt;dbl&gt; 1210615.44, 1843587.22, 1411924.90, 7225577.51…\n$ NO_Of_UNITS.1           &lt;dbl&gt; 104.8290640, -288.3441183, -9.5532945, -161.35…\n$ FAMILY_FRIENDLY.1       &lt;dbl&gt; -9075.370, 310074.664, 5949.746, 1556178.531, …\n$ FREEHOLD.1              &lt;dbl&gt; 303955.61, 396221.27, 168821.75, 1212515.58, 3…\n$ y                       &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ yhat                    &lt;dbl&gt; 2886531.8, 3466801.5, 3616527.2, 5435481.6, 13…\n$ residual                &lt;dbl&gt; 113468.16, 413198.52, -291527.20, -1185481.63,…\n$ CV_Score                &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Stud_residual           &lt;dbl&gt; 0.38207013, 1.01433140, -0.83780678, -2.846146…\n$ Intercept_SE            &lt;dbl&gt; 516105.5, 488083.5, 963711.4, 444185.5, 211962…\n$ AREA_SQM_SE             &lt;dbl&gt; 823.2860, 825.2380, 988.2240, 617.4007, 1376.2…\n$ AGE_SE                  &lt;dbl&gt; 5889.782, 6226.916, 6510.236, 6010.511, 8180.3…\n$ PROX_CBD_SE             &lt;dbl&gt; 37411.22, 23615.06, 56103.77, 469337.41, 41064…\n$ PROX_CHILDCARE_SE       &lt;dbl&gt; 319111.1, 299705.3, 349128.5, 304965.2, 698720…\n$ PROX_ELDERLYCARE_SE     &lt;dbl&gt; 120633.34, 84546.69, 129687.07, 127150.69, 327…\n$ PROX_URA_GROWTH_AREA_SE &lt;dbl&gt; 56207.39, 76956.50, 95774.60, 470762.12, 47433…\n$ PROX_MRT_SE             &lt;dbl&gt; 185181.3, 281133.9, 275483.7, 279877.1, 363830…\n$ PROX_PARK_SE            &lt;dbl&gt; 205499.6, 229358.7, 314124.3, 227249.4, 364580…\n$ PROX_PRIMARY_SCH_SE     &lt;dbl&gt; 152400.7, 165150.7, 196662.6, 240878.9, 249087…\n$ PROX_SHOPPING_MALL_SE   &lt;dbl&gt; 109268.8, 98906.8, 119913.3, 177104.1, 301032.…\n$ PROX_BUS_STOP_SE        &lt;dbl&gt; 600668.6, 410222.1, 464156.7, 562810.8, 740922…\n$ NO_Of_UNITS_SE          &lt;dbl&gt; 218.1258, 208.9410, 210.9828, 361.7767, 299.50…\n$ FAMILY_FRIENDLY_SE      &lt;dbl&gt; 131474.73, 114989.07, 146607.22, 108726.62, 16…\n$ FREEHOLD_SE             &lt;dbl&gt; 115954.0, 130110.0, 141031.5, 138239.1, 210641…\n$ Intercept_TV            &lt;dbl&gt; 3.9720784, 3.3460017, 3.5629010, 0.5276150, 1.…\n$ AREA_SQM_TV             &lt;dbl&gt; 11.614302, 20.087361, 13.247868, 33.577223, 4.…\n$ AGE_TV                  &lt;dbl&gt; -1.6154474, -9.3441881, -4.1023685, -15.524301…\n$ PROX_CBD_TV             &lt;dbl&gt; -3.22582173, -6.32792021, -4.62353528, 5.17080…\n$ PROX_CHILDCARE_TV       &lt;dbl&gt; 1.000488185, 1.471786337, -0.344047555, 1.5766…\n$ PROX_ELDERLYCARE_TV     &lt;dbl&gt; -3.26126929, 3.84626245, 4.13191383, 2.4756745…\n$ PROX_URA_GROWTH_AREA_TV &lt;dbl&gt; -2.846248368, -1.848971738, -2.648105057, -5.6…\n$ PROX_MRT_TV             &lt;dbl&gt; -1.61864578, -8.92998600, -3.40075727, -7.2870…\n$ PROX_PARK_TV            &lt;dbl&gt; -0.83749312, 2.28192684, 0.66565951, -3.340617…\n$ PROX_PRIMARY_SCH_TV     &lt;dbl&gt; 1.59230221, 6.70194543, 2.90580089, 12.9836104…\n$ PROX_SHOPPING_MALL_TV   &lt;dbl&gt; 2.753588422, -0.886626400, -1.056869486, -0.16…\n$ PROX_BUS_STOP_TV        &lt;dbl&gt; 2.0154464, 4.4941192, 3.0419145, 12.8383775, 0…\n$ NO_Of_UNITS_TV          &lt;dbl&gt; 0.480589953, -1.380026395, -0.045279967, -0.44…\n$ FAMILY_FRIENDLY_TV      &lt;dbl&gt; -0.06902748, 2.69655779, 0.04058290, 14.312764…\n$ FREEHOLD_TV             &lt;dbl&gt; 2.6213469, 3.0452799, 1.1970499, 8.7711485, 1.…\n$ Local_R2                &lt;dbl&gt; 0.8846744, 0.8899773, 0.8947007, 0.9073605, 0.…\n$ coords.x1               &lt;dbl&gt; 22085.12, 25656.84, 23963.99, 27044.28, 41042.…\n$ coords.x2               &lt;dbl&gt; 29951.54, 34546.20, 32890.80, 32319.77, 33743.…\n$ geometry                &lt;POINT [m]&gt; POINT (22085.12 29951.54), POINT (25656.…\n\n\n\n\nReveal Code\ntmap_mode(\"view\")\n\ntm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale_sf.adaptive) +  \n  tm_dots(col = \"Local_R2\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\n\n\nReveal Code\nAREA_SQM_SE &lt;- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale_sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_SE\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nAREA_SQM_TV &lt;- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale_sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_TV\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\ntmap_arrange(AREA_SQM_SE, AREA_SQM_TV, \n             asp=1, ncol=2,\n             sync = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\ntmap_mode(\"plot\")\n\ntm_shape(mpsz_svy21[mpsz_svy21$REGION_N==\"CENTRAL REGION\", ])+\n  tm_polygons()+\ntm_shape(condo_resale_sf.adaptive) + \n  tm_bubbles(col = \"Local_R2\",\n           size = 0.15,\n           border.col = \"gray60\",\n           border.lwd = 1)"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_07/In-Class_Exercise_07.html",
    "href": "In-Class_Exercise/In-Class_Exercise_07/In-Class_Exercise_07.html",
    "title": "In-Class Exercise 7: Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "",
    "text": "Reveal Code\npacman::p_load(rgdal, sfdep, tmap, sf, ClustGeo, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, tidyverse, GGally)\n\n\n\n\n\n\n\n\nReveal Code\nshan_sf &lt;- st_read(dsn = \"Data/Geospatial\", \n                   layer = \"myanmar_township_boundaries\")\n\n\nReading layer `myanmar_township_boundaries' from data source \n  `C:\\Users\\yungq\\Desktop\\SMU Modules\\Y4S1\\Geospatial Analysis and Applications\\IS415 Course Website\\In-Class_Exercise\\In-Class_Exercise_07\\Data\\Geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 330 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.17275 ymin: 9.671252 xmax: 101.1699 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\n\nReveal Code\nict &lt;- read_csv (\"Data/Aspatial/Shan-ICT.csv\")\n\nsummary(ict)\n\n\n District Pcode     District Name      Township Pcode     Township Name     \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n Total households     Radio         Television    Land line phone \n Min.   : 3318    Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711    1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685    Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369    Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471    3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604    Max.   :30176   Max.   :62388   Max.   :6736.0  \n  Mobile phone      Computer      Internet at home\n Min.   :  150   Min.   :  20.0   Min.   :   8.0  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0  \n Median : 3559   Median : 244.0   Median : 316.0  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_07/In-Class_Exercise_07.html#loading-the-required-packages-into-the-r-environment",
    "href": "In-Class_Exercise/In-Class_Exercise_07/In-Class_Exercise_07.html#loading-the-required-packages-into-the-r-environment",
    "title": "In-Class Exercise 7: Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "",
    "text": "Reveal Code\npacman::p_load(rgdal, sfdep, tmap, sf, ClustGeo, \n               ggpubr, cluster, factoextra, NbClust,\n               heatmaply, corrplot, psych, tidyverse, GGally)\n\n\n\n\n\n\n\n\nReveal Code\nshan_sf &lt;- st_read(dsn = \"Data/Geospatial\", \n                   layer = \"myanmar_township_boundaries\")\n\n\nReading layer `myanmar_township_boundaries' from data source \n  `C:\\Users\\yungq\\Desktop\\SMU Modules\\Y4S1\\Geospatial Analysis and Applications\\IS415 Course Website\\In-Class_Exercise\\In-Class_Exercise_07\\Data\\Geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 330 features and 14 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 92.17275 ymin: 9.671252 xmax: 101.1699 ymax: 28.54554\nGeodetic CRS:  WGS 84\n\n\n\n\n\n\n\nReveal Code\nict &lt;- read_csv (\"Data/Aspatial/Shan-ICT.csv\")\n\nsummary(ict)\n\n\n District Pcode     District Name      Township Pcode     Township Name     \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n Total households     Radio         Television    Land line phone \n Min.   : 3318    Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711    1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685    Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369    Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471    3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604    Max.   :30176   Max.   :62388   Max.   :6736.0  \n  Mobile phone      Computer      Internet at home\n Min.   :  150   Min.   :  20.0   Min.   :   8.0  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0  \n Median : 3559   Median : 244.0   Median : 316.0  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_07/In-Class_Exercise_07.html#preparing-the-datasets-of-interest-for-clustering-analysis",
    "href": "In-Class_Exercise/In-Class_Exercise_07/In-Class_Exercise_07.html#preparing-the-datasets-of-interest-for-clustering-analysis",
    "title": "In-Class Exercise 7: Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "Preparing the datasets of interest for clustering analysis",
    "text": "Preparing the datasets of interest for clustering analysis\n\nExtracting the Shan region from the geospatial polygons of Myanmar\n\n\nReveal Code\nshan_sf &lt;- shan_sf %&gt;%\n  filter(ST %in% c(\"Shan (East)\", \"Shan (North)\", \"Shan (South)\")) %&gt;%\n  select(c(2:7))\n\nglimpse(shan_sf)\n\n\nRows: 55\nColumns: 7\n$ ST       &lt;chr&gt; \"Shan (North)\", \"Shan (South)\", \"Shan (South)\", \"Shan (South)…\n$ ST_PCODE &lt;chr&gt; \"MMR015\", \"MMR014\", \"MMR014\", \"MMR014\", \"MMR015\", \"MMR014\", \"…\n$ DT       &lt;chr&gt; \"Mongmit\", \"Taunggyi\", \"Taunggyi\", \"Taunggyi\", \"Mongmit\", \"Ta…\n$ DT_PCODE &lt;chr&gt; \"MMR015D008\", \"MMR014D001\", \"MMR014D001\", \"MMR014D001\", \"MMR0…\n$ TS       &lt;chr&gt; \"Mongmit\", \"Pindaya\", \"Ywangan\", \"Pinlaung\", \"Mabein\", \"Kalaw…\n$ TS_PCODE &lt;chr&gt; \"MMR015017\", \"MMR014006\", \"MMR014007\", \"MMR014009\", \"MMR01501…\n$ geometry &lt;MULTIPOLYGON [°]&gt; MULTIPOLYGON (((96.96001 23..., MULTIPOLYGON (((…\n\n\n\n\nStandardising the aspatial data via Scaling using the total number of households\n\n\nReveal Code\nict_derived &lt;- ict %&gt;%\n  mutate(`RADIO_PR` = `Radio`/`Total households`*1000) %&gt;%\n  mutate(`TV_PR` = `Television`/`Total households`*1000) %&gt;%\n  mutate(`LLPHONE_PR` = `Land line phone`/`Total households`*1000) %&gt;%\n  mutate(`MPHONE_PR` = `Mobile phone`/`Total households`*1000) %&gt;%\n  mutate(`COMPUTER_PR` = `Computer`/`Total households`*1000) %&gt;%\n  mutate(`INTERNET_PR` = `Internet at home`/`Total households`*1000) %&gt;%\n  rename(`DT_PCODE` =`District Pcode`,`DT`=`District Name`,\n         `TS_PCODE`=`Township Pcode`, `TS`=`Township Name`,\n         `TT_HOUSEHOLDS`=`Total households`,\n         `RADIO`=`Radio`, `TV`=`Television`, \n         `LLPHONE`=`Land line phone`, `MPHONE`=`Mobile phone`,\n         `COMPUTER`=`Computer`, `INTERNET`=`Internet at home`) \n\nsummary(ict_derived)\n\n\n   DT_PCODE              DT              TS_PCODE              TS           \n Length:55          Length:55          Length:55          Length:55         \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n TT_HOUSEHOLDS       RADIO             TV           LLPHONE      \n Min.   : 3318   Min.   :  115   Min.   :  728   Min.   :  20.0  \n 1st Qu.: 8711   1st Qu.: 1260   1st Qu.: 3744   1st Qu.: 266.5  \n Median :13685   Median : 2497   Median : 6117   Median : 695.0  \n Mean   :18369   Mean   : 4487   Mean   :10183   Mean   : 929.9  \n 3rd Qu.:23471   3rd Qu.: 6192   3rd Qu.:13906   3rd Qu.:1082.5  \n Max.   :82604   Max.   :30176   Max.   :62388   Max.   :6736.0  \n     MPHONE         COMPUTER         INTERNET         RADIO_PR     \n Min.   :  150   Min.   :  20.0   Min.   :   8.0   Min.   : 21.05  \n 1st Qu.: 2037   1st Qu.: 121.0   1st Qu.:  88.0   1st Qu.:138.95  \n Median : 3559   Median : 244.0   Median : 316.0   Median :210.95  \n Mean   : 6470   Mean   : 575.5   Mean   : 760.2   Mean   :215.68  \n 3rd Qu.: 7177   3rd Qu.: 507.0   3rd Qu.: 630.5   3rd Qu.:268.07  \n Max.   :48461   Max.   :6705.0   Max.   :9746.0   Max.   :484.52  \n     TV_PR         LLPHONE_PR       MPHONE_PR       COMPUTER_PR    \n Min.   :116.0   Min.   :  2.78   Min.   : 36.42   Min.   : 3.278  \n 1st Qu.:450.2   1st Qu.: 22.84   1st Qu.:190.14   1st Qu.:11.832  \n Median :517.2   Median : 37.59   Median :305.27   Median :18.970  \n Mean   :509.5   Mean   : 51.09   Mean   :314.05   Mean   :24.393  \n 3rd Qu.:606.4   3rd Qu.: 69.72   3rd Qu.:428.43   3rd Qu.:29.897  \n Max.   :842.5   Max.   :181.49   Max.   :735.43   Max.   :92.402  \n  INTERNET_PR     \n Min.   :  1.041  \n 1st Qu.:  8.617  \n Median : 22.829  \n Mean   : 30.644  \n 3rd Qu.: 41.281  \n Max.   :117.985  \n\n\n\nPlotting the scaled ICT information in the Shan region\n\n\nReveal Code\nradio &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ntv &lt;- ggplot(data=ict_derived, \n             aes(x= `TV_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nllphone &lt;- ggplot(data=ict_derived, \n             aes(x= `LLPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nmphone &lt;- ggplot(data=ict_derived, \n             aes(x= `MPHONE_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ncomputer &lt;- ggplot(data=ict_derived, \n             aes(x= `COMPUTER_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\ninternet &lt;- ggplot(data=ict_derived, \n             aes(x= `INTERNET_PR`)) +\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\")\n\nggarrange(radio, tv, llphone, mphone, computer, internet, \n          ncol = 3, \n          nrow = 2)\n\n\n\n\n\n\n\n\n\n\n\nJoining the geospatial and aspatial data\n\n\nReveal Code\nshan_sf &lt;- left_join(shan_sf, \n                     ict_derived, by=c(\"TS_PCODE\"=\"TS_PCODE\"))\n  \nwrite_rds(shan_sf, \"Data/RDS/shan_sf.rds\")\n\n\n\n\nReveal Code\nshan_sf &lt;- read_rds(\"Data/RDS/shan_sf.rds\")\n\n\n\n\nVisualising the Shan ICT data\n\n\nReveal Code\nTT_HOUSEHOLDS.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"TT_HOUSEHOLDS\",\n          n = 5,\n          style = \"jenks\", \n          title = \"Total households\") + \n  tm_borders(alpha = 0.5) \n\nRADIO.map &lt;- tm_shape(shan_sf) + \n  tm_fill(col = \"RADIO\",\n          n = 5,\n          style = \"jenks\",\n          title = \"Number Radio \") + \n  tm_borders(alpha = 0.5) \n\ntmap_arrange(TT_HOUSEHOLDS.map, RADIO.map,\n             asp=NA, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\ntm_shape(shan_sf) +\n    tm_polygons(c(\"TT_HOUSEHOLDS\", \"RADIO_PR\"),\n                style=\"jenks\") +\n    tm_facets(sync = TRUE, ncol = 2) +\n  tm_legend(legend.position = c(\"right\", \"bottom\"))+\n  tm_layout(outer.margins=0, asp=0)\n\n\n\n\n\n\n\n\n\n\n\nUsing the corrplot library to visualise the correlation matrix of the Shan ICT variables\n\n\nReveal Code\ncluster_vars.cor = cor(ict_derived[,12:17])\ncorrplot.mixed(cluster_vars.cor,\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\n\n\nExtracting the clustering variables\n\n\nReveal Code\ncluster_vars &lt;- shan_sf %&gt;%\n  st_drop_geometry() %&gt;%\n  select(\"TS.x\", \"RADIO_PR\", \"TV_PR\", \"LLPHONE_PR\", \"MPHONE_PR\", \"COMPUTER_PR\")\n\nhead(cluster_vars, 10)\n\n\n        TS.x RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\n1    Mongmit 286.1852 554.1313   35.30618  260.6944    12.15939\n2    Pindaya 417.4647 505.1300   19.83584  162.3917    12.88190\n3    Ywangan 484.5215 260.5734   11.93591  120.2856     4.41465\n4   Pinlaung 231.6499 541.7189   28.54454  249.4903    13.76255\n5     Mabein 449.4903 708.6423   72.75255  392.6089    16.45042\n6      Kalaw 280.7624 611.6204   42.06478  408.7951    29.63160\n7      Pekon 318.6118 535.8494   39.83270  214.8476    18.97032\n8   Lawksawk 387.1017 630.0035   31.51366  320.5686    21.76677\n9  Nawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\n10   Kyaukme 210.9548 601.1773   39.58267  372.4930    30.94709\n\n\n\n\nUsing Township names as row indexes of the cluster variable dataframe\n\n\nReveal Code\nrow.names(cluster_vars) &lt;- cluster_vars$\"TS.x\"\n\nshan_ict &lt;- select(cluster_vars, c(2:6))\n\nhead(shan_ict, 10)\n\n\n          RADIO_PR    TV_PR LLPHONE_PR MPHONE_PR COMPUTER_PR\nMongmit   286.1852 554.1313   35.30618  260.6944    12.15939\nPindaya   417.4647 505.1300   19.83584  162.3917    12.88190\nYwangan   484.5215 260.5734   11.93591  120.2856     4.41465\nPinlaung  231.6499 541.7189   28.54454  249.4903    13.76255\nMabein    449.4903 708.6423   72.75255  392.6089    16.45042\nKalaw     280.7624 611.6204   42.06478  408.7951    29.63160\nPekon     318.6118 535.8494   39.83270  214.8476    18.97032\nLawksawk  387.1017 630.0035   31.51366  320.5686    21.76677\nNawnghkio 349.3359 547.9456   38.44960  323.0201    15.76465\nKyaukme   210.9548 601.1773   39.58267  372.4930    30.94709\n\n\n\n\n\nData Standardisation\n\nUsing Min-Max standardisation method to standardise the Shan ICT data\n\n\nReveal Code\nshan_ict.std &lt;- normalize(shan_ict)\nsummary(shan_ict.std)\n\n\n    RADIO_PR          TV_PR          LLPHONE_PR       MPHONE_PR     \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.2544   1st Qu.:0.4600   1st Qu.:0.1123   1st Qu.:0.2199  \n Median :0.4097   Median :0.5523   Median :0.1948   Median :0.3846  \n Mean   :0.4199   Mean   :0.5416   Mean   :0.2703   Mean   :0.3972  \n 3rd Qu.:0.5330   3rd Qu.:0.6750   3rd Qu.:0.3746   3rd Qu.:0.5608  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n  COMPUTER_PR     \n Min.   :0.00000  \n 1st Qu.:0.09598  \n Median :0.17607  \n Mean   :0.23692  \n 3rd Qu.:0.29868  \n Max.   :1.00000  \n\n\n\n\nUsing Z-score standardisation method to standardise the Shan ICT data\n\n\nReveal Code\nshan_ict.z &lt;- scale(shan_ict)\ndescribe(shan_ict.z)\n\n\n            vars  n mean sd median trimmed  mad   min  max range  skew kurtosis\nRADIO_PR       1 55    0  1  -0.04   -0.06 0.94 -1.85 2.55  4.40  0.48    -0.27\nTV_PR          2 55    0  1   0.05    0.04 0.78 -2.47 2.09  4.56 -0.38    -0.23\nLLPHONE_PR     3 55    0  1  -0.33   -0.15 0.68 -1.19 3.20  4.39  1.37     1.49\nMPHONE_PR      4 55    0  1  -0.05   -0.06 1.01 -1.58 2.40  3.98  0.48    -0.34\nCOMPUTER_PR    5 55    0  1  -0.26   -0.18 0.64 -1.03 3.31  4.34  1.80     2.96\n              se\nRADIO_PR    0.13\nTV_PR       0.13\nLLPHONE_PR  0.13\nMPHONE_PR   0.13\nCOMPUTER_PR 0.13\n\n\n\n\nVisualising the effects of standardisation on the Shan ICT data\n\n\nReveal Code\nr &lt;- ggplot(data=ict_derived, \n             aes(x= `RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nshan_ict_s_df &lt;- as.data.frame(shan_ict.std)\ns &lt;- ggplot(data=shan_ict_s_df, \n       aes(x=`RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nshan_ict_z_df &lt;- as.data.frame(shan_ict.z)\nz &lt;- ggplot(data=shan_ict_z_df, \n       aes(x=`RADIO_PR`)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(r, s, z,\n          ncol = 3,\n          nrow = 1)"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_07/In-Class_Exercise_07.html#conducting-clustering-analysis-on-the-shan-ict-data",
    "href": "In-Class_Exercise/In-Class_Exercise_07/In-Class_Exercise_07.html#conducting-clustering-analysis-on-the-shan-ict-data",
    "title": "In-Class Exercise 7: Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "Conducting clustering analysis on the Shan ICT data",
    "text": "Conducting clustering analysis on the Shan ICT data\n\nComputing the proximity distance matrix\n\n\nReveal Code\nproxmat &lt;- dist(shan_ict, method = 'euclidean')\n\nproxmat\n\n\n             Mongmit   Pindaya   Ywangan  Pinlaung    Mabein     Kalaw\nPindaya    171.86828                                                  \nYwangan    381.88259 257.31610                                        \nPinlaung    57.46286 208.63519 400.05492                              \nMabein     263.37099 313.45776 529.14689 312.66966                    \nKalaw      160.05997 302.51785 499.53297 181.96406 198.14085          \nPekon       59.61977 117.91580 336.50410  94.61225 282.26877 211.91531\nLawksawk   140.11550 204.32952 432.16535 192.57320 130.36525 140.01101\nNawnghkio   89.07103 180.64047 377.87702 139.27495 204.63154 127.74787\nKyaukme    144.02475 311.01487 505.89191 139.67966 264.88283  79.42225\nMuse       563.01629 704.11252 899.44137 571.58335 453.27410 412.46033\nLaihka     141.87227 298.61288 491.83321 101.10150 345.00222 197.34633\nMongnai    115.86190 258.49346 422.71934  64.52387 358.86053 200.34668\nMawkmai    434.92968 437.99577 397.03752 398.11227 693.24602 562.59200\nKutkai      97.61092 212.81775 360.11861  78.07733 340.55064 204.93018\nMongton    192.67961 283.35574 361.23257 163.42143 425.16902 267.87522\nMongyai    256.72744 287.41816 333.12853 220.56339 516.40426 386.74701\nMongkaing  503.61965 481.71125 364.98429 476.29056 747.17454 625.24500\nLashio     251.29457 398.98167 602.17475 262.51735 231.28227 106.69059\nMongpan    193.32063 335.72896 483.68125 192.78316 301.52942 114.69105\nMatman     401.25041 354.39039 255.22031 382.40610 637.53975 537.63884\nTachileik  529.63213 635.51774 807.44220 555.01039 365.32538 373.64459\nNarphan    406.15714 474.50209 452.95769 371.26895 630.34312 463.53759\nMongkhet   349.45980 391.74783 408.97731 305.86058 610.30557 465.52013\nHsipaw     118.18050 245.98884 388.63147  76.55260 366.42787 212.36711\nMonghsat   214.20854 314.71506 432.98028 160.44703 470.48135 317.96188\nMongmao    242.54541 402.21719 542.85957 217.58854 384.91867 195.18913\nNansang    104.91839 275.44246 472.77637  85.49572 287.92364 124.30500\nLaukkaing  568.27732 726.85355 908.82520 563.81750 520.67373 427.77791\nPangsang   272.67383 428.24958 556.82263 244.47146 418.54016 224.03998\nNamtu      179.62251 225.40822 444.66868 170.04533 366.16094 307.27427\nMonghpyak  177.76325 221.30579 367.44835 222.20020 212.69450 167.08436\nKonkyan    403.39082 500.86933 528.12533 365.44693 613.51206 444.75859\nMongping   265.12574 310.64850 337.94020 229.75261 518.16310 375.64739\nHopong     136.93111 223.06050 352.85844  98.14855 398.00917 264.16294\nNyaungshwe  99.38590 216.52463 407.11649 138.12050 210.21337  95.66782\nHsihseng   131.49728 172.00796 342.91035 111.61846 381.20187 287.11074\nMongla     384.30076 549.42389 728.16301 372.59678 406.09124 260.26411\nHseni      189.37188 337.98982 534.44679 204.47572 213.61240  38.52842\nKunlong    224.12169 355.47066 531.63089 194.76257 396.61508 273.01375\nHopang     281.05362 443.26362 596.19312 265.96924 368.55167 185.14704\nNamhkan    386.02794 543.81859 714.43173 382.78835 379.56035 246.39577\nKengtung   246.45691 385.68322 573.23173 263.48638 219.47071  88.29335\nLangkho    164.26299 323.28133 507.78892 168.44228 253.84371  67.19580\nMonghsu    109.15790 198.35391 340.42789  80.86834 367.19820 237.34578\nTaunggyi   399.84278 503.75471 697.98323 429.54386 226.24011 252.26066\nPangwaun   381.51246 512.13162 580.13146 356.37963 523.44632 338.35194\nKyethi     202.92551 175.54012 287.29358 189.47065 442.07679 360.17247\nLoilen     145.48666 293.61143 469.51621  91.56527 375.06406 217.19877\nManton     430.64070 402.42888 306.16379 405.83081 674.01120 560.16577\nMongyang   309.51302 475.93982 630.71590 286.03834 411.88352 233.56349\nKunhing    173.50424 318.23811 449.67218 141.58836 375.82140 197.63683\nMongyawng  214.21738 332.92193 570.56521 235.55497 193.49994 173.43078\nTangyan    195.92520 208.43740 324.77002 169.50567 448.59948 348.06617\nNamhsan    237.78494 228.41073 286.16305 214.33352 488.33873 385.88676\n               Pekon  Lawksawk Nawnghkio   Kyaukme      Muse    Laihka\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk   157.51129                                                  \nNawnghkio  113.15370  90.82891                                        \nKyaukme    202.12206 186.29066 157.04230                              \nMuse       614.56144 510.13288 533.68806 434.75768                    \nLaihka     182.23667 246.74469 211.88187 128.24979 526.65211          \nMongnai    151.60031 241.71260 182.21245 142.45669 571.97975 100.53457\nMawkmai    416.00669 567.52693 495.15047 512.02846 926.93007 429.96554\nKutkai     114.98048 224.64646 147.44053 170.93318 592.90743 144.67198\nMongton    208.14888 311.07742 225.81118 229.28509 634.71074 212.07320\nMongyai    242.52301 391.26989 319.57938 339.27780 763.91399 264.13364\nMongkaing  480.23965 625.18712 546.69447 586.05094 995.66496 522.96309\nLashio     303.80011 220.75270 230.55346 129.95255 313.15288 238.64533\nMongpan    243.30037 228.54223 172.84425 110.37831 447.49969 210.76951\nMatman     368.25761 515.39711 444.05061 505.52285 929.11283 443.25453\nTachileik  573.39528 441.82621 470.45533 429.15493 221.19950 549.08985\nNarphan    416.84901 523.69580 435.59661 420.30003 770.40234 392.32592\nMongkhet   342.08722 487.41102 414.10280 409.03553 816.44931 324.97428\nHsipaw     145.37542 249.35081 176.09570 163.95741 591.03355 128.42987\nMonghsat   225.64279 352.31496 289.83220 253.25370 663.76026 158.93517\nMongmao    293.70625 314.64777 257.76465 146.09228 451.82530 185.99082\nNansang    160.37607 188.78869 151.13185  60.32773 489.35308  78.78999\nLaukkaing  624.82399 548.83928 552.65554 428.74978 149.26996 507.39700\nPangsang   321.81214 345.91486 287.10769 175.35273 460.24292 214.19291\nNamtu      165.02707 260.95300 257.52713 270.87277 659.16927 185.86794\nMonghpyak  190.93173 142.31691  93.03711 217.64419 539.43485 293.22640\nKonkyan    421.48797 520.31264 439.34272 393.79911 704.86973 351.75354\nMongping   259.68288 396.47081 316.14719 330.28984 744.44948 272.82761\nHopong     138.86577 274.91604 204.88286 218.84211 648.68011 157.48857\nNyaungshwe 139.31874 104.17830  43.26545 126.50414 505.88581 201.71653\nHsihseng   105.30573 257.11202 209.88026 250.27059 677.66886 175.89761\nMongla     441.20998 393.18472 381.40808 241.58966 256.80556 315.93218\nHseni      243.98001 171.50398 164.05304  81.20593 381.30567 204.49010\nKunlong    249.36301 318.30406 285.04608 215.63037 547.24297 122.68682\nHopang     336.38582 321.16462 279.84188 154.91633 377.44407 230.78652\nNamhkan    442.77120 379.41126 367.33575 247.81990 238.67060 342.43665\nKengtung   297.67761 209.38215 208.29647 136.23356 330.08211 258.23950\nLangkho    219.21623 190.30257 156.51662  51.67279 413.64173 160.94435\nMonghsu    113.84636 242.04063 170.09168 200.77712 633.21624 163.28926\nTaunggyi   440.66133 304.96838 344.79200 312.60547 250.81471 425.36916\nPangwaun   423.81347 453.02765 381.67478 308.31407 541.97887 351.78203\nKyethi     162.43575 317.74604 267.21607 328.14177 757.16745 255.83275\nLoilen     181.94596 265.29318 219.26405 146.92675 560.43400  59.69478\nManton     403.82131 551.13000 475.77296 522.86003 941.49778 458.30232\nMongyang   363.58788 363.37684 323.32123 188.59489 389.59919 229.71502\nKunhing    213.46379 278.68953 206.15773 145.00266 533.00162 142.03682\nMongyawng  248.43910 179.07229 220.61209 181.55295 422.37358 211.99976\nTangyan    167.79937 323.14701 269.07880 306.78359 736.93741 224.29176\nNamhsan    207.16559 362.84062 299.74967 347.85944 778.52971 273.79672\n             Mongnai   Mawkmai    Kutkai   Mongton   Mongyai Mongkaing\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai    374.50873                                                  \nKutkai      91.15307 364.95519                                        \nMongton    131.67061 313.35220 107.06341                              \nMongyai    203.23607 178.70499 188.94166 159.79790                    \nMongkaing  456.00842 133.29995 428.96133 365.50032 262.84016          \nLashio     270.86983 638.60773 289.82513 347.11584 466.36472 708.65819\nMongpan    178.09554 509.99632 185.18173 200.31803 346.39710 563.56780\nMatman     376.33870 147.83545 340.86349 303.04574 186.95158 135.51424\nTachileik  563.95232 919.38755 568.99109 608.76740 750.29555 967.14087\nNarphan    329.31700 273.75350 314.27683 215.97925 248.82845 285.65085\nMongkhet   275.76855 115.58388 273.91673 223.22828 104.98924 222.60577\nHsipaw      52.68195 351.34601  51.46282  90.69766 177.33790 423.77868\nMonghsat   125.25968 275.09705 154.32012 150.98053 127.35225 375.60376\nMongmao    188.29603 485.52853 204.69232 206.57001 335.61300 552.31959\nNansang     92.79567 462.41938 130.04549 199.58124 288.55962 542.16609\nLaukkaing  551.56800 882.51110 580.38112 604.66190 732.68347 954.11795\nPangsang   204.25746 484.14757 228.33583 210.77938 343.30638 548.40662\nNamtu      209.35473 427.95451 225.28268 308.71751 278.02761 525.04057\nMonghpyak  253.26470 536.71695 206.61627 258.04282 370.01575 568.21089\nKonkyan    328.82831 339.01411 310.60810 248.25265 287.87384 380.92091\nMongping   202.99615 194.31049 182.75266 119.86993  65.38727 257.18572\nHopong      91.53795 302.84362  73.45899 106.21031 124.62791 379.37916\nNyaungshwe 169.63695 502.99026 152.15482 219.72196 327.13541 557.32112\nHsihseng   142.36728 329.29477 128.21054 194.64317 162.27126 411.59788\nMongla     354.10985 686.88950 388.40984 411.06668 535.28615 761.48327\nHseni      216.81639 582.53670 229.37894 286.75945 408.23212 648.04408\nKunlong    202.92529 446.53763 204.54010 270.02165 299.36066 539.91284\nHopang     243.00945 561.24281 263.31986 273.50305 408.73288 626.17673\nNamhkan    370.05669 706.47792 392.48568 414.53594 550.62819 771.39688\nKengtung   272.28711 632.54638 279.19573 329.38387 460.39706 692.74693\nLangkho    174.67678 531.08019 180.51419 236.70878 358.95672 597.42714\nMonghsu     84.11238 332.07962  62.60859 107.04894 154.86049 400.71816\nTaunggyi   448.55282 810.74692 450.33382 508.40925 635.94105 866.21117\nPangwaun   312.13429 500.68857 321.80465 257.50434 394.07696 536.95736\nKyethi     210.50453 278.85535 184.23422 222.52947 137.79420 352.06533\nLoilen      58.41263 388.73386 131.56529 176.16001 224.79239 482.18190\nManton     391.54062 109.08779 361.82684 310.20581 195.59882  81.75337\nMongyang   260.39387 558.83162 285.33223 295.60023 414.31237 631.91325\nKunhing    110.55197 398.43973 108.84990 114.03609 238.99570 465.03971\nMongyawng  275.77546 620.04321 281.03383 375.22688 445.78964 700.98284\nTangyan    180.37471 262.66006 166.61820 198.88460 109.08506 348.56123\nNamhsan    218.10003 215.19289 191.32762 196.76188  77.35900 288.66231\n              Lashio   Mongpan    Matman Tachileik   Narphan  Mongkhet\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan    172.33279                                                  \nMatman     628.11049 494.81014                                        \nTachileik  311.95286 411.03849 890.12935                              \nNarphan    525.63854 371.13393 312.05193 760.29566                    \nMongkhet   534.44463 412.17123 203.02855 820.50164 217.28718          \nHsipaw     290.86435 179.52054 344.45451 576.18780 295.40170 253.80950\nMonghsat   377.86793 283.30992 313.59911 677.09508 278.21548 167.98445\nMongmao    214.23677 131.59966 501.59903 472.95568 331.42618 375.35820\nNansang    184.47950 144.77393 458.06573 486.77266 398.13308 360.99219\nLaukkaing  334.65738 435.58047 903.72094 325.06329 708.82887 769.06406\nPangsang   236.72516 140.23910 506.29940 481.31907 316.30314 375.58139\nNamtu      365.88437 352.91394 416.65397 659.56458 494.36143 355.99713\nMonghpyak  262.09281 187.85699 470.46845 444.04411 448.40651 462.63265\nKonkyan    485.51312 365.87588 392.40306 730.92980 158.82353 254.24424\nMongping   454.52548 318.47482 201.65224 727.08969 188.64567 113.80917\nHopong     345.31042 239.43845 291.84351 632.45718 294.40441 212.99485\nNyaungshwe 201.58191 137.29734 460.91883 445.81335 427.94086 417.08639\nHsihseng   369.00833 295.87811 304.02806 658.87060 377.52977 256.70338\nMongla     179.95877 253.20001 708.17595 347.33155 531.46949 574.40292\nHseni       79.41836 120.66550 564.64051 354.90063 474.12297 481.88406\nKunlong    295.23103 288.03320 468.27436 595.70536 413.07823 341.68641\nHopang     170.63913 135.62913 573.55355 403.82035 397.85908 451.51070\nNamhkan    173.27153 240.34131 715.42102 295.91660 536.85519 596.19944\nKengtung    59.85893 142.21554 613.01033 295.90429 505.40025 531.35998\nLangkho    115.18145  94.98486 518.86151 402.33622 420.65204 428.08061\nMonghsu    325.71557 216.25326 308.13805 605.02113 311.92379 247.73318\nTaunggyi   195.14541 319.81385 778.45810 150.84117 684.20905 712.80752\nPangwaun   362.45608 232.52209 523.43600 540.60474 264.64997 407.02947\nKyethi     447.10266 358.89620 233.83079 728.87329 374.90376 233.25039\nLoilen     268.92310 207.25000 406.56282 573.75476 354.79137 284.76895\nManton     646.66493 507.96808  59.52318 910.23039 280.26395 181.33894\nMongyang   209.33700 194.93467 585.61776 448.79027 401.39475 445.40621\nKunhing    255.10832 137.85278 403.66587 532.26397 281.62645 292.49814\nMongyawng  172.70139 275.15989 601.80824 432.10118 572.76394 522.91815\nTangyan    429.84475 340.39128 242.78233 719.84066 348.84991 201.49393\nNamhsan    472.04024 364.77086 180.09747 754.03913 316.54695 170.90848\n              Hsipaw  Monghsat   Mongmao   Nansang Laukkaing  Pangsang\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat   121.78922                                                  \nMongmao    185.99483 247.17708                                        \nNansang    120.24428 201.92690 164.99494                              \nLaukkaing  569.06099 626.44910 404.00848 480.60074                    \nPangsang   205.04337 256.37933  57.60801 193.36162 408.04016          \nNamtu      229.44658 231.78673 365.03882 217.61884 664.06286 392.97391\nMonghpyak  237.67919 356.84917 291.88846 227.52638 565.84279 315.11651\nKonkyan    296.74316 268.25060 281.87425 374.70456 635.92043 274.81900\nMongping   168.92101 140.95392 305.57166 287.36626 708.13447 308.33123\nHopong      62.86179 100.45714 244.16253 167.66291 628.48557 261.51075\nNyaungshwe 169.92664 286.37238 230.45003 131.18943 520.24345 257.77823\nHsihseng   136.54610 153.49551 311.98001 193.53779 670.74564 335.52974\nMongla     373.47509 429.00536 216.24705 289.45119 202.55831 217.88123\nHseni      231.48538 331.22632 184.67099 136.45492 391.74585 214.66375\nKunlong    205.10051 202.31862 224.43391 183.01388 521.88657 258.49342\nHopang     248.72536 317.64824  78.29342 196.47091 331.67199  92.57672\nNamhkan    382.79302 455.10875 223.32205 302.89487 196.46063 231.38484\nKengtung   284.08582 383.72138 207.58055 193.67980 351.48520 229.85484\nLangkho    183.05109 279.52329 134.50170  99.39859 410.41270 167.65920\nMonghsu     58.55724 137.24737 242.43599 153.59962 619.01766 260.52971\nTaunggyi   462.31183 562.88102 387.33906 365.04897 345.98041 405.59730\nPangwaun   298.12447 343.53898 187.40057 326.12960 470.63605 157.48757\nKyethi     195.17677 190.50609 377.89657 273.02385 749.99415 396.89963\nLoilen      98.04789 118.65144 190.26490  94.23028 535.57527 207.94433\nManton     359.60008 317.15603 503.79786 476.55544 907.38406 504.75214\nMongyang   267.10497 312.64797  91.06281 218.49285 326.19219 108.37735\nKunhing     90.77517 165.38834 103.91040 128.20940 500.41640 123.18870\nMongyawng  294.70967 364.40429 296.40789 191.11990 454.80044 336.16703\nTangyan    167.69794 144.59626 347.14183 249.70235 722.40954 364.76893\nNamhsan    194.47928 169.56962 371.71448 294.16284 760.45960 385.65526\n               Namtu Monghpyak   Konkyan  Mongping    Hopong Nyaungshwe\nPindaya                                                                \nYwangan                                                                \nPinlaung                                                               \nMabein                                                                 \nKalaw                                                                  \nPekon                                                                  \nLawksawk                                                               \nNawnghkio                                                              \nKyaukme                                                                \nMuse                                                                   \nLaihka                                                                 \nMongnai                                                                \nMawkmai                                                                \nKutkai                                                                 \nMongton                                                                \nMongyai                                                                \nMongkaing                                                              \nLashio                                                                 \nMongpan                                                                \nMatman                                                                 \nTachileik                                                              \nNarphan                                                                \nMongkhet                                                               \nHsipaw                                                                 \nMonghsat                                                               \nMongmao                                                                \nNansang                                                                \nLaukkaing                                                              \nPangsang                                                               \nNamtu                                                                  \nMonghpyak  346.57799                                                   \nKonkyan    478.37690 463.39594                                         \nMongping   321.66441 354.76537 242.02901                               \nHopong     206.82668 267.95563 304.49287 134.00139                     \nNyaungshwe 271.41464 103.97300 432.35040 319.32583 209.32532           \nHsihseng   131.89940 285.37627 383.49700 199.64389  91.65458  225.80242\nMongla     483.49434 408.03397 468.09747 512.61580 432.31105  347.60273\nHseni      327.41448 200.26876 448.84563 395.58453 286.41193  130.86310\nKunlong    233.60474 357.44661 329.11433 309.05385 219.06817  285.13095\nHopang     408.24516 304.26577 348.18522 379.27212 309.77356  247.19891\nNamhkan    506.32466 379.50202 481.59596 523.74815 444.13246  333.32428\nKengtung   385.33554 221.47613 474.82621 442.80821 340.47382  177.75714\nLangkho    305.03473 200.27496 386.95022 343.96455 239.63685  128.26577\nMonghsu    209.64684 232.17823 331.72187 158.90478  43.40665  173.82799\nTaunggyi   518.72748 334.17439 650.56905 621.53039 513.76415  325.09619\nPangwaun   517.03554 381.95144 263.97576 340.37881 346.00673  352.92324\nKyethi     186.90932 328.16234 400.10989 187.43974 136.49038  288.06872\nLoilen     194.24075 296.99681 334.19820 231.99959 124.74445  206.40432\nManton     448.58230 502.20840 366.66876 200.48082 310.58885  488.79874\nMongyang   413.26052 358.17599 329.39338 387.80686 323.35704  294.29500\nKunhing    296.43996 250.74435 253.74202 212.59619 145.15617  189.97131\nMongyawng  262.24331 285.56475 522.38580 455.59190 326.59925  218.12104\nTangyan    178.69483 335.26416 367.46064 161.67411 106.82328  284.14692\nNamhsan    240.95555 352.70492 352.20115 130.23777 132.70541  315.91750\n            Hsihseng    Mongla     Hseni   Kunlong    Hopang   Namhkan\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla     478.66210                                                  \nHseni      312.74375 226.82048                                        \nKunlong    231.85967 346.46200 276.19175                              \nHopang     370.01334 147.02444 162.80878 271.34451                    \nNamhkan    492.09476  77.21355 212.11323 375.73885 146.18632          \nKengtung   370.72441 202.45004  66.12817 317.14187 164.29921 175.63015\nLangkho    276.27441 229.01675  66.66133 224.52741 134.24847 224.40029\nMonghsu     97.82470 424.51868 262.28462 239.89665 301.84458 431.32637\nTaunggyi   528.14240 297.09863 238.19389 471.29032 329.95252 257.29147\nPangwaun   433.06326 319.18643 330.70182 392.45403 206.98364 310.44067\nKyethi      84.04049 556.02500 388.33498 298.55859 440.48114 567.86202\nLoilen     158.84853 338.67408 227.10984 166.53599 242.89326 364.90647\nManton     334.87758 712.51416 584.63341 479.76855 577.52046 721.86149\nMongyang   382.59743 146.66661 210.19929 247.22785  69.25859 167.72448\nKunhing    220.15490 306.47566 206.47448 193.77551 172.96164 314.92119\nMongyawng  309.51462 315.57550 173.86004 240.39800 290.51360 321.21112\nTangyan     70.27241 526.80849 373.07575 268.07983 412.22167 542.64078\nNamhsan    125.74240 564.02740 411.96125 310.40560 440.51555 576.42717\n            Kengtung   Langkho   Monghsu  Taunggyi  Pangwaun    Kyethi\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla                                                                \nHseni                                                                 \nKunlong                                                               \nHopang                                                                \nNamhkan                                                               \nKengtung                                                              \nLangkho    107.16213                                                  \nMonghsu    316.91914 221.84918                                        \nTaunggyi   186.28225 288.27478 486.91951                              \nPangwaun   337.48335 295.38434 343.38498 497.61245                    \nKyethi     444.26274 350.91512 146.61572 599.57407 476.62610          \nLoilen     282.22935 184.10672 131.55208 455.91617 331.69981 232.32965\nManton     631.99123 535.95620 330.76503 803.08034 510.79265 272.03299\nMongyang   217.08047 175.35413 323.95988 374.58247 225.25026 453.86726\nKunhing    245.95083 146.38284 146.78891 429.98509 229.09986 278.95182\nMongyawng  203.87199 186.11584 312.85089 287.73864 475.33116 387.71518\nTangyan    429.95076 332.02048 127.42203 592.65262 447.05580  47.79331\nNamhsan    466.20497 368.20978 153.22576 631.49232 448.58030  68.67929\n              Loilen    Manton  Mongyang   Kunhing Mongyawng   Tangyan\nPindaya                                                               \nYwangan                                                               \nPinlaung                                                              \nMabein                                                                \nKalaw                                                                 \nPekon                                                                 \nLawksawk                                                              \nNawnghkio                                                             \nKyaukme                                                               \nMuse                                                                  \nLaihka                                                                \nMongnai                                                               \nMawkmai                                                               \nKutkai                                                                \nMongton                                                               \nMongyai                                                               \nMongkaing                                                             \nLashio                                                                \nMongpan                                                               \nMatman                                                                \nTachileik                                                             \nNarphan                                                               \nMongkhet                                                              \nHsipaw                                                                \nMonghsat                                                              \nMongmao                                                               \nNansang                                                               \nLaukkaing                                                             \nPangsang                                                              \nNamtu                                                                 \nMonghpyak                                                             \nKonkyan                                                               \nMongping                                                              \nHopong                                                                \nNyaungshwe                                                            \nHsihseng                                                              \nMongla                                                                \nHseni                                                                 \nKunlong                                                               \nHopang                                                                \nNamhkan                                                               \nKengtung                                                              \nLangkho                                                               \nMonghsu                                                               \nTaunggyi                                                              \nPangwaun                                                              \nKyethi                                                                \nLoilen                                                                \nManton     419.06087                                                  \nMongyang   246.76592 585.70558                                        \nKunhing    130.39336 410.49230 188.89405                              \nMongyawng  261.75211 629.43339 304.21734 295.35984                    \nTangyan    196.60826 271.82672 421.06366 249.74161 377.52279          \nNamhsan    242.15271 210.48485 450.97869 270.79121 430.02019  63.67613\n\n\n\n\nComputing the hierachical clusters\n\n\nReveal Code\nhclust_ward &lt;- hclust(proxmat, method = 'ward.D')\n\nplot(hclust_ward, cex = 0.6)\n\n\n\n\n\n\n\n\n\n\n\nInvestigating the optimal clustering algorithm\n\n\nReveal Code\nm &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(m) &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\n\nac &lt;- function(x) {\n  agnes(shan_ict, method = x)$ac\n}\n\nmap_dbl(m, ac)\n\n\n  average    single  complete      ward \n0.8131144 0.6628705 0.8950702 0.9427730 \n\n\n\n\nDetermining the local optimal number of clusters using Gap statistics\n\n\nReveal Code\nset.seed(12345)\n\ngap_stat &lt;- clusGap(shan_ict, \n                    FUN = hcut, \n                    nstart = 25, \n                    K.max = 10, \n                    B = 50)\n# Print the result\nprint(gap_stat, method = \"firstmax\")\n\n\nClustering Gap statistic [\"clusGap\"] from call:\nclusGap(x = shan_ict, FUNcluster = hcut, K.max = 10, B = 50, nstart = 25)\nB=50 simulated reference sets, k = 1..10; spaceH0=\"scaledPCA\"\n --&gt; Number of clusters (method 'firstmax'): 1\n          logW   E.logW       gap     SE.sim\n [1,] 8.407129 8.680794 0.2736651 0.04460994\n [2,] 8.130029 8.350712 0.2206824 0.03880130\n [3,] 7.992265 8.202550 0.2102844 0.03362652\n [4,] 7.862224 8.080655 0.2184311 0.03784781\n [5,] 7.756461 7.978022 0.2215615 0.03897071\n [6,] 7.665594 7.887777 0.2221833 0.03973087\n [7,] 7.590919 7.806333 0.2154145 0.04054939\n [8,] 7.526680 7.731619 0.2049390 0.04198644\n [9,] 7.458024 7.660795 0.2027705 0.04421874\n[10,] 7.377412 7.593858 0.2164465 0.04540947\n\n\n\n\nVisualising the Gap statistics trend\n\n\nReveal Code\nfviz_gap_stat(gap_stat)\n\n\n\n\n\n\n\n\n\n\n\nIntepreting the selected optimum hierachical cluster dendogram\n\n\nReveal Code\nplot(hclust_ward, cex = 0.6)\nrect.hclust(hclust_ward, \n            k = 6, \n            border = 2:5)"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_07/In-Class_Exercise_07.html#visually-driven-hierarchical-clustering-analysis",
    "href": "In-Class_Exercise/In-Class_Exercise_07/In-Class_Exercise_07.html#visually-driven-hierarchical-clustering-analysis",
    "title": "In-Class Exercise 7: Geographical Segmentation with Spatially Constrained Clustering Techniques",
    "section": "Visually-driven hierarchical clustering analysis",
    "text": "Visually-driven hierarchical clustering analysis\n\n\nReveal Code\nshan_ict_mat &lt;- data.matrix(shan_ict)\n\n\n\n\nReveal Code\nheatmaply(normalize(shan_ict_mat),\n          Colv=NA,\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\",\n          seriate = \"OLO\",\n          colors = Blues,\n          k_row = 6,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"Geographic Segmentation of Shan State by ICT indicators\",\n          xlab = \"ICT Indicators\",\n          ylab = \"Townships of Shan State\"\n          )\n\n\n\n\n\n\n\nAssigning each row in the Shan ICT dataset to the prior determined cluster\n\n\nReveal Code\ngroups &lt;- as.factor(cutree(hclust_ward, k=6))\n\nshan_sf_cluster &lt;- cbind(shan_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER`=`as.matrix.groups.`)\n\n\n\n\nVisualising the assigned hierachical clusters in the Shan region\n\n\nReveal Code\nqtm(shan_sf_cluster, \"CLUSTER\")\n\n\n\n\n\n\n\n\n\n\n\nDeriving the contiguity matrix of the Shan geographical region\n\n\nReveal Code\nshan.nb &lt;- st_contiguity(shan_sf)\nglimpse(shan.nb)\n\n\nList of 55\n $ : int [1:4] 5 10 50 55\n $ : int [1:3] 3 6 8\n $ : int [1:2] 2 8\n $ : int [1:3] 6 7 36\n $ : int [1:2] 1 50\n $ : int [1:5] 2 4 8 36 46\n $ : int [1:2] 4 36\n $ : int [1:9] 2 3 6 9 10 18 25 35 46\n $ : int [1:2] 8 10\n $ : int [1:5] 1 8 9 25 55\n $ : int [1:3] 15 33 42\n $ : int [1:5] 18 28 35 48 49\n $ : int [1:7] 14 16 20 28 34 44 52\n $ : int [1:5] 13 28 37 44 49\n $ : int [1:7] 11 29 33 39 40 42 50\n $ : int [1:5] 13 20 26 34 44\n $ : int [1:4] 19 25 48 54\n $ : int [1:5] 8 12 25 35 48\n $ : int [1:7] 17 25 31 39 41 50 54\n $ : int [1:3] 13 16 44\n $ : int [1:6] 24 30 34 45 51 54\n $ : int [1:3] 26 32 53\n $ : int [1:3] 27 30 47\n $ : int [1:5] 21 34 38 43 51\n $ : int [1:8] 8 10 17 18 19 31 48 55\n $ : int [1:5] 16 22 32 34 43\n $ : int [1:5] 23 30 41 47 54\n $ : int [1:6] 12 13 14 48 49 52\n $ : int [1:4] 15 33 40 41\n $ : int [1:5] 21 23 27 51 54\n $ : int [1:4] 19 25 50 55\n $ : int [1:5] 22 26 38 43 53\n $ : int [1:3] 11 15 29\n $ : int [1:8] 13 16 21 24 26 43 45 52\n $ : int [1:6] 8 12 18 37 46 49\n $ : int [1:5] 4 6 7 37 46\n $ : int [1:5] 14 35 36 46 49\n $ : int [1:5] 24 32 43 51 53\n $ : int [1:5] 15 19 40 41 50\n $ : int [1:4] 15 29 39 41\n $ : int [1:6] 19 27 29 39 40 54\n $ : int [1:3] 11 15 50\n $ : int [1:5] 24 26 32 34 38\n $ : int [1:4] 13 14 16 20\n $ : int [1:5] 21 34 48 52 54\n $ : int [1:5] 6 8 35 36 37\n $ : int [1:2] 23 27\n $ : int [1:8] 12 17 18 25 28 45 52 54\n $ : int [1:5] 12 14 28 35 37\n $ : int [1:8] 1 5 15 19 31 39 42 55\n $ : int [1:4] 21 24 30 38\n $ : int [1:5] 13 28 34 45 48\n $ : int [1:3] 22 32 38\n $ : int [1:8] 17 19 21 27 30 41 45 48\n $ : int [1:5] 1 10 25 31 50\n - attr(*, \"class\")= chr [1:2] \"nb\" \"list\"\n - attr(*, \"region.id\")= chr [1:55] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language spdep::poly2nb(pl = geometry, queen = queen)\n - attr(*, \"type\")= chr \"queen\"\n - attr(*, \"sym\")= logi TRUE\n\n\n\n\nVisualising the contiguity network in the Shan region\n\n\nReveal Code\nplot(st_geometry(shan_sf), \n     border=grey(.5))\n\nplot(shan.nb, \n     st_coordinates(st_centroid(shan_sf)), \n     col=\"blue\", \n     add=TRUE)"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_09/In-Class_Exercise_09.html",
    "href": "In-Class_Exercise/In-Class_Exercise_09/In-Class_Exercise_09.html",
    "title": "In-Class Exercise 9: Geographically-weighted Random Forest methods",
    "section": "",
    "text": "Reveal Code\npacman::p_load(sf, spdep, GWmodel, SpatialML, tmap, rsample, tidymodels, tidyverse, gtsummary, rpart, rpart.plot, ggstatsplot, performance, ranger, yardstick)"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_09/In-Class_Exercise_09.html#loading-the-required-packages-into-the-r-environment",
    "href": "In-Class_Exercise/In-Class_Exercise_09/In-Class_Exercise_09.html#loading-the-required-packages-into-the-r-environment",
    "title": "In-Class Exercise 9: Geographically-weighted Random Forest methods",
    "section": "",
    "text": "Reveal Code\npacman::p_load(sf, spdep, GWmodel, SpatialML, tmap, rsample, tidymodels, tidyverse, gtsummary, rpart, rpart.plot, ggstatsplot, performance, ranger, yardstick)"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_09/In-Class_Exercise_09.html#importing-the-datasets-of-interest",
    "href": "In-Class_Exercise/In-Class_Exercise_09/In-Class_Exercise_09.html#importing-the-datasets-of-interest",
    "title": "In-Class Exercise 9: Geographically-weighted Random Forest methods",
    "section": "Importing the datasets of interest",
    "text": "Importing the datasets of interest\n\nImporting the HDB resale price data\n\n\nReveal Code\nrs_sf &lt;- read_rds(\"Data/RDS/HDB_resale.rds\")\nrs_sf\n\n\nSimple feature collection with 15901 features and 17 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 11597.31 ymin: 28217.39 xmax: 42623.63 ymax: 48741.06\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 15,901 × 18\n   RESALE_PRICE FLOOR_AREA_SQM STOREY_ORDER REMAINING_LEASE_MTHS PROX_CBD\n          &lt;dbl&gt;          &lt;dbl&gt;        &lt;int&gt;                &lt;dbl&gt;    &lt;dbl&gt;\n 1       330000             92            1                  684     8.82\n 2       360000             91            3                  738     9.84\n 3       370000             92            1                  733     9.56\n 4       375000             99            2                  700     9.61\n 5       380000             92            2                  715     8.35\n 6       380000             92            4                  732     9.49\n 7       385000             92            3                  706     8.96\n 8       395000             92            2                  745     9.81\n 9       395000             93            4                  731    10.3 \n10       395000             91            3                  725    10.4 \n# ℹ 15,891 more rows\n# ℹ 13 more variables: PROX_ELDERLYCARE &lt;dbl&gt;, PROX_HAWKER &lt;dbl&gt;,\n#   PROX_MRT &lt;dbl&gt;, PROX_PARK &lt;dbl&gt;, PROX_GOOD_PRISCH &lt;dbl&gt;, PROX_MALL &lt;dbl&gt;,\n#   PROX_CHAS &lt;dbl&gt;, PROX_SUPERMARKET &lt;dbl&gt;, WITHIN_350M_KINDERGARTEN &lt;int&gt;,\n#   WITHIN_350M_CHILDCARE &lt;int&gt;, WITHIN_350M_BUS &lt;int&gt;,\n#   WITHIN_1KM_PRISCH &lt;int&gt;, geometry &lt;POINT [m]&gt;"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_09/In-Class_Exercise_09.html#preparing-the-hdb-resale-data-for-predictive-analysis",
    "href": "In-Class_Exercise/In-Class_Exercise_09/In-Class_Exercise_09.html#preparing-the-hdb-resale-data-for-predictive-analysis",
    "title": "In-Class Exercise 9: Geographically-weighted Random Forest methods",
    "section": "Preparing the HDB resale data for predictive analysis",
    "text": "Preparing the HDB resale data for predictive analysis\n\nSplitting the data into training and testing datasets\n\n\nReveal Code\nset.seed(1234)\n\nresale_split &lt;- initial_split(rs_sf, prop = 5/10)\n\ntrain_sf &lt;- training(resale_split)\ntest_sf &lt;- testing(resale_split)\n\n\n\n\nObtaining the data frame object from the HDB dataset\n\n\nReveal Code\ntrain_df &lt;- train_sf %&gt;% \n  st_drop_geometry() %&gt;% \n  as.data.frame()\n\ntest_df &lt;- test_sf %&gt;% \n  st_drop_geometry() %&gt;% \n  as.data.frame()"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_09/In-Class_Exercise_09.html#computing-the-correlation-matrix",
    "href": "In-Class_Exercise/In-Class_Exercise_09/In-Class_Exercise_09.html#computing-the-correlation-matrix",
    "title": "In-Class Exercise 9: Geographically-weighted Random Forest methods",
    "section": "Computing the correlation matrix",
    "text": "Computing the correlation matrix\n\n\nReveal Code\nrs_df &lt;- rs_sf %&gt;% \n  st_drop_geometry() %&gt;% \n  as.data.frame()\n\nggcorrmat(rs_df[, 2:17])"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_09/In-Class_Exercise_09.html#building-a-multivariate-linear-non-spatial-regression-model",
    "href": "In-Class_Exercise/In-Class_Exercise_09/In-Class_Exercise_09.html#building-a-multivariate-linear-non-spatial-regression-model",
    "title": "In-Class Exercise 9: Geographically-weighted Random Forest methods",
    "section": "Building a multivariate linear non-spatial regression model",
    "text": "Building a multivariate linear non-spatial regression model\n\n\nReveal Code\nrs_mlr &lt;- lm(RESALE_PRICE ~ FLOOR_AREA_SQM +\n                  STOREY_ORDER + REMAINING_LEASE_MTHS +\n                  PROX_CBD + PROX_ELDERLYCARE + + PROX_CHAS + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_GOOD_PRISCH + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                data= train_df)\n\ntbl_regression(rs_mlr, intercept = TRUE)\n\n\n\n\n\n\n\n\nCharacteristic\nBeta\n95% CI1\np-value\n\n\n\n\n(Intercept)\n105,360\n81,898, 128,823\n&lt;0.001\n\n\nFLOOR_AREA_SQM\n2,803\n2,601, 3,005\n&lt;0.001\n\n\nSTOREY_ORDER\n14,044\n13,292, 14,796\n&lt;0.001\n\n\nREMAINING_LEASE_MTHS\n345\n335, 355\n&lt;0.001\n\n\nPROX_CBD\n-17,918\n-18,434, -17,403\n&lt;0.001\n\n\nPROX_ELDERLYCARE\n-14,469\n-16,672, -12,265\n&lt;0.001\n\n\nPROX_CHAS\n-9,057\n-23,168, 5,054\n0.2\n\n\nPROX_HAWKER\n-17,101\n-19,961, -14,240\n&lt;0.001\n\n\nPROX_MRT\n-31,603\n-35,448, -27,758\n&lt;0.001\n\n\nPROX_PARK\n-9,334\n-12,677, -5,992\n&lt;0.001\n\n\nPROX_GOOD_PRISCH\n2,787\n2,036, 3,539\n&lt;0.001\n\n\nPROX_MALL\n-12,320\n-16,777, -7,863\n&lt;0.001\n\n\nPROX_SUPERMARKET\n-25,758\n-35,671, -15,845\n&lt;0.001\n\n\nWITHIN_350M_KINDERGARTEN\n8,707\n7,297, 10,117\n&lt;0.001\n\n\nWITHIN_350M_CHILDCARE\n-4,537\n-5,317, -3,756\n&lt;0.001\n\n\nWITHIN_350M_BUS\n1,067\n573, 1,562\n&lt;0.001\n\n\nWITHIN_1KM_PRISCH\n-8,192\n-9,277, -7,108\n&lt;0.001\n\n\n\n1 CI = Confidence Interval"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_09/In-Class_Exercise_09.html#revising-the-regression-model",
    "href": "In-Class_Exercise/In-Class_Exercise_09/In-Class_Exercise_09.html#revising-the-regression-model",
    "title": "In-Class Exercise 9: Geographically-weighted Random Forest methods",
    "section": "Revising the regression model",
    "text": "Revising the regression model\n\nDropping the insignificant variables from the testing & training datasets\n\n\nReveal Code\ntrain_df &lt;- train_df %&gt;% \n  select(-c(PROX_CHAS))\n\ntest_df &lt;- test_df %&gt;% \n  select(-c(PROX_CHAS))\n\ntrain_sf &lt;- train_sf %&gt;% \n  select(-c(PROX_CHAS))\n\ntest_sf &lt;- test_sf %&gt;% \n  select(-c(PROX_CHAS))\n\n\n\n\nBuilding the revised multivariate linear non-spatial regression model\n\n\nReveal Code\nrs_mlr &lt;- lm(RESALE_PRICE ~ FLOOR_AREA_SQM +\n                  STOREY_ORDER + REMAINING_LEASE_MTHS +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_GOOD_PRISCH + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                data= train_df)\n\ntbl_regression(rs_mlr, intercept = TRUE)\n\n\n\n\n\n\n\n\nCharacteristic\nBeta\n95% CI1\np-value\n\n\n\n\n(Intercept)\n105,081\n81,622, 128,540\n&lt;0.001\n\n\nFLOOR_AREA_SQM\n2,791\n2,589, 2,992\n&lt;0.001\n\n\nSTOREY_ORDER\n14,038\n13,286, 14,789\n&lt;0.001\n\n\nREMAINING_LEASE_MTHS\n346\n335, 356\n&lt;0.001\n\n\nPROX_CBD\n-17,907\n-18,422, -17,392\n&lt;0.001\n\n\nPROX_ELDERLYCARE\n-14,588\n-16,783, -12,392\n&lt;0.001\n\n\nPROX_HAWKER\n-17,434\n-20,247, -14,621\n&lt;0.001\n\n\nPROX_MRT\n-31,752\n-35,590, -27,914\n&lt;0.001\n\n\nPROX_PARK\n-9,366\n-12,708, -6,023\n&lt;0.001\n\n\nPROX_GOOD_PRISCH\n2,758\n2,008, 3,508\n&lt;0.001\n\n\nPROX_MALL\n-12,220\n-16,674, -7,765\n&lt;0.001\n\n\nPROX_SUPERMARKET\n-28,049\n-37,298, -18,800\n&lt;0.001\n\n\nWITHIN_350M_KINDERGARTEN\n8,722\n7,312, 10,131\n&lt;0.001\n\n\nWITHIN_350M_CHILDCARE\n-4,515\n-5,295, -3,735\n&lt;0.001\n\n\nWITHIN_350M_BUS\n1,084\n590, 1,578\n&lt;0.001\n\n\nWITHIN_1KM_PRISCH\n-8,201\n-9,285, -7,117\n&lt;0.001\n\n\n\n1 CI = Confidence Interval"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_09/In-Class_Exercise_09.html#conducting-the-geographically-weighted-random-forest",
    "href": "In-Class_Exercise/In-Class_Exercise_09/In-Class_Exercise_09.html#conducting-the-geographically-weighted-random-forest",
    "title": "In-Class Exercise 9: Geographically-weighted Random Forest methods",
    "section": "Conducting the geographically weighted random forest",
    "text": "Conducting the geographically weighted random forest\n\nConverting the sf objects into SpatialPointsDataFrame objects\n\n\nReveal Code\ntrain_sp &lt;- as_Spatial(train_sf)\n\ntrain_sp\n\n\nclass       : SpatialPointsDataFrame \nfeatures    : 7950 \nextent      : 11597.31, 42623.63, 28217.39, 48741.06  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 16\nnames       : RESALE_PRICE, FLOOR_AREA_SQM, STOREY_ORDER, REMAINING_LEASE_MTHS,          PROX_CBD,     PROX_ELDERLYCARE,        PROX_HAWKER,           PROX_MRT,          PROX_PARK,   PROX_GOOD_PRISCH,        PROX_MALL,     PROX_SUPERMARKET, WITHIN_350M_KINDERGARTEN, WITHIN_350M_CHILDCARE, WITHIN_350M_BUS, ... \nmin values  :       218000,             74,            1,                  555, 0.999393538715878, 1.98943787433087e-08, 0.0333358643817954, 0.0220407324774434, 0.0441643212802781, 0.0652540365486641,                0, 1.21715176356525e-07,                        0,                     0,               0, ... \nmax values  :      1186888,            126,           17,                 1164,  19.6500691667807,     3.30163731686804,   2.80329916478192,   2.13060636038504,   2.41313695915468,   10.6223726149914, 2.26056404492346,     1.57131703651196,                        7,                    20,              18, ... \n\n\n\n\nExtracting the coordinates from the full, test and training datasets\n\n\nReveal Code\ncoords &lt;- st_coordinates(rs_sf)\ncoords_train &lt;- st_coordinates(train_sf)\ncoords_test &lt;- st_coordinates(test_sf)\n\n\n\n\nBuilding a recursive partitioning model\n\n\nReveal Code\nset.seed(1234)\n\nrs_rp &lt;- rpart(RESALE_PRICE ~ FLOOR_AREA_SQM +\n                  STOREY_ORDER + REMAINING_LEASE_MTHS +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_GOOD_PRISCH + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                data= train_df)\n\nsummary(rs_rp)\n\n\nCall:\nrpart(formula = RESALE_PRICE ~ FLOOR_AREA_SQM + STOREY_ORDER + \n    REMAINING_LEASE_MTHS + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + \n    PROX_MRT + PROX_PARK + PROX_GOOD_PRISCH + PROX_MALL + PROX_SUPERMARKET + \n    WITHIN_350M_KINDERGARTEN + WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n    WITHIN_1KM_PRISCH, data = train_df)\n  n= 7950 \n\n          CP nsplit rel error    xerror        xstd\n1 0.32500941      0 1.0000000 1.0002539 0.025701129\n2 0.16349282      1 0.6749906 0.6761234 0.015346142\n3 0.11420780      2 0.5114978 0.5130256 0.011770166\n4 0.04879110      3 0.3972900 0.3994993 0.009975080\n5 0.03719356      4 0.3484989 0.3506805 0.008518421\n6 0.01957252      5 0.3113053 0.3138078 0.007935502\n7 0.01915689      6 0.2917328 0.3030715 0.007575178\n8 0.01518741      7 0.2725759 0.2796309 0.006735732\n9 0.01000000      8 0.2573885 0.2615752 0.006391225\n\nVariable importance\n            PROX_CBD REMAINING_LEASE_MTHS         STOREY_ORDER \n                  37                   29                    8 \n    PROX_GOOD_PRISCH       FLOOR_AREA_SQM     PROX_ELDERLYCARE \n                   7                    6                    4 \n         PROX_HAWKER             PROX_MRT            PROX_MALL \n                   3                    2                    1 \n           PROX_PARK     PROX_SUPERMARKET    WITHIN_1KM_PRISCH \n                   1                    1                    1 \n\nNode number 1: 7950 observations,    complexity param=0.3250094\n  mean=433705.6, MSE=1.433391e+10 \n  left son=2 (6665 obs) right son=3 (1285 obs)\n  Primary splits:\n      PROX_CBD             &lt; 7.974483     to the right, improve=0.32500940, (0 missing)\n      REMAINING_LEASE_MTHS &lt; 1012.5       to the left,  improve=0.18157150, (0 missing)\n      STOREY_ORDER         &lt; 6.5          to the left,  improve=0.15939740, (0 missing)\n      PROX_GOOD_PRISCH     &lt; 6.275294     to the right, improve=0.11855990, (0 missing)\n      WITHIN_1KM_PRISCH    &lt; 1.5          to the right, improve=0.08396717, (0 missing)\n  Surrogate splits:\n      REMAINING_LEASE_MTHS &lt; 671.5        to the right, agree=0.855, adj=0.104, (0 split)\n      FLOOR_AREA_SQM       &lt; 82.5         to the right, agree=0.847, adj=0.054, (0 split)\n      STOREY_ORDER         &lt; 8.5          to the left,  agree=0.846, adj=0.047, (0 split)\n      PROX_HAWKER          &lt; 0.0911829    to the right, agree=0.841, adj=0.016, (0 split)\n      PROX_ELDERLYCARE     &lt; 4.400731e-07 to the right, agree=0.839, adj=0.004, (0 split)\n\nNode number 2: 6665 observations,    complexity param=0.1142078\n  mean=403736, MSE=6.709894e+09 \n  left son=4 (4228 obs) right son=5 (2437 obs)\n  Primary splits:\n      REMAINING_LEASE_MTHS &lt; 1020.5       to the left,  improve=0.29101270, (0 missing)\n      PROX_CBD             &lt; 15.51902     to the right, improve=0.16270340, (0 missing)\n      PROX_GOOD_PRISCH     &lt; 5.170014     to the right, improve=0.15135740, (0 missing)\n      STOREY_ORDER         &lt; 4.5          to the left,  improve=0.09349039, (0 missing)\n      PROX_MRT             &lt; 0.4634405    to the right, improve=0.05389703, (0 missing)\n  Surrogate splits:\n      FLOOR_AREA_SQM   &lt; 97.5         to the right, agree=0.709, adj=0.204, (0 split)\n      STOREY_ORDER     &lt; 4.5          to the left,  agree=0.690, adj=0.151, (0 split)\n      PROX_MRT         &lt; 0.2913116    to the right, agree=0.687, adj=0.143, (0 split)\n      PROX_SUPERMARKET &lt; 0.1507347    to the right, agree=0.666, adj=0.086, (0 split)\n      PROX_ELDERLYCARE &lt; 0.1368842    to the right, agree=0.665, adj=0.085, (0 split)\n\nNode number 3: 1285 observations,    complexity param=0.1634928\n  mean=589151.4, MSE=2.505591e+10 \n  left son=6 (745 obs) right son=7 (540 obs)\n  Primary splits:\n      REMAINING_LEASE_MTHS &lt; 930.5        to the left,  improve=0.5786517, (0 missing)\n      STOREY_ORDER         &lt; 4.5          to the left,  improve=0.2907640, (0 missing)\n      FLOOR_AREA_SQM       &lt; 84.5         to the left,  improve=0.1337876, (0 missing)\n      PROX_CBD             &lt; 2.611464     to the right, improve=0.1315658, (0 missing)\n      PROX_ELDERLYCARE     &lt; 0.4011503    to the right, improve=0.1273309, (0 missing)\n  Surrogate splits:\n      STOREY_ORDER     &lt; 4.5          to the left,  agree=0.736, adj=0.372, (0 split)\n      PROX_ELDERLYCARE &lt; 0.3277588    to the right, agree=0.675, adj=0.226, (0 split)\n      PROX_CBD         &lt; 5.467038     to the right, agree=0.671, adj=0.217, (0 split)\n      PROX_GOOD_PRISCH &lt; 4.338693     to the left,  agree=0.665, adj=0.202, (0 split)\n      PROX_HAWKER      &lt; 0.2474588    to the right, agree=0.643, adj=0.150, (0 split)\n\nNode number 4: 4228 observations,    complexity param=0.03719356\n  mean=370187.4, MSE=3.720671e+09 \n  left son=8 (2271 obs) right son=9 (1957 obs)\n  Primary splits:\n      PROX_GOOD_PRISCH &lt; 3.629405     to the right, improve=0.26942840, (0 missing)\n      PROX_CBD         &lt; 14.48068     to the right, improve=0.21093420, (0 missing)\n      FLOOR_AREA_SQM   &lt; 88.5         to the left,  improve=0.07192738, (0 missing)\n      STOREY_ORDER     &lt; 2.5          to the left,  improve=0.04154147, (0 missing)\n      PROX_PARK        &lt; 1.28633      to the right, improve=0.03614683, (0 missing)\n  Surrogate splits:\n      PROX_CBD             &lt; 13.69747     to the right, agree=0.899, adj=0.781, (0 split)\n      REMAINING_LEASE_MTHS &lt; 773.5        to the right, agree=0.661, adj=0.268, (0 split)\n      PROX_MALL            &lt; 0.6440848    to the left,  agree=0.624, adj=0.188, (0 split)\n      WITHIN_1KM_PRISCH    &lt; 2.5          to the right, agree=0.620, adj=0.178, (0 split)\n      PROX_PARK            &lt; 0.6904412    to the right, agree=0.617, adj=0.172, (0 split)\n\nNode number 5: 2437 observations,    complexity param=0.0487911\n  mean=461940.1, MSE=6.555576e+09 \n  left son=10 (2331 obs) right son=11 (106 obs)\n  Primary splits:\n      PROX_CBD          &lt; 10.40657     to the right, improve=0.34802160, (0 missing)\n      PROX_GOOD_PRISCH  &lt; 1.720127     to the right, improve=0.23516470, (0 missing)\n      FLOOR_AREA_SQM    &lt; 88.5         to the right, improve=0.15243800, (0 missing)\n      WITHIN_1KM_PRISCH &lt; 2.5          to the right, improve=0.09564776, (0 missing)\n      PROX_MRT          &lt; 0.8792713    to the right, improve=0.08931852, (0 missing)\n  Surrogate splits:\n      PROX_MALL      &lt; 1.379339     to the left,  agree=0.962, adj=0.132, (0 split)\n      FLOOR_AREA_SQM &lt; 82.5         to the right, agree=0.961, adj=0.113, (0 split)\n      STOREY_ORDER   &lt; 9.5          to the left,  agree=0.958, adj=0.038, (0 split)\n\nNode number 6: 745 observations,    complexity param=0.01957252\n  mean=486637.6, MSE=8.877e+09 \n  left son=12 (451 obs) right son=13 (294 obs)\n  Primary splits:\n      FLOOR_AREA_SQM       &lt; 98.5         to the left,  improve=0.33725330, (0 missing)\n      REMAINING_LEASE_MTHS &lt; 811          to the left,  improve=0.26213800, (0 missing)\n      PROX_MALL            &lt; 0.5895061    to the right, improve=0.11363750, (0 missing)\n      PROX_MRT             &lt; 0.4164698    to the right, improve=0.10371830, (0 missing)\n      PROX_PARK            &lt; 1.087101     to the right, improve=0.07509714, (0 missing)\n  Surrogate splits:\n      REMAINING_LEASE_MTHS     &lt; 811          to the left,  agree=0.831, adj=0.571, (0 split)\n      PROX_CBD                 &lt; 7.58295      to the left,  agree=0.655, adj=0.126, (0 split)\n      WITHIN_350M_KINDERGARTEN &lt; 2.5          to the left,  agree=0.652, adj=0.119, (0 split)\n      PROX_MRT                 &lt; 0.7860161    to the left,  agree=0.631, adj=0.065, (0 split)\n      PROX_GOOD_PRISCH         &lt; 0.8867187    to the right, agree=0.631, adj=0.065, (0 split)\n\nNode number 7: 540 observations,    complexity param=0.01915689\n  mean=730582.5, MSE=1.287541e+10 \n  left son=14 (314 obs) right son=15 (226 obs)\n  Primary splits:\n      REMAINING_LEASE_MTHS &lt; 1071.5       to the left,  improve=0.3139801, (0 missing)\n      PROX_CBD             &lt; 1.867495     to the right, improve=0.2790647, (0 missing)\n      STOREY_ORDER         &lt; 6.5          to the left,  improve=0.2548839, (0 missing)\n      PROX_GOOD_PRISCH     &lt; 5.8053       to the left,  improve=0.2198813, (0 missing)\n      PROX_MRT             &lt; 0.9143085    to the right, improve=0.1396864, (0 missing)\n  Surrogate splits:\n      PROX_MRT         &lt; 0.4309243    to the left,  agree=0.706, adj=0.296, (0 split)\n      PROX_CBD         &lt; 5.37813      to the left,  agree=0.674, adj=0.221, (0 split)\n      FLOOR_AREA_SQM   &lt; 90.5         to the left,  agree=0.657, adj=0.181, (0 split)\n      PROX_HAWKER      &lt; 0.7592249    to the left,  agree=0.654, adj=0.173, (0 split)\n      PROX_GOOD_PRISCH &lt; 2.077614     to the right, agree=0.648, adj=0.159, (0 split)\n\nNode number 8: 2271 observations\n  mean=340796.1, MSE=1.695791e+09 \n\nNode number 9: 1957 observations\n  mean=404294.6, MSE=3.904691e+09 \n\nNode number 10: 2331 observations,    complexity param=0.01518741\n  mean=451754.4, MSE=4.18821e+09 \n  left son=20 (1123 obs) right son=21 (1208 obs)\n  Primary splits:\n      PROX_GOOD_PRISCH &lt; 4.866983     to the right, improve=0.17727390, (0 missing)\n      PROX_CBD         &lt; 14.20377     to the right, improve=0.13745020, (0 missing)\n      PROX_MRT         &lt; 0.7440342    to the right, improve=0.11174670, (0 missing)\n      STOREY_ORDER     &lt; 2.5          to the left,  improve=0.08750032, (0 missing)\n      PROX_PARK        &lt; 1.455561     to the right, improve=0.07592602, (0 missing)\n  Surrogate splits:\n      PROX_CBD         &lt; 14.09321     to the right, agree=0.952, adj=0.900, (0 split)\n      PROX_MRT         &lt; 0.6720027    to the right, agree=0.749, adj=0.479, (0 split)\n      PROX_PARK        &lt; 1.441633     to the right, agree=0.635, adj=0.243, (0 split)\n      PROX_HAWKER      &lt; 0.4913393    to the right, agree=0.625, adj=0.221, (0 split)\n      PROX_ELDERLYCARE &lt; 1.379679     to the right, agree=0.614, adj=0.199, (0 split)\n\nNode number 11: 106 observations\n  mean=685929.1, MSE=6.162736e+09 \n\nNode number 12: 451 observations\n  mean=442460.5, MSE=5.424694e+09 \n\nNode number 13: 294 observations\n  mean=554405.7, MSE=6.58656e+09 \n\nNode number 14: 314 observations\n  mean=676641.3, MSE=7.840665e+09 \n\nNode number 15: 226 observations\n  mean=805527.4, MSE=1.021123e+10 \n\nNode number 20: 1123 observations\n  mean=423493.8, MSE=2.494921e+09 \n\nNode number 21: 1208 observations\n  mean=478026.4, MSE=4.329674e+09 \n\n\nReveal Code\nrpart.plot(rs_rp)\n\n\n\n\n\n\n\n\n\n\n\nCalibrating the random forest model\n\n\nReveal Code\nrs_rf &lt;- ranger(RESALE_PRICE ~ FLOOR_AREA_SQM +\n                  STOREY_ORDER + REMAINING_LEASE_MTHS +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_GOOD_PRISCH + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH, \n                data= train_df, \n                importance =\"impurity\")\n\nrs_rf\n\n\nRanger result\n\nCall:\n ranger(RESALE_PRICE ~ FLOOR_AREA_SQM + STOREY_ORDER + REMAINING_LEASE_MTHS +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_GOOD_PRISCH + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_df, importance = \"impurity\") \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      7950 \nNumber of independent variables:  15 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         impurity \nSplitrule:                        variance \nOOB prediction error (MSE):       741935472 \nR squared (OOB):                  0.9482457 \n\n\n\n\nExtracting the variable importance values of the random forest model\n\n\nReveal Code\nvi &lt;- as.data.frame(rs_rf$variable.importance)\nvi$variables &lt;- rownames(vi)\n\nvi &lt;- vi %&gt;% \n  rename(vi = \"rs_rf$variable.importance\")\n\n\n\n\nVisualing the variable importance factors\n\n\nReveal Code\nggplot(data = vi, \n       aes(x = vi, y = reorder(variables, vi))) + \n  geom_bar(stat = \"identity\")\n\n\n\n\n\n\n\n\n\n\n\nBuilding the geographically-weighted random forest model\n\n\nReveal Code\nrs_gwrf &lt;- grf(formula = RESALE_PRICE ~ FLOOR_AREA_SQM +\n                  STOREY_ORDER + REMAINING_LEASE_MTHS +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_GOOD_PRISCH + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH, \n               dframe = train_df, \n               bw = 55,\n               kernel = \"adaptive\", \n               coords = coords_train, \n               geo.weighted = TRUE)\n\nwrite_rds(rs_gwrf, \"Data/Models/rs_gwrf.rds\")\n\n\n\n\nReveal Code\nrs_gwrf &lt;- read_rds(\"Data/Models/rs_gwrf.rds\")"
  },
  {
    "objectID": "In-Class_Exercise/In-Class_Exercise_09/In-Class_Exercise_09.html#comparing-the-ml-models-performance",
    "href": "In-Class_Exercise/In-Class_Exercise_09/In-Class_Exercise_09.html#comparing-the-ml-models-performance",
    "title": "In-Class Exercise 9: Geographically-weighted Random Forest methods",
    "section": "Comparing the ML model’s performance",
    "text": "Comparing the ML model’s performance\n\n\nReveal Code\ntest_df &lt;- cbind(test_sf, coords_test) %&gt;% \n  st_drop_geometry()\n\n\n\nTesting the geographically-weighted random forest performance\n\n\nReveal Code\ngwrf_pred &lt;- predict.grf(rs_gwrf, \n                         test_df, \n                         x.var.name = \"X\",\n                         y.var.name = \"Y\", \n                         local.w = 1,\n                         global.w = 0)\n\nwrite_rds(gwrf_pred, \"Data/Models/rs_gwrf_pred.rds\")\n\n\n\n\nReveal Code\ngwrf_pred &lt;- read_rds(\"Data/Models/rs_gwrf_pred.rds\")\n\n\n\n\nReveal Code\ntest_pred &lt;- test_df %&gt;% \n  select(RESALE_PRICE) %&gt;% \n  cbind(gwrf_pred)\n\n\n\n\nTesting the non-geographically-weighted random forest performance\n\n\nReveal Code\nrf_pred &lt;- predict(rs_rf, test_df)\n\n\n\n\nReveal Code\nrf_pred_df &lt;- as.data.frame(rf_pred$predictions) %&gt;% \n  rename(rf_pred = \"rf_pred$predictions\")\n\n\n\n\nReveal Code\ntest_pred &lt;- cbind(test_pred, rf_pred_df)\n\n\n\n\nTesting the multivariate linear regression performance\n\n\nReveal Code\nmlr_pred &lt;- predict(rs_mlr, test_df)\n\n\n\n\nReveal Code\nmlr_pred_df &lt;- as.data.frame(mlr_pred) %&gt;% \n  rename(mlr_pred = \"mlr_pred\")\n\n\n\n\nReveal Code\ntest_pred &lt;- cbind(test_pred, mlr_pred_df)\n\n\n\n\nComparing the models’ performances using RMSE\n\n\nReveal Code\nmc &lt;- test_pred %&gt;% \n  pivot_longer(cols = c(2:4), \n               names_to = \"models\", \n               values_to = \"predicted\") %&gt;% \n  group_by(models) %&gt;% \n  yardstick::rmse(RESALE_PRICE, predicted)\n\nmc\n\n\n# A tibble: 3 × 4\n  models    .metric .estimator .estimate\n  &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 gwrf_pred rmse    standard      28745.\n2 mlr_pred  rmse    standard      61617.\n3 rf_pred   rmse    standard      28388.\n\n\n\n\nVisualising the models’ performance\n\n\nReveal Code\nggplot(data = test_pred, \n       aes(x = gwrf_pred, \n           y = RESALE_PRICE)) + \n  geom_point()\n\n\n\n\n\n\n\n\n\nReveal Code\nggplot(data = test_pred, \n       aes(x = mlr_pred, \n           y = RESALE_PRICE)) + \n  geom_point()\n\n\n\n\n\n\n\n\n\nReveal Code\nggplot(data = test_pred, \n       aes(x = rf_pred, \n           y = RESALE_PRICE)) + \n  geom_point()"
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_03/Take-Home_Exercise_03.html",
    "href": "Take-Home_Exercise/Take-Home_Exercise_03/Take-Home_Exercise_03.html",
    "title": "Take-Home Exercise 3: Prototyping geospatial segmentation module for analysis of accessibility in Singapore",
    "section": "",
    "text": "Reveal Code\npacman::p_load(rgdal, sfdep, tmap, sf, ggpubr, cluster, factoextra, heatmaply, corrplot, tidyverse, psych)\n\n\n\n\n\n\n\nReveal Code\nsg_sf &lt;- st_read(dsn = \"data/geospatial/Master Plan 2014\", layer = \"MP14_SUBZONE_WEB_PL\") %&gt;% \n  st_transform(crs = 3414)\n\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\yungq\\Desktop\\SMU Modules\\Y4S1\\Geospatial Analysis and Applications\\IS415 Course Website\\Take-Home_Exercise\\Take-Home_Exercise_03\\data\\geospatial\\Master Plan 2014' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nReveal Code\nsummary(sg_sf)\n\n\n    OBJECTID       SUBZONE_NO      SUBZONE_N          SUBZONE_C        \n Min.   :  1.0   Min.   : 1.000   Length:323         Length:323        \n 1st Qu.: 81.5   1st Qu.: 2.000   Class :character   Class :character  \n Median :162.0   Median : 4.000   Mode  :character   Mode  :character  \n Mean   :162.0   Mean   : 4.625                                        \n 3rd Qu.:242.5   3rd Qu.: 6.500                                        \n Max.   :323.0   Max.   :17.000                                        \n    CA_IND           PLN_AREA_N         PLN_AREA_C          REGION_N        \n Length:323         Length:323         Length:323         Length:323        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   REGION_C           INC_CRC            FMEL_UPD_D             X_ADDR     \n Length:323         Length:323         Min.   :2014-12-05   Min.   : 5093  \n Class :character   Class :character   1st Qu.:2014-12-05   1st Qu.:21864  \n Mode  :character   Mode  :character   Median :2014-12-05   Median :28465  \n                                       Mean   :2014-12-05   Mean   :27257  \n                                       3rd Qu.:2014-12-05   3rd Qu.:31674  \n                                       Max.   :2014-12-05   Max.   :50425  \n     Y_ADDR        SHAPE_Leng        SHAPE_Area                geometry  \n Min.   :19579   Min.   :  871.5   Min.   :   39438   MULTIPOLYGON :323  \n 1st Qu.:31776   1st Qu.: 3709.6   1st Qu.:  628261   epsg:3414    :  0  \n Median :35113   Median : 5211.9   Median : 1229894   +proj=tmer...:  0  \n Mean   :36106   Mean   : 6524.4   Mean   : 2420882                      \n 3rd Qu.:39869   3rd Qu.: 6942.6   3rd Qu.: 2106483                      \n Max.   :49553   Max.   :68083.9   Max.   :69748299                      \n\n\nReveal Code\nsg_sf %&gt;%\n  tm_shape() +\n  tm_polygons(col = \"lightyellow\") + \n  tm_compass(type = \"rose\") + \n  tm_scale_bar() + \n  tm_layout(main.title = \"Singapore Planning Subzone 2019\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nhawker = read_csv(\"data/aspatial/hawker_coordinates.csv\") %&gt;% \n  select(-1)\nmrt = read_csv(\"data/aspatial/MRT_coordinates.csv\") %&gt;% \n  select(-1)\nschool = read_csv(\"data/aspatial/school_coordinates.csv\") %&gt;% \n  select(-1)\nsupermarket = read_csv(\"data/aspatial/supermarket_coordinates.csv\") %&gt;% \n  select(-1)\nmall = read_csv(\"data/aspatial/mall_coordinates.csv\") %&gt;% \n  select(-1)\n\nglimpse(hawker)\n\n\nRows: 115\nColumns: 5\n$ `Name of Hawker Centre`                    &lt;chr&gt; \"Amoy Street Food Centre\", …\n$ `Common Property  Managed & Maintained by` &lt;chr&gt; \"NEA\", \"NEA\", \"NEA\", \"NEA\",…\n$ Address                                    &lt;chr&gt; \"7 MAXWELL ROAD DBS AMOY ST…\n$ Latitude                                   &lt;dbl&gt; 1.279231, 1.320347, 1.28883…\n$ Longitude                                  &lt;dbl&gt; 103.8466, 103.9555, 103.827…\n\n\nReveal Code\nglimpse(mrt)\n\n\nRows: 205\nColumns: 5\n$ STATION_NAME &lt;chr&gt; \"ADMIRALTY MRT STATION\", \"ALJUNIED MRT STATION\", \"ANG MO …\n$ STATION_NO   &lt;chr&gt; \"NS10\", \"EW9\", \"NS16\", \"SE3\", \"BP9\", \"CC12\", \"DT16\", \"CE1…\n$ COLOR        &lt;chr&gt; \"RED\", \"GREEN\", \"RED\", \"OTHERS\", \"OTHERS\", \"YELLOW\", \"BLU…\n$ Latitude     &lt;dbl&gt; 1.440585, 1.316433, 1.369933, 1.388093, 1.380018, 1.34282…\n$ Longitude    &lt;dbl&gt; 103.8010, 103.8829, 103.8496, 103.9054, 103.7727, 103.879…\n\n\nReveal Code\nglimpse(school)\n\n\nRows: 410\nColumns: 6\n$ SCHOOL    &lt;chr&gt; \"Admiralty Primary School\", \"Ahmad Ibrahim Primary School\", …\n$ AREA      &lt;chr&gt; \"Woodlands\", \"Yishun\", \"Bishan\", \"Bukit Merah\", \"Sengkang\", …\n$ TYPE      &lt;chr&gt; \"Primary\", \"Primary\", \"Primary\", \"Primary\", \"Primary\", \"Prim…\n$ ADDRESS   &lt;chr&gt; \"11 WOODLANDS CIRCLE ADMIRALTY PRIMARY SCHOOL SINGAPORE 7389…\n$ Latitude  &lt;dbl&gt; 1.442635, 1.433153, 1.360583, 1.291334, 1.390370, 1.384264, …\n$ Longitude &lt;dbl&gt; 103.8000, 103.8329, 103.8330, 103.8244, 103.8872, 103.8414, …\n\n\nReveal Code\nglimpse(supermarket)\n\n\nRows: 1,378\nColumns: 11\n$ SEARCHVAL &lt;chr&gt; \"DBS 112 KATONG\", \"GOLDEN VILLAGE (GV KATONG)\", \"112 KATONG\"…\n$ BLK_NO    &lt;chr&gt; \"112\", \"112\", \"112\", \"112\", \"11\", \"11\", \"11\", \"11\", \"2\", \"2\"…\n$ ROAD_NAME &lt;chr&gt; \"EAST COAST ROAD\", \"EAST COAST ROAD\", \"EAST COAST ROAD\", \"EA…\n$ BUILDING  &lt;chr&gt; \"DBS 112 KATONG\", \"GOLDEN VILLAGE (GV KATONG)\", \"112 KATONG\"…\n$ ADDRESS   &lt;chr&gt; \"112 EAST COAST ROAD DBS 112 KATONG SINGAPORE 428802\", \"112 …\n$ POSTAL    &lt;dbl&gt; 428802, 428802, 428802, 428802, 437157, 437157, 437157, 4371…\n$ X         &lt;dbl&gt; 35984.93, 35988.82, 35982.62, 35982.37, 34835.39, 34835.39, …\n$ Y         &lt;dbl&gt; 31943.42, 31950.74, 31948.74, 31950.57, 32989.44, 32989.44, …\n$ Latitude  &lt;dbl&gt; 1.305158, 1.305225, 1.305207, 1.305223, 1.314618, 1.314618, …\n$ Longitude &lt;dbl&gt; 103.9051, 103.9051, 103.9050, 103.9050, 103.8947, 103.8947, …\n$ address   &lt;dbl&gt; 428802, 428802, 428802, 428802, 437157, 437157, 437157, 4371…\n\n\nReveal Code\nglimpse(mall)\n\n\nRows: 165\nColumns: 6\n$ MALL      &lt;chr&gt; \"Sun Plaza\", \"Orchard Gateway\", \"The Poiz\", \"Buangkok Square…\n$ ADDRESS   &lt;chr&gt; \"30 SEMBAWANG DRIVE SUN PLAZA SINGAPORE 757713\", \"277 ORCHAR…\n$ POSTAL    &lt;chr&gt; \"757713\", \"238858\", \"358472\", \"530991\", \"556083\", \"730900\", …\n$ Latitude  &lt;dbl&gt; 1.448195, 1.300443, 1.332027, 1.384334, 1.350769, 1.435018, …\n$ Longitude &lt;dbl&gt; 103.8195, 103.8394, 103.8687, 103.8816, 103.8723, 103.7869, …\n$ ROAD_NAME &lt;chr&gt; \"SEMBAWANG DRIVE\", \"ORCHARD ROAD\", \"MEYAPPA CHETTIAR ROAD\", …\n\n\n\n\n\nUsing the Latitude and Longitude fields in the aspatial data sets to transform them into sf objects using st_as_sf().\n\n\nReveal Code\nhawker_sf &lt;- hawker %&gt;% \n  st_as_sf(coords = c(\"Longitude\", \"Latitude\"), crs = 4326) %&gt;% \n  st_transform(crs = 3414)\n\nmrt_sf &lt;- mrt %&gt;% \n  st_as_sf(coords = c(\"Longitude\", \"Latitude\"), crs = 4326) %&gt;% \n  st_transform(crs = 3414)\n\nschool_sf &lt;- school %&gt;% \n  st_as_sf(coords = c(\"Longitude\", \"Latitude\"), crs = 4326) %&gt;% \n  st_transform(crs = 3414)\n\nsupermarket_sf &lt;- supermarket %&gt;% \n  st_as_sf(coords = c(\"Longitude\", \"Latitude\"), crs = 4326) %&gt;% \n  st_transform(crs = 3414)\n\nmall_sf &lt;- mall %&gt;% \n  st_as_sf(coords = c(\"Longitude\", \"Latitude\"), crs = 4326) %&gt;% \n  st_transform(crs = 3414)\n\nsummary(hawker_sf)\n\n\n Name of Hawker Centre Common Property  Managed & Maintained by\n Length:115            Length:115                              \n Class :character      Class :character                        \n Mode  :character      Mode  :character                        \n   Address                   geometry  \n Length:115         POINT        :115  \n Class :character   epsg:3414    :  0  \n Mode  :character   +proj=tmer...:  0  \n\n\nReveal Code\nsummary(mrt_sf)\n\n\n STATION_NAME        STATION_NO           COLOR                    geometry  \n Length:205         Length:205         Length:205         POINT        :205  \n Class :character   Class :character   Class :character   epsg:3414    :  0  \n Mode  :character   Mode  :character   Mode  :character   +proj=tmer...:  0  \n\n\nReveal Code\nsummary(school_sf)\n\n\n    SCHOOL              AREA               TYPE             ADDRESS         \n Length:410         Length:410         Length:410         Length:410        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n          geometry  \n POINT        :410  \n epsg:3414    :  0  \n +proj=tmer...:  0  \n\n\nReveal Code\nsummary(supermarket_sf)\n\n\n  SEARCHVAL            BLK_NO           ROAD_NAME           BUILDING        \n Length:1378        Length:1378        Length:1378        Length:1378       \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   ADDRESS              POSTAL             X               Y        \n Length:1378        Min.   : 18961   Min.   : 4907   Min.   :25506  \n Class :character   1st Qu.:270036   1st Qu.:22842   1st Qu.:32442  \n Mode  :character   Median :528833   Median :28829   Median :35234  \n                    Mean   :472342   Mean   :28305   Mean   :36239  \n                    3rd Qu.:640615   3rd Qu.:34067   3rd Qu.:39513  \n                    Max.   :828761   Max.   :47022   Max.   :49231  \n    address                geometry   \n Min.   : 18961   POINT        :1378  \n 1st Qu.:287994   epsg:3414    :   0  \n Median :529286   +proj=tmer...:   0  \n Mean   :476920                       \n 3rd Qu.:650164                       \n Max.   :828761                       \n\n\nReveal Code\nsummary(mall_sf)\n\n\n     MALL             ADDRESS             POSTAL           ROAD_NAME        \n Length:165         Length:165         Length:165         Length:165        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n          geometry  \n POINT        :165  \n epsg:3414    :  0  \n +proj=tmer...:  0  \n\n\n\n\n\n\n\n\nHere, we compute the number of each ammenity found in each planning subzone of Singapore using st_intersects() and lengths() functions, and compile them into a single sf object using bind_cols().\n\n\nReveal Code\nhawker_count &lt;- st_intersects(sg_sf, hawker_sf) %&gt;% \n  lengths()\n\nmrt_count &lt;- st_intersects(sg_sf, mrt_sf) %&gt;% \n  lengths()\n\nschool_count &lt;- st_intersects(sg_sf, school_sf) %&gt;% \n  lengths()\n\nsupermarket_count &lt;- st_intersects(sg_sf, supermarket_sf) %&gt;% \n  lengths()\n\nmall_count &lt;- st_intersects(sg_sf, mall_sf) %&gt;% \n  lengths()\n\nammenities_sf &lt;- sg_sf %&gt;% \n  bind_cols(hawker_count = hawker_count, \n            mrt_count = mrt_count, \n            school_count = school_count,\n            supermarket_count = supermarket_count,\n            mall_count = mall_count)\n\nammenities_sf\n\n\nSimple feature collection with 323 features and 20 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area hawker_count mrt_count school_count\n1  29220.19   5267.381  1630379.3            0         1            0\n2  29782.05   3506.107   559816.2            2         0            1\n3  29974.66   1740.926   160807.5            0         0            0\n4  29933.77   3313.625   595428.9            1         0            1\n5  30005.70   2825.594   387429.4            2         1            1\n6  29991.38   4428.913  1030378.8            2         0            1\n7  30230.86   3275.312   551732.0            2         1            0\n8  30222.86   2208.619   290184.7            0         2            0\n9  29893.78   6571.323  1084792.3            0         1            0\n10 30104.18   3454.239   631644.3            0         0            0\n   supermarket_count mall_count                       geometry\n1                  0          0 MULTIPOLYGON (((31495.56 30...\n2                  1          1 MULTIPOLYGON (((29092.28 30...\n3                  0          0 MULTIPOLYGON (((29932.33 29...\n4                  0          0 MULTIPOLYGON (((27131.28 30...\n5                  9          0 MULTIPOLYGON (((26451.03 30...\n6                  5          1 MULTIPOLYGON (((25899.7 297...\n7                  4          0 MULTIPOLYGON (((27746.95 30...\n8                  0          1 MULTIPOLYGON (((29351.26 29...\n9                  0          0 MULTIPOLYGON (((20996.49 30...\n10                 0          1 MULTIPOLYGON (((24472.11 29...\n\n\n\n\n\nWe drop the geometric properties of the ammenities sf object here using st_drop_geometry() for use in computation functions later on.\n\n\nReveal Code\nammenities &lt;- ammenities_sf[, c(3, 16:20)] %&gt;% \n  st_drop_geometry()\n\n\n\n\n\nThe correlational table between the ammenity counts are computed and visualised here using cor() and corrplot.mixed() respectively.\n\n\nReveal Code\ncluster_vars &lt;- ammenities\n  \nrow.names(cluster_vars) &lt;- cluster_vars$SUBZONE_N\n\ncluster_vars &lt;- cluster_vars %&gt;% \n  select(-1)\n\ncluster_vars.corr = cor(cluster_vars)\n\ncorrplot.mixed(cluster_vars.corr, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn this section, we explore the possibility and usefulness of standardising the ammenity counts either via a Min-Max method, or a Z-score method.\n\n\n\n\nReveal Code\nammenities.std &lt;- cluster_vars %&gt;% \n  normalize()\n\ndescribe(ammenities.std)\n\n\n                  vars   n mean   sd median trimmed  mad min max range skew\nhawker_count         1 323 0.07 0.14   0.00    0.04 0.00   0   1     1 2.59\nmrt_count            2 323 0.13 0.20   0.00    0.08 0.00   0   1     1 1.72\nschool_count         3 323 0.10 0.16   0.00    0.06 0.00   0   1     1 2.15\nsupermarket_count    4 323 0.12 0.17   0.06    0.08 0.08   0   1     1 2.16\nmall_count           5 323 0.05 0.10   0.00    0.02 0.00   0   1     1 4.60\n                  kurtosis   se\nhawker_count          9.13 0.01\nmrt_count             2.59 0.01\nschool_count          5.51 0.01\nsupermarket_count     5.88 0.01\nmall_count           31.91 0.01\n\n\n\n\n\n\n\nReveal Code\nammenities.z &lt;- cluster_vars %&gt;% \n  scale()\n\ndescribe(ammenities.z)\n\n\n                  vars   n mean sd median trimmed  mad   min  max range skew\nhawker_count         1 323    0  1  -0.51   -0.21 0.00 -0.51 6.67  7.18 2.59\nmrt_count            2 323    0  1  -0.65   -0.21 0.00 -0.65 4.44  5.09 1.72\nschool_count         3 323    0  1  -0.62   -0.22 0.00 -0.62 5.74  6.36 2.15\nsupermarket_count    4 323    0  1  -0.37   -0.21 0.49 -0.70 5.20  5.90 2.16\nmall_count           5 323    0  1  -0.46   -0.22 0.00 -0.46 9.45  9.91 4.60\n                  kurtosis   se\nhawker_count          9.13 0.06\nmrt_count             2.59 0.06\nschool_count          5.51 0.06\nsupermarket_count     5.88 0.06\nmall_count           31.91 0.06\n\n\n\n\n\n\n\nReveal Code\nraw &lt;- ammenities %&gt;% \n  ggplot(aes(x = mrt_count)) + \n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nmin_max &lt;- as.data.frame(ammenities.std) %&gt;% \n  ggplot(aes(x = mrt_count)) + \n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nz_score &lt;- as.data.frame(ammenities.z) %&gt;% \n  ggplot(aes(x=mrt_count)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(raw, min_max, z_score,\n          ncol = 3,\n          nrow = 1)\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn this section, we conduct an analysis into the clustering options that we have for our data set. This involves both the number of clusters to impose on the data set as well as how to assign the planning subzones of Singapore to each cluster.\n\n\n\n\nReveal Code\nproxmat &lt;- dist(cluster_vars, method = 'euclidean')\n\nglimpse(proxmat)\n\n\n 'dist' Named num [1:52003] 2.83 1 1.73 9.27 5.66 ...\n - attr(*, \"Size\")= int 323\n - attr(*, \"Labels\")= chr [1:323] \"MARINA SOUTH\" \"PEARL'S HILL\" \"BOAT QUAY\" \"HENDERSON HILL\" ...\n - attr(*, \"Diag\")= logi FALSE\n - attr(*, \"Upper\")= logi FALSE\n - attr(*, \"method\")= chr \"euclidean\"\n - attr(*, \"call\")= language dist(x = cluster_vars, method = \"euclidean\")\n\n\n\n\n\n\n\nReveal Code\nhclust_ward &lt;- hclust(proxmat, method = 'ward.D')\n\nplot(hclust_ward, cex = 0.6)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nm &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(m) &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\n\nac &lt;- function(x) {\n  agnes(cluster_vars, method = x)$ac\n}\n\nmap_dbl(m, ac)\n\n\n  average    single  complete      ward \n0.9699296 0.9314472 0.9762926 0.9929238 \n\n\n\n\n\n\n\nReveal Code\nset.seed(3414)\n\ngap_stat &lt;- clusGap(cluster_vars, \n                    FUN = hcut, \n                    nstart = 25, \n                    K.max = 10, \n                    B = 50)\n\nprint(gap_stat, method = \"firstmax\")\n\n\nClustering Gap statistic [\"clusGap\"] from call:\nclusGap(x = cluster_vars, FUNcluster = hcut, K.max = 10, B = 50, nstart = 25)\nB=50 simulated reference sets, k = 1..10; spaceH0=\"scaledPCA\"\n --&gt; Number of clusters (method 'firstmax'): 1\n          logW   E.logW       gap     SE.sim\n [1,] 6.325557 7.115213 0.7896558 0.01977236\n [2,] 6.039009 6.737219 0.6982097 0.03031823\n [3,] 5.677948 6.587958 0.9100103 0.01782539\n [4,] 5.604292 6.506238 0.9019462 0.01598875\n [5,] 5.450873 6.441470 0.9905970 0.01589834\n [6,] 5.398148 6.384807 0.9866584 0.01543982\n [7,] 5.307666 6.336286 1.0286202 0.01358782\n [8,] 5.249895 6.295029 1.0451340 0.01446652\n [9,] 5.225717 6.258801 1.0330831 0.01422794\n[10,] 5.185183 6.228903 1.0437197 0.01471536\n\n\n\n\nAfter computation of the Gap-statistics, we can visualise the results via the fviz_gap_stat() function. From the graph drawn, we could use either 8 or 10 clusters in our algorithm as they are quite similar in effectiveness in capturing the clustering patterns of ammenity options across Singapore. Lesser clusters like 7 or 5 might be possible but not optimal. For the rest of this analysis, 8 shall be used as it is more parsimonious than 10 whilst having an indistinguishable Gap statistic.\n\n\nReveal Code\nfviz_gap_stat(gap_stat)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn this section, we shall outline how the UI design will work. The main selectable variable here will be the number of clusters used in the clustering algorithm. For the purpose of this demonstration, 8 shall be the default as it is the optimal number computed using Gap-statistics as a measure. Other selectables to be included are the parts of Singapore to be analysed, the used of planning zone types (i.e. subzone, region etc.) and the types of ammenities to be investigated.\n\n\nHere we will produce the cluster dendrogram with each cluster highlighted based on the requested number of clusters selected from above.\n\n\nReveal Code\nplot(hclust_ward, cex = 0.6)\n\nrect.hclust(hclust_ward, \n            k = 8, \n            border = 2:5)\n\n\n\n\n\n\n\n\n\n\n\n\nLike above, the following UI will demonstrate how the clustering mechanism works based on a requested number of clusters selected. Additionally, options to apply different standardisation options will be included. Here, standardisation via Z-score is used for the demonstration.\n\n\nReveal Code\nammenities_mat &lt;- data.matrix(ammenities)\n\nheatmaply(normalize(ammenities_mat),\n          Colv = NA,\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\",\n          seriate = \"OLO\",\n          colors = Blues,\n          k_row = 8,\n          margins = c(NA, 200, 60, NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main = \"Geographic Segmentation of Singapore by ammenities available\",\n          xlab = \"Types of Ammenity\",\n          ylab = \"Planning Subzone\"\n          )\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\ngroups &lt;- as.factor(cutree(hclust_ward, k = 8))\n\nammenities_sf_cluster &lt;- cbind(ammenities_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER`=`as.matrix.groups.`)\n\n\n\n\n\nLastly, this section will give the user a geographical visualisation of the clustering pattern of ammenities in Singapore based on the number of clusters selected.\n\n\nReveal Code\nqtm(ammenities_sf_cluster, \"CLUSTER\") + \n  tm_layout(main.title = \"Ammenity Clusters of Singapore\") + \n  tm_compass(type = \"rose\") +\n  tm_scale_bar()"
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_03/Take-Home_Exercise_03.html#preparing-the-r-environment",
    "href": "Take-Home_Exercise/Take-Home_Exercise_03/Take-Home_Exercise_03.html#preparing-the-r-environment",
    "title": "Take-Home Exercise 3: Prototyping geospatial segmentation module for analysis of accessibility in Singapore",
    "section": "",
    "text": "Reveal Code\npacman::p_load(rgdal, sfdep, tmap, sf, ggpubr, cluster, factoextra, heatmaply, corrplot, tidyverse, psych)\n\n\n\n\n\n\n\nReveal Code\nsg_sf &lt;- st_read(dsn = \"data/geospatial/Master Plan 2014\", layer = \"MP14_SUBZONE_WEB_PL\") %&gt;% \n  st_transform(crs = 3414)\n\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\Users\\yungq\\Desktop\\SMU Modules\\Y4S1\\Geospatial Analysis and Applications\\IS415 Course Website\\Take-Home_Exercise\\Take-Home_Exercise_03\\data\\geospatial\\Master Plan 2014' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nReveal Code\nsummary(sg_sf)\n\n\n    OBJECTID       SUBZONE_NO      SUBZONE_N          SUBZONE_C        \n Min.   :  1.0   Min.   : 1.000   Length:323         Length:323        \n 1st Qu.: 81.5   1st Qu.: 2.000   Class :character   Class :character  \n Median :162.0   Median : 4.000   Mode  :character   Mode  :character  \n Mean   :162.0   Mean   : 4.625                                        \n 3rd Qu.:242.5   3rd Qu.: 6.500                                        \n Max.   :323.0   Max.   :17.000                                        \n    CA_IND           PLN_AREA_N         PLN_AREA_C          REGION_N        \n Length:323         Length:323         Length:323         Length:323        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   REGION_C           INC_CRC            FMEL_UPD_D             X_ADDR     \n Length:323         Length:323         Min.   :2014-12-05   Min.   : 5093  \n Class :character   Class :character   1st Qu.:2014-12-05   1st Qu.:21864  \n Mode  :character   Mode  :character   Median :2014-12-05   Median :28465  \n                                       Mean   :2014-12-05   Mean   :27257  \n                                       3rd Qu.:2014-12-05   3rd Qu.:31674  \n                                       Max.   :2014-12-05   Max.   :50425  \n     Y_ADDR        SHAPE_Leng        SHAPE_Area                geometry  \n Min.   :19579   Min.   :  871.5   Min.   :   39438   MULTIPOLYGON :323  \n 1st Qu.:31776   1st Qu.: 3709.6   1st Qu.:  628261   epsg:3414    :  0  \n Median :35113   Median : 5211.9   Median : 1229894   +proj=tmer...:  0  \n Mean   :36106   Mean   : 6524.4   Mean   : 2420882                      \n 3rd Qu.:39869   3rd Qu.: 6942.6   3rd Qu.: 2106483                      \n Max.   :49553   Max.   :68083.9   Max.   :69748299                      \n\n\nReveal Code\nsg_sf %&gt;%\n  tm_shape() +\n  tm_polygons(col = \"lightyellow\") + \n  tm_compass(type = \"rose\") + \n  tm_scale_bar() + \n  tm_layout(main.title = \"Singapore Planning Subzone 2019\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nhawker = read_csv(\"data/aspatial/hawker_coordinates.csv\") %&gt;% \n  select(-1)\nmrt = read_csv(\"data/aspatial/MRT_coordinates.csv\") %&gt;% \n  select(-1)\nschool = read_csv(\"data/aspatial/school_coordinates.csv\") %&gt;% \n  select(-1)\nsupermarket = read_csv(\"data/aspatial/supermarket_coordinates.csv\") %&gt;% \n  select(-1)\nmall = read_csv(\"data/aspatial/mall_coordinates.csv\") %&gt;% \n  select(-1)\n\nglimpse(hawker)\n\n\nRows: 115\nColumns: 5\n$ `Name of Hawker Centre`                    &lt;chr&gt; \"Amoy Street Food Centre\", …\n$ `Common Property  Managed & Maintained by` &lt;chr&gt; \"NEA\", \"NEA\", \"NEA\", \"NEA\",…\n$ Address                                    &lt;chr&gt; \"7 MAXWELL ROAD DBS AMOY ST…\n$ Latitude                                   &lt;dbl&gt; 1.279231, 1.320347, 1.28883…\n$ Longitude                                  &lt;dbl&gt; 103.8466, 103.9555, 103.827…\n\n\nReveal Code\nglimpse(mrt)\n\n\nRows: 205\nColumns: 5\n$ STATION_NAME &lt;chr&gt; \"ADMIRALTY MRT STATION\", \"ALJUNIED MRT STATION\", \"ANG MO …\n$ STATION_NO   &lt;chr&gt; \"NS10\", \"EW9\", \"NS16\", \"SE3\", \"BP9\", \"CC12\", \"DT16\", \"CE1…\n$ COLOR        &lt;chr&gt; \"RED\", \"GREEN\", \"RED\", \"OTHERS\", \"OTHERS\", \"YELLOW\", \"BLU…\n$ Latitude     &lt;dbl&gt; 1.440585, 1.316433, 1.369933, 1.388093, 1.380018, 1.34282…\n$ Longitude    &lt;dbl&gt; 103.8010, 103.8829, 103.8496, 103.9054, 103.7727, 103.879…\n\n\nReveal Code\nglimpse(school)\n\n\nRows: 410\nColumns: 6\n$ SCHOOL    &lt;chr&gt; \"Admiralty Primary School\", \"Ahmad Ibrahim Primary School\", …\n$ AREA      &lt;chr&gt; \"Woodlands\", \"Yishun\", \"Bishan\", \"Bukit Merah\", \"Sengkang\", …\n$ TYPE      &lt;chr&gt; \"Primary\", \"Primary\", \"Primary\", \"Primary\", \"Primary\", \"Prim…\n$ ADDRESS   &lt;chr&gt; \"11 WOODLANDS CIRCLE ADMIRALTY PRIMARY SCHOOL SINGAPORE 7389…\n$ Latitude  &lt;dbl&gt; 1.442635, 1.433153, 1.360583, 1.291334, 1.390370, 1.384264, …\n$ Longitude &lt;dbl&gt; 103.8000, 103.8329, 103.8330, 103.8244, 103.8872, 103.8414, …\n\n\nReveal Code\nglimpse(supermarket)\n\n\nRows: 1,378\nColumns: 11\n$ SEARCHVAL &lt;chr&gt; \"DBS 112 KATONG\", \"GOLDEN VILLAGE (GV KATONG)\", \"112 KATONG\"…\n$ BLK_NO    &lt;chr&gt; \"112\", \"112\", \"112\", \"112\", \"11\", \"11\", \"11\", \"11\", \"2\", \"2\"…\n$ ROAD_NAME &lt;chr&gt; \"EAST COAST ROAD\", \"EAST COAST ROAD\", \"EAST COAST ROAD\", \"EA…\n$ BUILDING  &lt;chr&gt; \"DBS 112 KATONG\", \"GOLDEN VILLAGE (GV KATONG)\", \"112 KATONG\"…\n$ ADDRESS   &lt;chr&gt; \"112 EAST COAST ROAD DBS 112 KATONG SINGAPORE 428802\", \"112 …\n$ POSTAL    &lt;dbl&gt; 428802, 428802, 428802, 428802, 437157, 437157, 437157, 4371…\n$ X         &lt;dbl&gt; 35984.93, 35988.82, 35982.62, 35982.37, 34835.39, 34835.39, …\n$ Y         &lt;dbl&gt; 31943.42, 31950.74, 31948.74, 31950.57, 32989.44, 32989.44, …\n$ Latitude  &lt;dbl&gt; 1.305158, 1.305225, 1.305207, 1.305223, 1.314618, 1.314618, …\n$ Longitude &lt;dbl&gt; 103.9051, 103.9051, 103.9050, 103.9050, 103.8947, 103.8947, …\n$ address   &lt;dbl&gt; 428802, 428802, 428802, 428802, 437157, 437157, 437157, 4371…\n\n\nReveal Code\nglimpse(mall)\n\n\nRows: 165\nColumns: 6\n$ MALL      &lt;chr&gt; \"Sun Plaza\", \"Orchard Gateway\", \"The Poiz\", \"Buangkok Square…\n$ ADDRESS   &lt;chr&gt; \"30 SEMBAWANG DRIVE SUN PLAZA SINGAPORE 757713\", \"277 ORCHAR…\n$ POSTAL    &lt;chr&gt; \"757713\", \"238858\", \"358472\", \"530991\", \"556083\", \"730900\", …\n$ Latitude  &lt;dbl&gt; 1.448195, 1.300443, 1.332027, 1.384334, 1.350769, 1.435018, …\n$ Longitude &lt;dbl&gt; 103.8195, 103.8394, 103.8687, 103.8816, 103.8723, 103.7869, …\n$ ROAD_NAME &lt;chr&gt; \"SEMBAWANG DRIVE\", \"ORCHARD ROAD\", \"MEYAPPA CHETTIAR ROAD\", …\n\n\n\n\n\nUsing the Latitude and Longitude fields in the aspatial data sets to transform them into sf objects using st_as_sf().\n\n\nReveal Code\nhawker_sf &lt;- hawker %&gt;% \n  st_as_sf(coords = c(\"Longitude\", \"Latitude\"), crs = 4326) %&gt;% \n  st_transform(crs = 3414)\n\nmrt_sf &lt;- mrt %&gt;% \n  st_as_sf(coords = c(\"Longitude\", \"Latitude\"), crs = 4326) %&gt;% \n  st_transform(crs = 3414)\n\nschool_sf &lt;- school %&gt;% \n  st_as_sf(coords = c(\"Longitude\", \"Latitude\"), crs = 4326) %&gt;% \n  st_transform(crs = 3414)\n\nsupermarket_sf &lt;- supermarket %&gt;% \n  st_as_sf(coords = c(\"Longitude\", \"Latitude\"), crs = 4326) %&gt;% \n  st_transform(crs = 3414)\n\nmall_sf &lt;- mall %&gt;% \n  st_as_sf(coords = c(\"Longitude\", \"Latitude\"), crs = 4326) %&gt;% \n  st_transform(crs = 3414)\n\nsummary(hawker_sf)\n\n\n Name of Hawker Centre Common Property  Managed & Maintained by\n Length:115            Length:115                              \n Class :character      Class :character                        \n Mode  :character      Mode  :character                        \n   Address                   geometry  \n Length:115         POINT        :115  \n Class :character   epsg:3414    :  0  \n Mode  :character   +proj=tmer...:  0  \n\n\nReveal Code\nsummary(mrt_sf)\n\n\n STATION_NAME        STATION_NO           COLOR                    geometry  \n Length:205         Length:205         Length:205         POINT        :205  \n Class :character   Class :character   Class :character   epsg:3414    :  0  \n Mode  :character   Mode  :character   Mode  :character   +proj=tmer...:  0  \n\n\nReveal Code\nsummary(school_sf)\n\n\n    SCHOOL              AREA               TYPE             ADDRESS         \n Length:410         Length:410         Length:410         Length:410        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n          geometry  \n POINT        :410  \n epsg:3414    :  0  \n +proj=tmer...:  0  \n\n\nReveal Code\nsummary(supermarket_sf)\n\n\n  SEARCHVAL            BLK_NO           ROAD_NAME           BUILDING        \n Length:1378        Length:1378        Length:1378        Length:1378       \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   ADDRESS              POSTAL             X               Y        \n Length:1378        Min.   : 18961   Min.   : 4907   Min.   :25506  \n Class :character   1st Qu.:270036   1st Qu.:22842   1st Qu.:32442  \n Mode  :character   Median :528833   Median :28829   Median :35234  \n                    Mean   :472342   Mean   :28305   Mean   :36239  \n                    3rd Qu.:640615   3rd Qu.:34067   3rd Qu.:39513  \n                    Max.   :828761   Max.   :47022   Max.   :49231  \n    address                geometry   \n Min.   : 18961   POINT        :1378  \n 1st Qu.:287994   epsg:3414    :   0  \n Median :529286   +proj=tmer...:   0  \n Mean   :476920                       \n 3rd Qu.:650164                       \n Max.   :828761                       \n\n\nReveal Code\nsummary(mall_sf)\n\n\n     MALL             ADDRESS             POSTAL           ROAD_NAME        \n Length:165         Length:165         Length:165         Length:165        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n          geometry  \n POINT        :165  \n epsg:3414    :  0  \n +proj=tmer...:  0"
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_03/Take-Home_Exercise_03.html#performing-correlation-analysis-of-the-listed-ammenities",
    "href": "Take-Home_Exercise/Take-Home_Exercise_03/Take-Home_Exercise_03.html#performing-correlation-analysis-of-the-listed-ammenities",
    "title": "Take-Home Exercise 3: Prototyping geospatial segmentation module for analysis of accessibility in Singapore",
    "section": "",
    "text": "Here, we compute the number of each ammenity found in each planning subzone of Singapore using st_intersects() and lengths() functions, and compile them into a single sf object using bind_cols().\n\n\nReveal Code\nhawker_count &lt;- st_intersects(sg_sf, hawker_sf) %&gt;% \n  lengths()\n\nmrt_count &lt;- st_intersects(sg_sf, mrt_sf) %&gt;% \n  lengths()\n\nschool_count &lt;- st_intersects(sg_sf, school_sf) %&gt;% \n  lengths()\n\nsupermarket_count &lt;- st_intersects(sg_sf, supermarket_sf) %&gt;% \n  lengths()\n\nmall_count &lt;- st_intersects(sg_sf, mall_sf) %&gt;% \n  lengths()\n\nammenities_sf &lt;- sg_sf %&gt;% \n  bind_cols(hawker_count = hawker_count, \n            mrt_count = mrt_count, \n            school_count = school_count,\n            supermarket_count = supermarket_count,\n            mall_count = mall_count)\n\nammenities_sf\n\n\nSimple feature collection with 323 features and 20 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area hawker_count mrt_count school_count\n1  29220.19   5267.381  1630379.3            0         1            0\n2  29782.05   3506.107   559816.2            2         0            1\n3  29974.66   1740.926   160807.5            0         0            0\n4  29933.77   3313.625   595428.9            1         0            1\n5  30005.70   2825.594   387429.4            2         1            1\n6  29991.38   4428.913  1030378.8            2         0            1\n7  30230.86   3275.312   551732.0            2         1            0\n8  30222.86   2208.619   290184.7            0         2            0\n9  29893.78   6571.323  1084792.3            0         1            0\n10 30104.18   3454.239   631644.3            0         0            0\n   supermarket_count mall_count                       geometry\n1                  0          0 MULTIPOLYGON (((31495.56 30...\n2                  1          1 MULTIPOLYGON (((29092.28 30...\n3                  0          0 MULTIPOLYGON (((29932.33 29...\n4                  0          0 MULTIPOLYGON (((27131.28 30...\n5                  9          0 MULTIPOLYGON (((26451.03 30...\n6                  5          1 MULTIPOLYGON (((25899.7 297...\n7                  4          0 MULTIPOLYGON (((27746.95 30...\n8                  0          1 MULTIPOLYGON (((29351.26 29...\n9                  0          0 MULTIPOLYGON (((20996.49 30...\n10                 0          1 MULTIPOLYGON (((24472.11 29...\n\n\n\n\n\nWe drop the geometric properties of the ammenities sf object here using st_drop_geometry() for use in computation functions later on.\n\n\nReveal Code\nammenities &lt;- ammenities_sf[, c(3, 16:20)] %&gt;% \n  st_drop_geometry()\n\n\n\n\n\nThe correlational table between the ammenity counts are computed and visualised here using cor() and corrplot.mixed() respectively.\n\n\nReveal Code\ncluster_vars &lt;- ammenities\n  \nrow.names(cluster_vars) &lt;- cluster_vars$SUBZONE_N\n\ncluster_vars &lt;- cluster_vars %&gt;% \n  select(-1)\n\ncluster_vars.corr = cor(cluster_vars)\n\ncorrplot.mixed(cluster_vars.corr, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")"
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_03/Take-Home_Exercise_03.html#exploring-data-standardisation-options",
    "href": "Take-Home_Exercise/Take-Home_Exercise_03/Take-Home_Exercise_03.html#exploring-data-standardisation-options",
    "title": "Take-Home Exercise 3: Prototyping geospatial segmentation module for analysis of accessibility in Singapore",
    "section": "",
    "text": "In this section, we explore the possibility and usefulness of standardising the ammenity counts either via a Min-Max method, or a Z-score method.\n\n\n\n\nReveal Code\nammenities.std &lt;- cluster_vars %&gt;% \n  normalize()\n\ndescribe(ammenities.std)\n\n\n                  vars   n mean   sd median trimmed  mad min max range skew\nhawker_count         1 323 0.07 0.14   0.00    0.04 0.00   0   1     1 2.59\nmrt_count            2 323 0.13 0.20   0.00    0.08 0.00   0   1     1 1.72\nschool_count         3 323 0.10 0.16   0.00    0.06 0.00   0   1     1 2.15\nsupermarket_count    4 323 0.12 0.17   0.06    0.08 0.08   0   1     1 2.16\nmall_count           5 323 0.05 0.10   0.00    0.02 0.00   0   1     1 4.60\n                  kurtosis   se\nhawker_count          9.13 0.01\nmrt_count             2.59 0.01\nschool_count          5.51 0.01\nsupermarket_count     5.88 0.01\nmall_count           31.91 0.01\n\n\n\n\n\n\n\nReveal Code\nammenities.z &lt;- cluster_vars %&gt;% \n  scale()\n\ndescribe(ammenities.z)\n\n\n                  vars   n mean sd median trimmed  mad   min  max range skew\nhawker_count         1 323    0  1  -0.51   -0.21 0.00 -0.51 6.67  7.18 2.59\nmrt_count            2 323    0  1  -0.65   -0.21 0.00 -0.65 4.44  5.09 1.72\nschool_count         3 323    0  1  -0.62   -0.22 0.00 -0.62 5.74  6.36 2.15\nsupermarket_count    4 323    0  1  -0.37   -0.21 0.49 -0.70 5.20  5.90 2.16\nmall_count           5 323    0  1  -0.46   -0.22 0.00 -0.46 9.45  9.91 4.60\n                  kurtosis   se\nhawker_count          9.13 0.06\nmrt_count             2.59 0.06\nschool_count          5.51 0.06\nsupermarket_count     5.88 0.06\nmall_count           31.91 0.06\n\n\n\n\n\n\n\nReveal Code\nraw &lt;- ammenities %&gt;% \n  ggplot(aes(x = mrt_count)) + \n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Raw values without standardisation\")\n\nmin_max &lt;- as.data.frame(ammenities.std) %&gt;% \n  ggplot(aes(x = mrt_count)) + \n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Min-Max Standardisation\")\n\nz_score &lt;- as.data.frame(ammenities.z) %&gt;% \n  ggplot(aes(x=mrt_count)) +\n  geom_density(color=\"black\",\n               fill=\"light blue\") +\n  ggtitle(\"Z-score Standardisation\")\n\nggarrange(raw, min_max, z_score,\n          ncol = 3,\n          nrow = 1)"
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_03/Take-Home_Exercise_03.html#conducting-clustering-analysis-upon-the-ammenities-data-in-singapore",
    "href": "Take-Home_Exercise/Take-Home_Exercise_03/Take-Home_Exercise_03.html#conducting-clustering-analysis-upon-the-ammenities-data-in-singapore",
    "title": "Take-Home Exercise 3: Prototyping geospatial segmentation module for analysis of accessibility in Singapore",
    "section": "",
    "text": "In this section, we conduct an analysis into the clustering options that we have for our data set. This involves both the number of clusters to impose on the data set as well as how to assign the planning subzones of Singapore to each cluster.\n\n\n\n\nReveal Code\nproxmat &lt;- dist(cluster_vars, method = 'euclidean')\n\nglimpse(proxmat)\n\n\n 'dist' Named num [1:52003] 2.83 1 1.73 9.27 5.66 ...\n - attr(*, \"Size\")= int 323\n - attr(*, \"Labels\")= chr [1:323] \"MARINA SOUTH\" \"PEARL'S HILL\" \"BOAT QUAY\" \"HENDERSON HILL\" ...\n - attr(*, \"Diag\")= logi FALSE\n - attr(*, \"Upper\")= logi FALSE\n - attr(*, \"method\")= chr \"euclidean\"\n - attr(*, \"call\")= language dist(x = cluster_vars, method = \"euclidean\")\n\n\n\n\n\n\n\nReveal Code\nhclust_ward &lt;- hclust(proxmat, method = 'ward.D')\n\nplot(hclust_ward, cex = 0.6)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nm &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(m) &lt;- c( \"average\", \"single\", \"complete\", \"ward\")\n\nac &lt;- function(x) {\n  agnes(cluster_vars, method = x)$ac\n}\n\nmap_dbl(m, ac)\n\n\n  average    single  complete      ward \n0.9699296 0.9314472 0.9762926 0.9929238 \n\n\n\n\n\n\n\nReveal Code\nset.seed(3414)\n\ngap_stat &lt;- clusGap(cluster_vars, \n                    FUN = hcut, \n                    nstart = 25, \n                    K.max = 10, \n                    B = 50)\n\nprint(gap_stat, method = \"firstmax\")\n\n\nClustering Gap statistic [\"clusGap\"] from call:\nclusGap(x = cluster_vars, FUNcluster = hcut, K.max = 10, B = 50, nstart = 25)\nB=50 simulated reference sets, k = 1..10; spaceH0=\"scaledPCA\"\n --&gt; Number of clusters (method 'firstmax'): 1\n          logW   E.logW       gap     SE.sim\n [1,] 6.325557 7.115213 0.7896558 0.01977236\n [2,] 6.039009 6.737219 0.6982097 0.03031823\n [3,] 5.677948 6.587958 0.9100103 0.01782539\n [4,] 5.604292 6.506238 0.9019462 0.01598875\n [5,] 5.450873 6.441470 0.9905970 0.01589834\n [6,] 5.398148 6.384807 0.9866584 0.01543982\n [7,] 5.307666 6.336286 1.0286202 0.01358782\n [8,] 5.249895 6.295029 1.0451340 0.01446652\n [9,] 5.225717 6.258801 1.0330831 0.01422794\n[10,] 5.185183 6.228903 1.0437197 0.01471536\n\n\n\n\nAfter computation of the Gap-statistics, we can visualise the results via the fviz_gap_stat() function. From the graph drawn, we could use either 8 or 10 clusters in our algorithm as they are quite similar in effectiveness in capturing the clustering patterns of ammenity options across Singapore. Lesser clusters like 7 or 5 might be possible but not optimal. For the rest of this analysis, 8 shall be used as it is more parsimonious than 10 whilst having an indistinguishable Gap statistic.\n\n\nReveal Code\nfviz_gap_stat(gap_stat)"
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_03/Take-Home_Exercise_03.html#ui-design",
    "href": "Take-Home_Exercise/Take-Home_Exercise_03/Take-Home_Exercise_03.html#ui-design",
    "title": "Take-Home Exercise 3: Prototyping geospatial segmentation module for analysis of accessibility in Singapore",
    "section": "",
    "text": "Reveal Code\nplot(hclust_ward, cex = 0.6)\n\nrect.hclust(hclust_ward, \n            k = 8, \n            border = 2:5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\nammenities_mat &lt;- data.matrix(ammenities)\n\nheatmaply(normalize(ammenities_mat),\n          Colv = NA,\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\",\n          seriate = \"OLO\",\n          colors = Blues,\n          k_row = 8,\n          margins = c(NA, 200, 60, NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main = \"Geographic Segmentation of Singapore by ammenities available\",\n          xlab = \"Types of Ammenity\",\n          ylab = \"Planning Subzone\"\n          )\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\ngroups &lt;- as.factor(cutree(hclust_ward, k = 8))\n\nammenities_sf_cluster &lt;- cbind(ammenities_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER`=`as.matrix.groups.`)\n\n\n\n\n\n\n\nReveal Code\nqtm(ammenities_sf_cluster, \"CLUSTER\") + \n  tm_layout(main.title = \"Ammenity Clusters of Singapore\") + \n  tm_compass(type = \"rose\") +\n  tm_scale_bar()"
  },
  {
    "objectID": "Take-Home_Exercise/Take-Home_Exercise_03/Take-Home_Exercise_03.html#user-interface-design",
    "href": "Take-Home_Exercise/Take-Home_Exercise_03/Take-Home_Exercise_03.html#user-interface-design",
    "title": "Take-Home Exercise 3: Prototyping geospatial segmentation module for analysis of accessibility in Singapore",
    "section": "",
    "text": "In this section, we shall outline how the UI design will work. The main selectable variable here will be the number of clusters used in the clustering algorithm. For the purpose of this demonstration, 8 shall be the default as it is the optimal number computed using Gap-statistics as a measure. Other selectables to be included are the parts of Singapore to be analysed, the used of planning zone types (i.e. subzone, region etc.) and the types of ammenities to be investigated.\n\n\nHere we will produce the cluster dendrogram with each cluster highlighted based on the requested number of clusters selected from above.\n\n\nReveal Code\nplot(hclust_ward, cex = 0.6)\n\nrect.hclust(hclust_ward, \n            k = 8, \n            border = 2:5)\n\n\n\n\n\n\n\n\n\n\n\n\nLike above, the following UI will demonstrate how the clustering mechanism works based on a requested number of clusters selected. Additionally, options to apply different standardisation options will be included. Here, standardisation via Z-score is used for the demonstration.\n\n\nReveal Code\nammenities_mat &lt;- data.matrix(ammenities)\n\nheatmaply(normalize(ammenities_mat),\n          Colv = NA,\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\",\n          seriate = \"OLO\",\n          colors = Blues,\n          k_row = 8,\n          margins = c(NA, 200, 60, NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main = \"Geographic Segmentation of Singapore by ammenities available\",\n          xlab = \"Types of Ammenity\",\n          ylab = \"Planning Subzone\"\n          )\n\n\n\n\n\n\n\n\n\n\n\nReveal Code\ngroups &lt;- as.factor(cutree(hclust_ward, k = 8))\n\nammenities_sf_cluster &lt;- cbind(ammenities_sf, as.matrix(groups)) %&gt;%\n  rename(`CLUSTER`=`as.matrix.groups.`)\n\n\n\n\n\nLastly, this section will give the user a geographical visualisation of the clustering pattern of ammenities in Singapore based on the number of clusters selected.\n\n\nReveal Code\nqtm(ammenities_sf_cluster, \"CLUSTER\") + \n  tm_layout(main.title = \"Ammenity Clusters of Singapore\") + \n  tm_compass(type = \"rose\") +\n  tm_scale_bar()"
  }
]